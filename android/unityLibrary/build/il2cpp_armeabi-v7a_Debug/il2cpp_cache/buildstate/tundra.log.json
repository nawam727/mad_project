{"msg":"init","dagFile":"C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/bee.dag","targets":["FinalProgram"]}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"FinalProgram","enqueuedNodeIndex":524}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.so","enqueuedNodeIndex":521,"enqueueingNodeAnnotation":"FinalProgram","enqueueingNodeIndex":524}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.so","enqueuedNodeIndex":520,"enqueueingNodeAnnotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.so","enqueueingNodeIndex":521}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/stripped/libil2cpp.so","enqueuedNodeIndex":518,"enqueueingNodeAnnotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.so","enqueueingNodeIndex":520}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.dbg.so","enqueuedNodeIndex":517,"enqueueingNodeAnnotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/stripped/libil2cpp.so","enqueueingNodeIndex":518}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueuedNodeIndex":516,"enqueueingNodeAnnotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.dbg.so","enqueueingNodeIndex":517}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 aa4b/mpavjz22hxa8.o","enqueuedNodeIndex":2,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"WriteText aa4b/_dummy_for_header_discovery","enqueuedNodeIndex":1,"enqueueingNodeAnnotation":"C_Android_arm32 aa4b/mpavjz22hxa8.o","enqueueingNodeIndex":2}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 aa4b/b4xvgdn6zuwb.o","enqueuedNodeIndex":3,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/qy6anwdowhix.o","enqueuedNodeIndex":5,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"WriteText o1sj/_dummy_for_header_discovery","enqueuedNodeIndex":4,"enqueueingNodeAnnotation":"C_Android_arm32 o1sj/qy6anwdowhix.o","enqueueingNodeIndex":5}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/4qy28hgvf7va.o","enqueuedNodeIndex":6,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/wqy73ylodk0v.o","enqueuedNodeIndex":7,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/2n2ktbsbhzpp.o","enqueuedNodeIndex":8,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/r59bzxxo6vme.o","enqueuedNodeIndex":9,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/a4g6lqymnrn7.o","enqueuedNodeIndex":10,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/ltjjs01vaehc.o","enqueuedNodeIndex":11,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/di7b7sb2tc75.o","enqueuedNodeIndex":12,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/6gtlpxl33tej.o","enqueuedNodeIndex":13,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/sa3pkhttynty.o","enqueuedNodeIndex":14,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/tatvm3o22o3y.o","enqueuedNodeIndex":15,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/ikp0szum49as.o","enqueuedNodeIndex":16,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/f6p8muaxuqqu.o","enqueuedNodeIndex":17,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 o1sj/dzd211bxb7iw.o","enqueuedNodeIndex":18,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 l3s9/o9utnlxltzml.o","enqueuedNodeIndex":24,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump l3s9/31nfg42ed8r10.lump.cpp","enqueuedNodeIndex":19,"enqueueingNodeAnnotation":"C_Android_arm32 l3s9/o9utnlxltzml.o","enqueueingNodeIndex":24}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"WriteText l3s9/_dummy_for_header_discovery","enqueuedNodeIndex":23,"enqueueingNodeAnnotation":"C_Android_arm32 l3s9/o9utnlxltzml.o","enqueueingNodeIndex":24}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 l3s9/rs5bptvppf3f.o","enqueuedNodeIndex":25,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump l3s9/31nfg42ed8r11.lump.cpp","enqueuedNodeIndex":20,"enqueueingNodeAnnotation":"C_Android_arm32 l3s9/rs5bptvppf3f.o","enqueueingNodeIndex":25}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 l3s9/ubguq1ttlvja.o","enqueuedNodeIndex":26,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump l3s9/31nfg42ed8r12.lump.cpp","enqueuedNodeIndex":21,"enqueueingNodeAnnotation":"C_Android_arm32 l3s9/ubguq1ttlvja.o","enqueueingNodeIndex":26}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 l3s9/dn74wfuyip50.o","enqueuedNodeIndex":27,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump l3s9/31nfg42ed8r13.lump.cpp","enqueuedNodeIndex":22,"enqueueingNodeAnnotation":"C_Android_arm32 l3s9/dn74wfuyip50.o","enqueueingNodeIndex":27}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/dbezd06ubz2u.o","enqueuedNodeIndex":29,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"WriteText nwd5/_dummy_for_header_discovery","enqueuedNodeIndex":28,"enqueueingNodeAnnotation":"C_Android_arm32 nwd5/dbezd06ubz2u.o","enqueueingNodeIndex":29}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/eex46bvh8ml1.o","enqueuedNodeIndex":30,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/e70zyvym60b1.o","enqueuedNodeIndex":31,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/p0eksv2dn14i.o","enqueuedNodeIndex":32,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/bx6356gli0fz.o","enqueuedNodeIndex":33,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/ddf6puf5e72i.o","enqueuedNodeIndex":34,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/7fv3hbnxfm84.o","enqueuedNodeIndex":35,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/hhgmjh2fyr58.o","enqueuedNodeIndex":36,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/lahkhsk72kjt.o","enqueuedNodeIndex":37,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/dl8vvc0p0dd2.o","enqueuedNodeIndex":38,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/l97eu1vzgc6d.o","enqueuedNodeIndex":39,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/6m1lo2dqvkr2.o","enqueuedNodeIndex":40,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/hnurtvy1q6gx.o","enqueuedNodeIndex":41,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/ojffwziafkkr.o","enqueuedNodeIndex":42,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/kn85on42dw1c.o","enqueuedNodeIndex":43,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/tp89icll7dxh.o","enqueuedNodeIndex":44,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/d4oju02d2z63.o","enqueuedNodeIndex":45,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/1wwc3no393f6.o","enqueuedNodeIndex":46,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/8bcmsqccotwf.o","enqueuedNodeIndex":47,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/vdcnq7uhzs5t.o","enqueuedNodeIndex":48,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/rgvrncjbyyfz.o","enqueuedNodeIndex":49,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/csfng221zvsw.o","enqueuedNodeIndex":50,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/t0u9k252fxyz.o","enqueuedNodeIndex":51,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/tja9t73x4wy1.o","enqueuedNodeIndex":52,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/p2sfpa3wm0x8.o","enqueuedNodeIndex":53,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/bq01vtmro98q.o","enqueuedNodeIndex":54,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/yndgs0mcsx9w.o","enqueuedNodeIndex":55,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/oco7gygj42be.o","enqueuedNodeIndex":56,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/lem6xqr0bz09.o","enqueuedNodeIndex":57,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/ni9ki14iatri.o","enqueuedNodeIndex":58,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/q19sjeacvt0p.o","enqueuedNodeIndex":59,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/sznmtb1jphf7.o","enqueuedNodeIndex":60,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/ezngilt0mugg.o","enqueuedNodeIndex":61,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/sm1n6m35p82q.o","enqueuedNodeIndex":62,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/3lcym68ed8l6.o","enqueuedNodeIndex":63,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/13h4ydpwje0y.o","enqueuedNodeIndex":64,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/qd9vbh13czul.o","enqueuedNodeIndex":65,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/rkj8867g9xu2.o","enqueuedNodeIndex":66,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/m5tnx410l1py.o","enqueuedNodeIndex":67,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/w32sq1bl20kd.o","enqueuedNodeIndex":68,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/alloo2lkk24f.o","enqueuedNodeIndex":69,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/4a40po78w3x8.o","enqueuedNodeIndex":70,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/1jnzbjif8l7q.o","enqueuedNodeIndex":71,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/3nkpdtyo4nw9.o","enqueuedNodeIndex":72,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/jllpxczjv5f9.o","enqueuedNodeIndex":73,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/gzi4dbsz3mfe.o","enqueuedNodeIndex":74,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/zgr9clvsgxsm.o","enqueuedNodeIndex":75,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/ysje1mcmqcw9.o","enqueuedNodeIndex":76,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/cjc2rj9zqzhl.o","enqueuedNodeIndex":77,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/0y6vgiaazmjm.o","enqueuedNodeIndex":78,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/8yp0txxyr4ez.o","enqueuedNodeIndex":79,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/xesv7efxp7he.o","enqueuedNodeIndex":80,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/hkmhb9oiz423.o","enqueuedNodeIndex":81,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/mcyprmuf10dp.o","enqueuedNodeIndex":82,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/zimwowyt3ovq.o","enqueuedNodeIndex":83,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/09liu0i9fg1b.o","enqueuedNodeIndex":84,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/shi37vazyr88.o","enqueuedNodeIndex":85,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/dbn8su885cop.o","enqueuedNodeIndex":86,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/nc0qfz28633g.o","enqueuedNodeIndex":87,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/tzyn0y4b6dcb.o","enqueuedNodeIndex":88,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/7407amlb8n5r.o","enqueuedNodeIndex":89,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/mm2xg32amcdo.o","enqueuedNodeIndex":90,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/69wbfg2pekyo.o","enqueuedNodeIndex":91,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/rqd07q29es7b.o","enqueuedNodeIndex":92,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/27ubhzdp1r8x.o","enqueuedNodeIndex":93,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/b37gkcprfuxz.o","enqueuedNodeIndex":94,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/zu13m5zyu13d.o","enqueuedNodeIndex":95,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 nwd5/myp4uti4ktim.o","enqueuedNodeIndex":96,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/6zaswe5itjdt.o","enqueuedNodeIndex":165,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/5ave98z6h2t80.lump.cpp","enqueuedNodeIndex":97,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/6zaswe5itjdt.o","enqueueingNodeIndex":165}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"WriteText tapa/_dummy_for_header_discovery","enqueuedNodeIndex":164,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/6zaswe5itjdt.o","enqueueingNodeIndex":165}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/o61b9xbj8v00.o","enqueuedNodeIndex":166,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/l8fabqnbelub0.lump.cpp","enqueuedNodeIndex":98,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/o61b9xbj8v00.o","enqueueingNodeIndex":166}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/mwgvopdrllb1.o","enqueuedNodeIndex":167,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/7hsruchm4tn6.o","enqueuedNodeIndex":168,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/61n6xggt1xri0.lump.cpp","enqueuedNodeIndex":99,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/7hsruchm4tn6.o","enqueueingNodeIndex":168}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/1ae853av9wpl.o","enqueuedNodeIndex":169,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/zh4dq43k2517.o","enqueuedNodeIndex":170,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/9i4yejb78mz0.o","enqueuedNodeIndex":171,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/skshix25f22z0.lump.cpp","enqueuedNodeIndex":100,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/9i4yejb78mz0.o","enqueueingNodeIndex":171}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/2sk1zoeru2rt.o","enqueuedNodeIndex":172,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/zqbmnn1gtg9k.o","enqueuedNodeIndex":173,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/nygdmum43fpk.o","enqueuedNodeIndex":174,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/4gpjmfkpbt9y0.lump.cpp","enqueuedNodeIndex":101,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/nygdmum43fpk.o","enqueueingNodeIndex":174}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/qhrvn2k8zv5e.o","enqueuedNodeIndex":175,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/4gpjmfkpbt9y1.lump.cpp","enqueuedNodeIndex":102,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/qhrvn2k8zv5e.o","enqueueingNodeIndex":175}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/t01dpajcwbm9.o","enqueuedNodeIndex":176,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/4gpjmfkpbt9y2.lump.cpp","enqueuedNodeIndex":103,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/t01dpajcwbm9.o","enqueueingNodeIndex":176}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/cctovojht57z.o","enqueuedNodeIndex":177,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/4gpjmfkpbt9y3.lump.cpp","enqueuedNodeIndex":104,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/cctovojht57z.o","enqueueingNodeIndex":177}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/dif3usrqm9vg.o","enqueuedNodeIndex":178,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/aj2fxlclyt4b0.lump.cpp","enqueuedNodeIndex":105,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/dif3usrqm9vg.o","enqueueingNodeIndex":178}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/jc53bbkptoqw.o","enqueuedNodeIndex":179,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/7s45tjz9qpww0.lump.cpp","enqueuedNodeIndex":106,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/jc53bbkptoqw.o","enqueueingNodeIndex":179}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/6hfrb35xyh61.o","enqueuedNodeIndex":180,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/kjrdqizsya7y0.lump.cpp","enqueuedNodeIndex":107,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/6hfrb35xyh61.o","enqueueingNodeIndex":180}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/6tgv1n3v9qqq.o","enqueuedNodeIndex":181,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/dqtrllg4ot1p0.lump.cpp","enqueuedNodeIndex":108,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/6tgv1n3v9qqq.o","enqueueingNodeIndex":181}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/p57571306kch.o","enqueuedNodeIndex":182,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/dqtrllg4ot1p1.lump.cpp","enqueuedNodeIndex":109,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/p57571306kch.o","enqueueingNodeIndex":182}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/soio991420sb.o","enqueuedNodeIndex":183,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/dqtrllg4ot1p2.lump.cpp","enqueuedNodeIndex":110,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/soio991420sb.o","enqueueingNodeIndex":183}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/kyk6h4dbkfnn.o","enqueuedNodeIndex":184,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/gi6cmqlv3js9.o","enqueuedNodeIndex":185,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/u8wq7c9hkdwo.o","enqueuedNodeIndex":186,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/75nncx7m6rcz0.lump.cpp","enqueuedNodeIndex":111,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/u8wq7c9hkdwo.o","enqueueingNodeIndex":186}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/ue2dffvuzhz2.o","enqueuedNodeIndex":187,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/3spyvydbecf4.o","enqueuedNodeIndex":188,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/4olnedbv8iz6.o","enqueuedNodeIndex":189,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/4ae7cej35191.o","enqueuedNodeIndex":190,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/d7zu98otkf450.lump.cpp","enqueuedNodeIndex":112,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/4ae7cej35191.o","enqueueingNodeIndex":190}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/nkeqawl0kn1r.o","enqueuedNodeIndex":191,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/avlg3qamnk6c.o","enqueuedNodeIndex":192,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/a1po4vm7rsxr.o","enqueuedNodeIndex":193,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/dqhboi087pld.o","enqueuedNodeIndex":194,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/264s9sf1em1y.o","enqueuedNodeIndex":195,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/mpkgjge2v9g70.lump.cpp","enqueuedNodeIndex":113,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/264s9sf1em1y.o","enqueueingNodeIndex":195}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/84l1150lwd1l.o","enqueuedNodeIndex":196,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/rz4yjifalbwt0.lump.cpp","enqueuedNodeIndex":114,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/84l1150lwd1l.o","enqueueingNodeIndex":196}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/qh2ltntixpfx.o","enqueuedNodeIndex":197,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/uhncspdcqx120.lump.cpp","enqueuedNodeIndex":115,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/qh2ltntixpfx.o","enqueueingNodeIndex":197}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/ljf4db7t28aa.o","enqueuedNodeIndex":198,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/4ocpj5v0otmi.o","enqueuedNodeIndex":199,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/mypo75nen25f.o","enqueuedNodeIndex":200,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/o5voyetz0s910.lump.cpp","enqueuedNodeIndex":116,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/mypo75nen25f.o","enqueueingNodeIndex":200}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/hgaqwiqpqzh1.o","enqueuedNodeIndex":201,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/0yec2mv6cwvz.o","enqueuedNodeIndex":202,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/6mywhr3m0icl.o","enqueuedNodeIndex":203,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/z4ewspf5603a0.lump.cpp","enqueuedNodeIndex":117,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/6mywhr3m0icl.o","enqueueingNodeIndex":203}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/2o0jfa67i7xu.o","enqueuedNodeIndex":204,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/7d4lxeetz6el0.lump.cpp","enqueuedNodeIndex":118,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/2o0jfa67i7xu.o","enqueueingNodeIndex":204}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/ysv9fdc3cv7r.o","enqueuedNodeIndex":205,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/5kl3j1wn0b1h.o","enqueuedNodeIndex":206,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/6obuh4wmd6a1.o","enqueuedNodeIndex":207,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/h8gcrf75rq1l0.lump.cpp","enqueuedNodeIndex":119,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/6obuh4wmd6a1.o","enqueueingNodeIndex":207}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/97lcjcvq9lrv.o","enqueuedNodeIndex":208,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/h8gcrf75rq1l1.lump.cpp","enqueuedNodeIndex":120,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/97lcjcvq9lrv.o","enqueueingNodeIndex":208}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/sjdnpqvv6fdm.o","enqueuedNodeIndex":209,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/h8gcrf75rq1l2.lump.cpp","enqueuedNodeIndex":121,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/sjdnpqvv6fdm.o","enqueueingNodeIndex":209}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/dnsk8qeszecg.o","enqueuedNodeIndex":210,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/8cgihdwfd3lx.o","enqueuedNodeIndex":211,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/4be2jl37posm0.lump.cpp","enqueuedNodeIndex":122,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/8cgihdwfd3lx.o","enqueueingNodeIndex":211}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/y75ceujf8bxo.o","enqueuedNodeIndex":212,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/mgg6s6g6j08c0.lump.cpp","enqueuedNodeIndex":123,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/y75ceujf8bxo.o","enqueueingNodeIndex":212}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/1qgvf2hj4rdj.o","enqueuedNodeIndex":213,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/mgg6s6g6j08c1.lump.cpp","enqueuedNodeIndex":124,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/1qgvf2hj4rdj.o","enqueueingNodeIndex":213}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/wgk56z322ulh.o","enqueuedNodeIndex":214,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/ui1pik8gjvqo0.lump.cpp","enqueuedNodeIndex":125,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/wgk56z322ulh.o","enqueueingNodeIndex":214}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/s6ugizdv77vm.o","enqueuedNodeIndex":215,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/bvbutjn3tthx0.lump.cpp","enqueuedNodeIndex":126,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/s6ugizdv77vm.o","enqueueingNodeIndex":215}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/vp5yj7bz3nch.o","enqueuedNodeIndex":216,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/bvbutjn3tthx1.lump.cpp","enqueuedNodeIndex":127,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/vp5yj7bz3nch.o","enqueueingNodeIndex":216}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/y8fhlfa3z3sb.o","enqueuedNodeIndex":217,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/bvbutjn3tthx2.lump.cpp","enqueuedNodeIndex":128,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/y8fhlfa3z3sb.o","enqueueingNodeIndex":217}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/hk7rrta8wxe2.o","enqueuedNodeIndex":218,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/bvbutjn3tthx3.lump.cpp","enqueuedNodeIndex":129,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/hk7rrta8wxe2.o","enqueueingNodeIndex":218}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/19kc6iq76eoh.o","enqueuedNodeIndex":219,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/tfta84hr1bt50.lump.cpp","enqueuedNodeIndex":130,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/19kc6iq76eoh.o","enqueueingNodeIndex":219}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/klcncxqc4897.o","enqueuedNodeIndex":220,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/tfta84hr1bt51.lump.cpp","enqueuedNodeIndex":131,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/klcncxqc4897.o","enqueueingNodeIndex":220}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/n4m5d5og0oq2.o","enqueuedNodeIndex":221,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/tfta84hr1bt52.lump.cpp","enqueuedNodeIndex":132,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/n4m5d5og0oq2.o","enqueueingNodeIndex":221}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/qnxnfdnkw46w.o","enqueuedNodeIndex":222,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/tfta84hr1bt53.lump.cpp","enqueuedNodeIndex":133,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/qnxnfdnkw46w.o","enqueueingNodeIndex":222}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/ur36lifwpd3t.o","enqueuedNodeIndex":223,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/fgoxhqzj05vf0.lump.cpp","enqueuedNodeIndex":134,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/ur36lifwpd3t.o","enqueueingNodeIndex":223}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/b88qbfqiog6p.o","enqueuedNodeIndex":224,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/cq9fi0h8j3ik.o","enqueuedNodeIndex":225,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/6dco4060165b0.lump.cpp","enqueuedNodeIndex":135,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/cq9fi0h8j3ik.o","enqueueingNodeIndex":225}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/f9jyj8fcgjze.o","enqueuedNodeIndex":226,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/6dco4060165b1.lump.cpp","enqueuedNodeIndex":136,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/f9jyj8fcgjze.o","enqueueingNodeIndex":226}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/ykb9pmghddl5.o","enqueuedNodeIndex":227,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/6dco4060165b2.lump.cpp","enqueuedNodeIndex":137,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/ykb9pmghddl5.o","enqueueingNodeIndex":227}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/gt3jv2kz491h.o","enqueuedNodeIndex":228,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/wcdkhkklbi3g0.lump.cpp","enqueuedNodeIndex":138,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/gt3jv2kz491h.o","enqueueingNodeIndex":228}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/gqkrg2bcsn85.o","enqueuedNodeIndex":229,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/vzzpsizvlyro0.lump.cpp","enqueuedNodeIndex":139,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/gqkrg2bcsn85.o","enqueueingNodeIndex":229}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/t4bx0fzf7jkb.o","enqueuedNodeIndex":230,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/efrgocvgf01w0.lump.cpp","enqueuedNodeIndex":140,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/t4bx0fzf7jkb.o","enqueueingNodeIndex":230}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/cg376tzk4d61.o","enqueuedNodeIndex":231,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/efrgocvgf01w1.lump.cpp","enqueuedNodeIndex":141,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/cg376tzk4d61.o","enqueueingNodeIndex":231}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/fzdq81xo0tmw.o","enqueuedNodeIndex":232,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/efrgocvgf01w2.lump.cpp","enqueuedNodeIndex":142,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/fzdq81xo0tmw.o","enqueueingNodeIndex":232}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/iio899vsw92q.o","enqueuedNodeIndex":233,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/efrgocvgf01w3.lump.cpp","enqueuedNodeIndex":143,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/iio899vsw92q.o","enqueueingNodeIndex":233}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/1tfjgowxt3oh.o","enqueuedNodeIndex":234,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/efrgocvgf01w4.lump.cpp","enqueuedNodeIndex":144,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/1tfjgowxt3oh.o","enqueueingNodeIndex":234}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/sf0cipizcsfy.o","enqueuedNodeIndex":235,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/115vkuwpp0c1.o","enqueuedNodeIndex":236,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/6aeod8pjwjxy0.lump.cpp","enqueuedNodeIndex":145,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/115vkuwpp0c1.o","enqueueingNodeIndex":236}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/4kgem2utlgtv.o","enqueuedNodeIndex":237,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/6aeod8pjwjxy1.lump.cpp","enqueuedNodeIndex":146,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/4kgem2utlgtv.o","enqueueingNodeIndex":237}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/nw7osgvyiafm.o","enqueuedNodeIndex":238,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/6aeod8pjwjxy2.lump.cpp","enqueuedNodeIndex":147,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/nw7osgvyiafm.o","enqueueingNodeIndex":238}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/qfi7tot2eqvg.o","enqueuedNodeIndex":239,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/6aeod8pjwjxy3.lump.cpp","enqueuedNodeIndex":148,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/qfi7tot2eqvg.o","enqueueingNodeIndex":239}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/tyspvwr6a6bb.o","enqueuedNodeIndex":240,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/6aeod8pjwjxy4.lump.cpp","enqueuedNodeIndex":149,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/tyspvwr6a6bb.o","enqueueingNodeIndex":240}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/a8bnc4barzda.o","enqueuedNodeIndex":241,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/3mxn1k0qn1cc.o","enqueuedNodeIndex":242,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/pbckbutbpznv0.lump.cpp","enqueuedNodeIndex":150,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/3mxn1k0qn1cc.o","enqueueingNodeIndex":242}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/myoy7y0vkvy2.o","enqueuedNodeIndex":243,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/pbckbutbpznv1.lump.cpp","enqueuedNodeIndex":151,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/myoy7y0vkvy2.o","enqueueingNodeIndex":243}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/t3fwzigjivts.o","enqueuedNodeIndex":244,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/f5wwni5w1qxs0.lump.cpp","enqueuedNodeIndex":152,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/t3fwzigjivts.o","enqueueingNodeIndex":244}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/wmqe1qeneban.o","enqueuedNodeIndex":245,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/f5wwni5w1qxs1.lump.cpp","enqueuedNodeIndex":153,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/wmqe1qeneban.o","enqueueingNodeIndex":245}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/fyhp74esb5vd.o","enqueuedNodeIndex":246,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/f5wwni5w1qxs2.lump.cpp","enqueuedNodeIndex":154,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/fyhp74esb5vd.o","enqueueingNodeIndex":246}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/o1tm9h518tle.o","enqueuedNodeIndex":247,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/x2ssuvmzdu450.lump.cpp","enqueuedNodeIndex":155,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/o1tm9h518tle.o","enqueueingNodeIndex":247}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/rk44aq354918.o","enqueuedNodeIndex":248,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/x2ssuvmzdu451.lump.cpp","enqueuedNodeIndex":156,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/rk44aq354918.o","enqueueingNodeIndex":248}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/awvfh43a23nz.o","enqueuedNodeIndex":249,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/x2ssuvmzdu452.lump.cpp","enqueuedNodeIndex":157,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/awvfh43a23nz.o","enqueueingNodeIndex":249}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/df6xic2eyj4t.o","enqueuedNodeIndex":250,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/x2ssuvmzdu453.lump.cpp","enqueuedNodeIndex":158,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/df6xic2eyj4t.o","enqueueingNodeIndex":250}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/gyggkk0iuzko.o","enqueuedNodeIndex":251,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/x2ssuvmzdu454.lump.cpp","enqueuedNodeIndex":159,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/gyggkk0iuzko.o","enqueueingNodeIndex":251}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/jhrylsymqf1i.o","enqueuedNodeIndex":252,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/x2ssuvmzdu455.lump.cpp","enqueuedNodeIndex":160,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/jhrylsymqf1i.o","enqueueingNodeIndex":252}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/2si9r6yrn9m9.o","enqueuedNodeIndex":253,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/x2ssuvmzdu456.lump.cpp","enqueuedNodeIndex":161,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/2si9r6yrn9m9.o","enqueueingNodeIndex":253}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/70196kmmnljt.o","enqueuedNodeIndex":254,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/1ephk20h7p4y0.lump.cpp","enqueuedNodeIndex":162,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/70196kmmnljt.o","enqueueingNodeIndex":254}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/j0j4dwypuznz.o","enqueuedNodeIndex":255,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"MakeLump tapa/4txp9qwxi1ks0.lump.cpp","enqueuedNodeIndex":163,"enqueueingNodeAnnotation":"C_Android_arm32 tapa/j0j4dwypuznz.o","enqueueingNodeIndex":255}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/i4k1ykruicvf.o","enqueuedNodeIndex":256,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/wuxhlifo5n2s.o","enqueuedNodeIndex":257,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/l6bwfn723p0c.o","enqueuedNodeIndex":258,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/h7x11krbe04a.o","enqueuedNodeIndex":259,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/m4960e4ovx6e.o","enqueuedNodeIndex":260,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/ber0msjtvj34.o","enqueuedNodeIndex":261,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/uzpfhssz316s.o","enqueuedNodeIndex":262,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/kcavfaf1m1ly.o","enqueuedNodeIndex":263,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/tglix51yf5p0.o","enqueuedNodeIndex":264,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/wbq91mzfcwd1.o","enqueuedNodeIndex":265,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/o6jn9jztzsm4.o","enqueuedNodeIndex":266,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/z2vmfwesqt8p.o","enqueuedNodeIndex":267,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/3x2kzd2umyvj.o","enqueuedNodeIndex":268,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/eeuupbdic1hl.o","enqueuedNodeIndex":269,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/g8uqbza8s3ga.o","enqueuedNodeIndex":270,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/uqf0nndjovtk.o","enqueuedNodeIndex":271,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/9lim5gcan4pm.o","enqueuedNodeIndex":272,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/e1l2ey60ur6x.o","enqueuedNodeIndex":273,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/c6nttv9fc937.o","enqueuedNodeIndex":274,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/5twjngtkeq50.o","enqueuedNodeIndex":275,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/ijhjb5rypm6e.o","enqueuedNodeIndex":276,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/90mqkxduhlue.o","enqueuedNodeIndex":277,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/4u1ttgp32urs.o","enqueuedNodeIndex":278,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/jqk189892szi.o","enqueuedNodeIndex":279,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/gaa3xfzhv2go.o","enqueuedNodeIndex":280,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/nx2wkyroz26w.o","enqueuedNodeIndex":281,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/4vm8yms30b1n.o","enqueuedNodeIndex":282,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/gyzldtng3z6p.o","enqueuedNodeIndex":283,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/v09s0o9mes60.o","enqueuedNodeIndex":284,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/irt73r8qh5ll.o","enqueuedNodeIndex":285,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 tapa/n07abn9rs7nl.o","enqueuedNodeIndex":286,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/muob9gz8ohwe.o","enqueuedNodeIndex":288,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"WriteText q8q9/_dummy_for_header_discovery","enqueuedNodeIndex":287,"enqueueingNodeAnnotation":"C_Android_arm32 q8q9/muob9gz8ohwe.o","enqueueingNodeIndex":288}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/1dngrz1v5swk.o","enqueuedNodeIndex":289,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ealrq3jtgwnn.o","enqueuedNodeIndex":290,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ao7rm7aqidnf.o","enqueuedNodeIndex":291,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/dqbw33nz74nu.o","enqueuedNodeIndex":292,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/y5ekjd2watzd.o","enqueuedNodeIndex":293,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/jli8ymgudhbx.o","enqueuedNodeIndex":294,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/kt2oj2wshjsc.o","enqueuedNodeIndex":295,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/585czbbqk73v.o","enqueuedNodeIndex":296,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/10any52d6dkx.o","enqueuedNodeIndex":297,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/er9b718xr6gh.o","enqueuedNodeIndex":298,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/1ful6bm93q9v.o","enqueuedNodeIndex":299,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ahfmvn9ykve7.o","enqueuedNodeIndex":300,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/gdn7hvpl76wq.o","enqueuedNodeIndex":301,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/yz1fv1xn4uvx.o","enqueuedNodeIndex":302,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ge8ax8kv3q4w.o","enqueuedNodeIndex":303,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/pwplvu3zsh24.o","enqueuedNodeIndex":304,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ippglipgcz8g.o","enqueuedNodeIndex":305,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/7qz316bqna7c.o","enqueuedNodeIndex":306,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/fbn84t7z5on3.o","enqueuedNodeIndex":307,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/4b9ood22m1fy.o","enqueuedNodeIndex":308,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/n7t5m94wou4a.o","enqueuedNodeIndex":309,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/gbkwzbdqbwfu.o","enqueuedNodeIndex":310,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/uh1wn059tffy.o","enqueuedNodeIndex":311,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/fx4k39j7w3qh.o","enqueuedNodeIndex":312,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/0c88ijy4zr20.o","enqueuedNodeIndex":313,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/1ksp3ye33tjg.o","enqueuedNodeIndex":314,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/m0vdj8s06hvz.o","enqueuedNodeIndex":315,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/7fz1yh7x956i.o","enqueuedNodeIndex":316,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/8njijxnwd8ny.o","enqueuedNodeIndex":317,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/t3m6y61tgwzh.o","enqueuedNodeIndex":318,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ub7mjmiskygx.o","enqueuedNodeIndex":319,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/frabzvwpnmsg.o","enqueuedNodeIndex":320,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/1qnkflrnekrd.o","enqueuedNodeIndex":321,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/1j1fwnvqwket.o","enqueuedNodeIndex":322,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/mz43bx9nz8pc.o","enqueuedNodeIndex":323,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/n7okwcqm3a7r.o","enqueuedNodeIndex":324,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/8ms8bm4j6yib.o","enqueuedNodeIndex":325,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/2y70z07lim8s.o","enqueuedNodeIndex":326,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/nebpfamjlakc.o","enqueuedNodeIndex":327,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/omv5zp2hpc1r.o","enqueuedNodeIndex":328,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/91ytfzgfs0cb.o","enqueuedNodeIndex":329,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/uh2hv8ucvoou.o","enqueuedNodeIndex":330,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/vpmyfobbzq59.o","enqueuedNodeIndex":331,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/g5pmvxp81eht.o","enqueuedNodeIndex":332,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/d3wmwxb0l71d.o","enqueuedNodeIndex":333,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/u6ucs5jfff4b.o","enqueuedNodeIndex":334,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/fmy07eyci3fv.o","enqueuedNodeIndex":335,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/guihsuebm5wa.o","enqueuedNodeIndex":336,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/19l573s8ot8t.o","enqueuedNodeIndex":337,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/mpptnd75rhkd.o","enqueuedNodeIndex":338,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/loouacry68d4.o","enqueuedNodeIndex":339,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/yndlzpxikqqn.o","enqueuedNodeIndex":340,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/hfj0ewb1sl1e.o","enqueuedNodeIndex":341,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/p706qf0jhgdp.o","enqueuedNodeIndex":342,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/5cgym9v1srt4.o","enqueuedNodeIndex":343,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/2gd15dkmtxoh.o","enqueuedNodeIndex":344,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/2wxgw7rp4d9o.o","enqueuedNodeIndex":345,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/t7afs2pwn6w6.o","enqueuedNodeIndex":346,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ufvvci6ur8dm.o","enqueuedNodeIndex":347,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/fvyjsrksuwp5.o","enqueuedNodeIndex":348,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/0a2770ypxk1o.o","enqueuedNodeIndex":349,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/1imosgfo1mi4.o","enqueuedNodeIndex":350,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/mypc8ptl4aun.o","enqueuedNodeIndex":351,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/m7rwwj69eaa9.o","enqueuedNodeIndex":352,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/8ci6eli7s91x.o","enqueuedNodeIndex":353,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/7mvkctk7hyls.o","enqueuedNodeIndex":354,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/s2y8r2y4kmxb.o","enqueuedNodeIndex":355,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/tajpcif3ooer.o","enqueuedNodeIndex":356,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/eqmdsrt0rcqa.o","enqueuedNodeIndex":357,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/fy6tc79yve7p.o","enqueuedNodeIndex":358,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/0daisgowy2i9.o","enqueuedNodeIndex":359,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ltd67p2t1qus.o","enqueuedNodeIndex":360,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/m1xms5is5sb8.o","enqueuedNodeIndex":361,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ju2tm4m9y2gd.o","enqueuedNodeIndex":362,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/rtg4zlrvwioq.o","enqueuedNodeIndex":363,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/g8m0rzg13hph.o","enqueuedNodeIndex":364,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/0bqxson2x5jg.o","enqueuedNodeIndex":365,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/32hc3pi60soe.o","enqueuedNodeIndex":366,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/us0yx9x8cao3.o","enqueuedNodeIndex":367,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/dnd127kvkf5e.o","enqueuedNodeIndex":368,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/vatvycca1aqj.o","enqueuedNodeIndex":369,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/hmqkc72qvt01.o","enqueuedNodeIndex":370,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/nlbc58r2uqeh.o","enqueuedNodeIndex":371,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/stcjaowd4rfu.o","enqueuedNodeIndex":372,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/bh0nho3tj9jr.o","enqueuedNodeIndex":373,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ww3bxxhrmxva.o","enqueuedNodeIndex":374,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/rz59odmr48rh.o","enqueuedNodeIndex":375,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/nwpqu17stoib.o","enqueuedNodeIndex":376,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ot3wdtbqae4f.o","enqueuedNodeIndex":377,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/baxjbjaqyula.o","enqueuedNodeIndex":378,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/owdan9so5d8z.o","enqueuedNodeIndex":379,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/rdnc6agl2oc5.o","enqueuedNodeIndex":380,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/eiq4iyzclqpc.o","enqueuedNodeIndex":381,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/6x5wb7yqdgz7.o","enqueuedNodeIndex":382,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/06k6xcjpawcy.o","enqueuedNodeIndex":383,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/6figx4iiuw82.o","enqueuedNodeIndex":384,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/o7nozt8ub7o2.o","enqueuedNodeIndex":385,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/5yljwj390wq2.o","enqueuedNodeIndex":386,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/d2v5koi2g7mk.o","enqueuedNodeIndex":387,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/uoxrhwb6uh78.o","enqueuedNodeIndex":388,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/kmk8qefciokc.o","enqueuedNodeIndex":389,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/z4z6jjwjmwod.o","enqueuedNodeIndex":390,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/kk3uzsahpk0w.o","enqueuedNodeIndex":391,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/5z6if2oes8bg.o","enqueuedNodeIndex":392,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/0cndbv2lkbol.o","enqueuedNodeIndex":393,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/vp2vvut0lqmv.o","enqueuedNodeIndex":394,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/1xwu6vlrqu0e.o","enqueuedNodeIndex":395,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/0mhp1226duym.o","enqueuedNodeIndex":396,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/bigvgf4fc1z4.o","enqueuedNodeIndex":397,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/zioh8qjgbjps.o","enqueuedNodeIndex":398,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/kyr5n0xde70b.o","enqueuedNodeIndex":399,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/5dvt39bbhvcv.o","enqueuedNodeIndex":400,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/wxjjwoidfpbo.o","enqueuedNodeIndex":401,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/x53zg4ybjrs3.o","enqueuedNodeIndex":402,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/il7nwdd9lf4m.o","enqueuedNodeIndex":403,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/jtr4gtt7phl2.o","enqueuedNodeIndex":404,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/48usw274s5wl.o","enqueuedNodeIndex":405,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/poygccm2vt84.o","enqueuedNodeIndex":406,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/qwixwr20zvpk.o","enqueuedNodeIndex":407,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/bcmlc1gy2j13.o","enqueuedNodeIndex":408,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/zsf8kx84dly5.o","enqueuedNodeIndex":409,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/xtxzij85gsnc.o","enqueuedNodeIndex":410,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/i5t4f29gp8cm.o","enqueuedNodeIndex":411,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/3kxsvboeswo5.o","enqueuedNodeIndex":412,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/4sh9fr4cwy5k.o","enqueuedNodeIndex":413,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/p8kxv0iazmh4.o","enqueuedNodeIndex":414,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/t65s1yx6dclc.o","enqueuedNodeIndex":415,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/z6hf124nn6rd.o","enqueuedNodeIndex":416,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/zip28tk6wlw4.o","enqueuedNodeIndex":417,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/r5iutmq6md45.o","enqueuedNodeIndex":418,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/2z4hv49lto2d.o","enqueuedNodeIndex":419,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/g4o2hzobzcgs.o","enqueuedNodeIndex":420,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/dylh2fqn70rm.o","enqueuedNodeIndex":421,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/dv33z8xp40ji.o","enqueuedNodeIndex":422,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/9e88i5g75993.o","enqueuedNodeIndex":423,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/mhyu9w283jip.o","enqueuedNodeIndex":424,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/dyag3wu70264.o","enqueuedNodeIndex":425,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/cvl4oz8paclb.o","enqueuedNodeIndex":426,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/m5bn8xyw4a55.o","enqueuedNodeIndex":427,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/usghbcd4g0gi.o","enqueuedNodeIndex":428,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/mii4bmp3zaib.o","enqueuedNodeIndex":429,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/yc3ygrmnjz2i.o","enqueuedNodeIndex":430,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/3mbhu7ah2sfc.o","enqueuedNodeIndex":431,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/3vcjnfbfxv3t.o","enqueuedNodeIndex":432,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/vqh21kw61vma.o","enqueuedNodeIndex":433,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/rgg891wfvjou.o","enqueuedNodeIndex":434,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/16qvbl8pykl9.o","enqueuedNodeIndex":435,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/xpwxpev2syza.o","enqueuedNodeIndex":436,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/tnws8q1kuw7x.o","enqueuedNodeIndex":437,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/p4klk4fl36bp.o","enqueuedNodeIndex":438,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/etlpam3yh080.o","enqueuedNodeIndex":439,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/8xwcafn9fxx4.o","enqueuedNodeIndex":440,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/1lfjvpgdyc1q.o","enqueuedNodeIndex":441,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/drfkmkbqmwzf.o","enqueuedNodeIndex":442,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/pxc1ot5s177p.o","enqueuedNodeIndex":443,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/d6asmwadqv8w.o","enqueuedNodeIndex":444,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/2tgj8vjrlkji.o","enqueuedNodeIndex":445,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/snrws677moys.o","enqueuedNodeIndex":446,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/a0ymy7e9d2ic.o","enqueuedNodeIndex":447,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/8zr280j46sm4.o","enqueuedNodeIndex":448,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/9xzp845hbwyf.o","enqueuedNodeIndex":449,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/9t9jnpoyzzgm.o","enqueuedNodeIndex":450,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/jf2es2taxecq.o","enqueuedNodeIndex":451,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/nroj2h82gp3j.o","enqueuedNodeIndex":452,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/3jo637kdc1wp.o","enqueuedNodeIndex":453,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/jjuey9agpfyi.o","enqueuedNodeIndex":454,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/gtfi5xyvz6wp.o","enqueuedNodeIndex":455,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/apc2yofz8zr1.o","enqueuedNodeIndex":456,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/2zg8so1r8frw.o","enqueuedNodeIndex":457,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/sdszrh5ys4p0.o","enqueuedNodeIndex":458,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/lm5cw9d9d6wp.o","enqueuedNodeIndex":459,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/lc9km62p2g7u.o","enqueuedNodeIndex":460,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ro474reziexb.o","enqueuedNodeIndex":461,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/vmszl3pi2lre.o","enqueuedNodeIndex":462,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/9k3jebtysxb5.o","enqueuedNodeIndex":463,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/htoudt6dofk5.o","enqueuedNodeIndex":464,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/f8mxb7jmv61c.o","enqueuedNodeIndex":465,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/33ffdgxo640b.o","enqueuedNodeIndex":466,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ksbsdx4rrfic.o","enqueuedNodeIndex":467,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/qx328zhmwg3k.o","enqueuedNodeIndex":468,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/j6l4ii0diiil.o","enqueuedNodeIndex":469,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/b3iajdplnllk.o","enqueuedNodeIndex":470,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/s1dwql8jmj41.o","enqueuedNodeIndex":471,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/y8buk9y6i86v.o","enqueuedNodeIndex":472,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/s4buab97je5z.o","enqueuedNodeIndex":473,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/63pjic483gsb.o","enqueuedNodeIndex":474,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/f1cc053o9491.o","enqueuedNodeIndex":475,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/b5e5pq99c1d3.o","enqueuedNodeIndex":476,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/mpif63jrlkkc.o","enqueuedNodeIndex":477,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/kp3aaw6b31og.o","enqueuedNodeIndex":478,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/igt63utha00p.o","enqueuedNodeIndex":479,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/cd8xs6dvfkax.o","enqueuedNodeIndex":480,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/ou03dluk0yh5.o","enqueuedNodeIndex":481,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/u9u8j0xw2uws.o","enqueuedNodeIndex":482,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/iqzf2978l13i.o","enqueuedNodeIndex":483,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/kp80d7fsug9d.o","enqueuedNodeIndex":484,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/wesxdxne76bq.o","enqueuedNodeIndex":485,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/21juj4axkcw0.o","enqueuedNodeIndex":486,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/9mexoxrsmhx9.o","enqueuedNodeIndex":487,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/1u17bi88hudz.o","enqueuedNodeIndex":488,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/pwibcm9fslqj.o","enqueuedNodeIndex":489,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/9bqjs67r1szv.o","enqueuedNodeIndex":490,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/2vlr2exoxgsa.o","enqueuedNodeIndex":491,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/omcobgkq72t4.o","enqueuedNodeIndex":492,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/w86ss48t05wu.o","enqueuedNodeIndex":493,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/uh3vymfywbxw.o","enqueuedNodeIndex":494,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/g6133hx0abyq.o","enqueuedNodeIndex":495,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/iu162025tkfk.o","enqueuedNodeIndex":496,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/v2vy1sdbdw3j.o","enqueuedNodeIndex":497,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/7sjubnemlbz7.o","enqueuedNodeIndex":498,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/4ebh3vu915lm.o","enqueuedNodeIndex":499,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/u1g1n331pymq.o","enqueuedNodeIndex":500,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/zdv1s4kbgav3.o","enqueuedNodeIndex":501,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/fn0op9d2mafw.o","enqueuedNodeIndex":502,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/dfss56lcyvft.o","enqueuedNodeIndex":503,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/dv82hiph6hx6.o","enqueuedNodeIndex":504,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/pxz34lz66fpw.o","enqueuedNodeIndex":505,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/9ib9udn5duyq.o","enqueuedNodeIndex":506,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/tfoferw1csgo.o","enqueuedNodeIndex":507,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/1dmzh6oh4o0o.o","enqueuedNodeIndex":508,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/zfwf9sdsc1un.o","enqueuedNodeIndex":509,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/f91upof1490l.o","enqueuedNodeIndex":510,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/7kgiks77wlcf.o","enqueuedNodeIndex":511,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/3o7r9hyp967a.o","enqueuedNodeIndex":512,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/nbogsdoykbht.o","enqueuedNodeIndex":513,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"C_Android_arm32 q8q9/3md31llst903.o","enqueuedNodeIndex":514,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"WriteResponseFile C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/rsp/18325343352748135175.rsp","enqueuedNodeIndex":515,"enqueueingNodeAnnotation":"Link_Android_arm32 q8q9/libil2cpp.so","enqueueingNodeIndex":516}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.sym.so","enqueuedNodeIndex":519,"enqueueingNodeAnnotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.so","enqueueingNodeIndex":520}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.dbg.so","enqueuedNodeIndex":522,"enqueueingNodeAnnotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.so","enqueueingNodeIndex":521}
{"msg":"enqueueNode","enqueuedNodeAnnotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.sym.so","enqueuedNodeIndex":523,"enqueueingNodeAnnotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.dbg.so","enqueueingNodeIndex":522}
{"msg":"newNode","annotation":"MakeLump tapa/x2ssuvmzdu453.lump.cpp","index":158}
{"msg":"newNode","annotation":"MakeLump tapa/x2ssuvmzdu451.lump.cpp","index":156}
{"msg":"newNode","annotation":"MakeLump tapa/x2ssuvmzdu450.lump.cpp","index":155}
{"msg":"newNode","annotation":"MakeLump tapa/pbckbutbpznv1.lump.cpp","index":151}
{"msg":"newNode","annotation":"MakeLump tapa/6aeod8pjwjxy4.lump.cpp","index":149}
{"msg":"newNode","annotation":"MakeLump tapa/pbckbutbpznv0.lump.cpp","index":150}
{"msg":"newNode","annotation":"MakeLump tapa/4txp9qwxi1ks0.lump.cpp","index":163}
{"msg":"newNode","annotation":"MakeLump tapa/1ephk20h7p4y0.lump.cpp","index":162}
{"msg":"newNode","annotation":"MakeLump tapa/x2ssuvmzdu452.lump.cpp","index":157}
{"msg":"newNode","annotation":"MakeLump tapa/f5wwni5w1qxs1.lump.cpp","index":153}
{"msg":"newNode","annotation":"MakeLump tapa/x2ssuvmzdu454.lump.cpp","index":159}
{"msg":"newNode","annotation":"MakeLump tapa/f5wwni5w1qxs2.lump.cpp","index":154}
{"msg":"newNode","annotation":"MakeLump tapa/f5wwni5w1qxs0.lump.cpp","index":152}
{"msg":"newNode","annotation":"MakeLump tapa/x2ssuvmzdu455.lump.cpp","index":160}
{"msg":"newNode","annotation":"WriteText q8q9/_dummy_for_header_discovery","index":287}
{"msg":"newNode","annotation":"MakeLump tapa/x2ssuvmzdu456.lump.cpp","index":161}
{"msg":"runNodeAction","annotation":"MakeLump tapa/f5wwni5w1qxs1.lump.cpp","index":153}
{"msg":"runNodeAction","annotation":"MakeLump tapa/6aeod8pjwjxy4.lump.cpp","index":149}
{"msg":"runNodeAction","annotation":"MakeLump tapa/4txp9qwxi1ks0.lump.cpp","index":163}
{"msg":"noderesult","processed_node_count":0,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/f5wwni5w1qxs1.lump.cpp","index":153,"exitcode":0,"outputfile":"tapa\\f5wwni5w1qxs1.lump.cpp"}
{"msg":"newNode","annotation":"WriteText tapa/_dummy_for_header_discovery","index":164}
{"msg":"runNodeAction","annotation":"WriteText tapa/_dummy_for_header_discovery","index":164}
{"msg":"runNodeAction","annotation":"MakeLump tapa/x2ssuvmzdu451.lump.cpp","index":156}
{"msg":"noderesult","processed_node_count":1,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/6aeod8pjwjxy4.lump.cpp","index":149,"exitcode":0,"outputfile":"tapa\\6aeod8pjwjxy4.lump.cpp"}
{"msg":"newNode","annotation":"WriteText o1sj/_dummy_for_header_discovery","index":4}
{"msg":"runNodeAction","annotation":"WriteText o1sj/_dummy_for_header_discovery","index":4}
{"msg":"noderesult","processed_node_count":2,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/4txp9qwxi1ks0.lump.cpp","index":163,"exitcode":0,"outputfile":"tapa\\4txp9qwxi1ks0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump l3s9/31nfg42ed8r10.lump.cpp","index":19}
{"msg":"runNodeAction","annotation":"MakeLump l3s9/31nfg42ed8r10.lump.cpp","index":19}
{"msg":"noderesult","processed_node_count":3,"number_of_nodes_ever_queued":524,"annotation":"WriteText tapa/_dummy_for_header_discovery","index":164,"exitcode":0,"outputfile":"tapa\\_dummy_for_header_discovery"}
{"msg":"newNode","annotation":"MakeLump tapa/6aeod8pjwjxy3.lump.cpp","index":148}
{"msg":"runNodeAction","annotation":"MakeLump tapa/6aeod8pjwjxy3.lump.cpp","index":148}
{"msg":"runNodeAction","annotation":"MakeLump tapa/x2ssuvmzdu453.lump.cpp","index":158}
{"msg":"noderesult","processed_node_count":4,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/x2ssuvmzdu451.lump.cpp","index":156,"exitcode":0,"outputfile":"tapa\\x2ssuvmzdu451.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/5ave98z6h2t80.lump.cpp","index":97}
{"msg":"runNodeAction","annotation":"MakeLump tapa/5ave98z6h2t80.lump.cpp","index":97}
{"msg":"noderesult","processed_node_count":5,"number_of_nodes_ever_queued":524,"annotation":"WriteText o1sj/_dummy_for_header_discovery","index":4,"exitcode":0,"outputfile":"o1sj\\_dummy_for_header_discovery"}
{"msg":"newNode","annotation":"MakeLump l3s9/31nfg42ed8r11.lump.cpp","index":20}
{"msg":"runNodeAction","annotation":"MakeLump l3s9/31nfg42ed8r11.lump.cpp","index":20}
{"msg":"noderesult","processed_node_count":6,"number_of_nodes_ever_queued":524,"annotation":"MakeLump l3s9/31nfg42ed8r10.lump.cpp","index":19,"exitcode":0,"outputfile":"l3s9\\31nfg42ed8r10.lump.cpp"}
{"msg":"noderesult","processed_node_count":6,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/x2ssuvmzdu453.lump.cpp","index":158,"exitcode":0,"outputfile":"tapa\\x2ssuvmzdu453.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/6aeod8pjwjxy2.lump.cpp","index":147}
{"msg":"runNodeAction","annotation":"MakeLump tapa/6aeod8pjwjxy2.lump.cpp","index":147}
{"msg":"newNode","annotation":"MakeLump l3s9/31nfg42ed8r12.lump.cpp","index":21}
{"msg":"runNodeAction","annotation":"MakeLump l3s9/31nfg42ed8r12.lump.cpp","index":21}
{"msg":"noderesult","processed_node_count":8,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/6aeod8pjwjxy3.lump.cpp","index":148,"exitcode":0,"outputfile":"tapa\\6aeod8pjwjxy3.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump l3s9/31nfg42ed8r13.lump.cpp","index":22}
{"msg":"runNodeAction","annotation":"MakeLump l3s9/31nfg42ed8r13.lump.cpp","index":22}
{"msg":"noderesult","processed_node_count":9,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/5ave98z6h2t80.lump.cpp","index":97,"exitcode":0,"outputfile":"tapa\\5ave98z6h2t80.lump.cpp"}
{"msg":"newNode","annotation":"WriteText nwd5/_dummy_for_header_discovery","index":28}
{"msg":"runNodeAction","annotation":"WriteText nwd5/_dummy_for_header_discovery","index":28}
{"msg":"noderesult","processed_node_count":10,"number_of_nodes_ever_queued":524,"annotation":"MakeLump l3s9/31nfg42ed8r13.lump.cpp","index":22,"exitcode":0,"outputfile":"l3s9\\31nfg42ed8r13.lump.cpp"}
{"msg":"newNode","annotation":"WriteText l3s9/_dummy_for_header_discovery","index":23}
{"msg":"runNodeAction","annotation":"WriteText l3s9/_dummy_for_header_discovery","index":23}
{"msg":"noderesult","processed_node_count":11,"number_of_nodes_ever_queued":524,"annotation":"MakeLump l3s9/31nfg42ed8r11.lump.cpp","index":20,"exitcode":0,"outputfile":"l3s9\\31nfg42ed8r11.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/l8fabqnbelub0.lump.cpp","index":98}
{"msg":"runNodeAction","annotation":"MakeLump tapa/l8fabqnbelub0.lump.cpp","index":98}
{"msg":"noderesult","processed_node_count":12,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/6aeod8pjwjxy2.lump.cpp","index":147,"exitcode":0,"outputfile":"tapa\\6aeod8pjwjxy2.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/61n6xggt1xri0.lump.cpp","index":99}
{"msg":"runNodeAction","annotation":"MakeLump tapa/61n6xggt1xri0.lump.cpp","index":99}
{"msg":"noderesult","processed_node_count":13,"number_of_nodes_ever_queued":524,"annotation":"MakeLump l3s9/31nfg42ed8r12.lump.cpp","index":21,"exitcode":0,"outputfile":"l3s9\\31nfg42ed8r12.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/skshix25f22z0.lump.cpp","index":100}
{"msg":"runNodeAction","annotation":"MakeLump tapa/skshix25f22z0.lump.cpp","index":100}
{"msg":"noderesult","processed_node_count":14,"number_of_nodes_ever_queued":524,"annotation":"WriteText nwd5/_dummy_for_header_discovery","index":28,"exitcode":0,"outputfile":"nwd5\\_dummy_for_header_discovery"}
{"msg":"newNode","annotation":"MakeLump tapa/4gpjmfkpbt9y0.lump.cpp","index":101}
{"msg":"runNodeAction","annotation":"MakeLump tapa/4gpjmfkpbt9y0.lump.cpp","index":101}
{"msg":"noderesult","processed_node_count":15,"number_of_nodes_ever_queued":524,"annotation":"WriteText l3s9/_dummy_for_header_discovery","index":23,"exitcode":0,"outputfile":"l3s9\\_dummy_for_header_discovery"}
{"msg":"newNode","annotation":"MakeLump tapa/4gpjmfkpbt9y1.lump.cpp","index":102}
{"msg":"runNodeAction","annotation":"MakeLump tapa/4gpjmfkpbt9y1.lump.cpp","index":102}
{"msg":"noderesult","processed_node_count":16,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/61n6xggt1xri0.lump.cpp","index":99,"exitcode":0,"outputfile":"tapa\\61n6xggt1xri0.lump.cpp"}
{"msg":"noderesult","processed_node_count":16,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/l8fabqnbelub0.lump.cpp","index":98,"exitcode":0,"outputfile":"tapa\\l8fabqnbelub0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/4gpjmfkpbt9y2.lump.cpp","index":103}
{"msg":"runNodeAction","annotation":"MakeLump tapa/4gpjmfkpbt9y2.lump.cpp","index":103}
{"msg":"newNode","annotation":"MakeLump tapa/4gpjmfkpbt9y3.lump.cpp","index":104}
{"msg":"runNodeAction","annotation":"MakeLump tapa/4gpjmfkpbt9y3.lump.cpp","index":104}
{"msg":"noderesult","processed_node_count":18,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/skshix25f22z0.lump.cpp","index":100,"exitcode":0,"outputfile":"tapa\\skshix25f22z0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/aj2fxlclyt4b0.lump.cpp","index":105}
{"msg":"runNodeAction","annotation":"MakeLump tapa/aj2fxlclyt4b0.lump.cpp","index":105}
{"msg":"noderesult","processed_node_count":19,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/4gpjmfkpbt9y0.lump.cpp","index":101,"exitcode":0,"outputfile":"tapa\\4gpjmfkpbt9y0.lump.cpp"}
{"msg":"noderesult","processed_node_count":19,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/4gpjmfkpbt9y2.lump.cpp","index":103,"exitcode":0,"outputfile":"tapa\\4gpjmfkpbt9y2.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/7s45tjz9qpww0.lump.cpp","index":106}
{"msg":"runNodeAction","annotation":"MakeLump tapa/7s45tjz9qpww0.lump.cpp","index":106}
{"msg":"newNode","annotation":"MakeLump tapa/kjrdqizsya7y0.lump.cpp","index":107}
{"msg":"runNodeAction","annotation":"MakeLump tapa/kjrdqizsya7y0.lump.cpp","index":107}
{"msg":"noderesult","processed_node_count":21,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/4gpjmfkpbt9y3.lump.cpp","index":104,"exitcode":0,"outputfile":"tapa\\4gpjmfkpbt9y3.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/dqtrllg4ot1p0.lump.cpp","index":108}
{"msg":"runNodeAction","annotation":"MakeLump tapa/dqtrllg4ot1p0.lump.cpp","index":108}
{"msg":"noderesult","processed_node_count":22,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/4gpjmfkpbt9y1.lump.cpp","index":102,"exitcode":0,"outputfile":"tapa\\4gpjmfkpbt9y1.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/dqtrllg4ot1p1.lump.cpp","index":109}
{"msg":"runNodeAction","annotation":"MakeLump tapa/dqtrllg4ot1p1.lump.cpp","index":109}
{"msg":"noderesult","processed_node_count":23,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/aj2fxlclyt4b0.lump.cpp","index":105,"exitcode":0,"outputfile":"tapa\\aj2fxlclyt4b0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/dqtrllg4ot1p2.lump.cpp","index":110}
{"msg":"runNodeAction","annotation":"MakeLump tapa/dqtrllg4ot1p2.lump.cpp","index":110}
{"msg":"noderesult","processed_node_count":24,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/kjrdqizsya7y0.lump.cpp","index":107,"exitcode":0,"outputfile":"tapa\\kjrdqizsya7y0.lump.cpp"}
{"msg":"newNode","annotation":"WriteText aa4b/_dummy_for_header_discovery","index":1}
{"msg":"runNodeAction","annotation":"WriteText aa4b/_dummy_for_header_discovery","index":1}
{"msg":"noderesult","processed_node_count":25,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/7s45tjz9qpww0.lump.cpp","index":106,"exitcode":0,"outputfile":"tapa\\7s45tjz9qpww0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/75nncx7m6rcz0.lump.cpp","index":111}
{"msg":"runNodeAction","annotation":"MakeLump tapa/75nncx7m6rcz0.lump.cpp","index":111}
{"msg":"noderesult","processed_node_count":26,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/dqtrllg4ot1p1.lump.cpp","index":109,"exitcode":0,"outputfile":"tapa\\dqtrllg4ot1p1.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/d7zu98otkf450.lump.cpp","index":112}
{"msg":"noderesult","processed_node_count":27,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/dqtrllg4ot1p2.lump.cpp","index":110,"exitcode":0,"outputfile":"tapa\\dqtrllg4ot1p2.lump.cpp"}
{"msg":"runNodeAction","annotation":"MakeLump tapa/d7zu98otkf450.lump.cpp","index":112}
{"msg":"newNode","annotation":"MakeLump tapa/mpkgjge2v9g70.lump.cpp","index":113}
{"msg":"runNodeAction","annotation":"MakeLump tapa/mpkgjge2v9g70.lump.cpp","index":113}
{"msg":"noderesult","processed_node_count":28,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/dqtrllg4ot1p0.lump.cpp","index":108,"exitcode":0,"outputfile":"tapa\\dqtrllg4ot1p0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/rz4yjifalbwt0.lump.cpp","index":114}
{"msg":"runNodeAction","annotation":"MakeLump tapa/rz4yjifalbwt0.lump.cpp","index":114}
{"msg":"noderesult","processed_node_count":29,"number_of_nodes_ever_queued":524,"annotation":"WriteText aa4b/_dummy_for_header_discovery","index":1,"exitcode":0,"outputfile":"aa4b\\_dummy_for_header_discovery"}
{"msg":"newNode","annotation":"MakeLump tapa/uhncspdcqx120.lump.cpp","index":115}
{"msg":"runNodeAction","annotation":"MakeLump tapa/uhncspdcqx120.lump.cpp","index":115}
{"msg":"noderesult","processed_node_count":30,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/75nncx7m6rcz0.lump.cpp","index":111,"exitcode":0,"outputfile":"tapa\\75nncx7m6rcz0.lump.cpp"}
{"msg":"noderesult","processed_node_count":30,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/rz4yjifalbwt0.lump.cpp","index":114,"exitcode":0,"outputfile":"tapa\\rz4yjifalbwt0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/o5voyetz0s910.lump.cpp","index":116}
{"msg":"newNode","annotation":"MakeLump tapa/z4ewspf5603a0.lump.cpp","index":117}
{"msg":"runNodeAction","annotation":"MakeLump tapa/z4ewspf5603a0.lump.cpp","index":117}
{"msg":"runNodeAction","annotation":"MakeLump tapa/o5voyetz0s910.lump.cpp","index":116}
{"msg":"noderesult","processed_node_count":32,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/d7zu98otkf450.lump.cpp","index":112,"exitcode":0,"outputfile":"tapa\\d7zu98otkf450.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/7d4lxeetz6el0.lump.cpp","index":118}
{"msg":"runNodeAction","annotation":"MakeLump tapa/7d4lxeetz6el0.lump.cpp","index":118}
{"msg":"noderesult","processed_node_count":33,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/mpkgjge2v9g70.lump.cpp","index":113,"exitcode":0,"outputfile":"tapa\\mpkgjge2v9g70.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/h8gcrf75rq1l0.lump.cpp","index":119}
{"msg":"runNodeAction","annotation":"MakeLump tapa/h8gcrf75rq1l0.lump.cpp","index":119}
{"msg":"noderesult","processed_node_count":34,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/uhncspdcqx120.lump.cpp","index":115,"exitcode":0,"outputfile":"tapa\\uhncspdcqx120.lump.cpp"}
{"msg":"noderesult","processed_node_count":34,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/z4ewspf5603a0.lump.cpp","index":117,"exitcode":0,"outputfile":"tapa\\z4ewspf5603a0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/h8gcrf75rq1l1.lump.cpp","index":120}
{"msg":"newNode","annotation":"MakeLump tapa/h8gcrf75rq1l2.lump.cpp","index":121}
{"msg":"runNodeAction","annotation":"MakeLump tapa/h8gcrf75rq1l1.lump.cpp","index":120}
{"msg":"runNodeAction","annotation":"MakeLump tapa/h8gcrf75rq1l2.lump.cpp","index":121}
{"msg":"noderesult","processed_node_count":36,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/o5voyetz0s910.lump.cpp","index":116,"exitcode":0,"outputfile":"tapa\\o5voyetz0s910.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/4be2jl37posm0.lump.cpp","index":122}
{"msg":"runNodeAction","annotation":"MakeLump tapa/4be2jl37posm0.lump.cpp","index":122}
{"msg":"noderesult","processed_node_count":37,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/7d4lxeetz6el0.lump.cpp","index":118,"exitcode":0,"outputfile":"tapa\\7d4lxeetz6el0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/mgg6s6g6j08c0.lump.cpp","index":123}
{"msg":"runNodeAction","annotation":"MakeLump tapa/mgg6s6g6j08c0.lump.cpp","index":123}
{"msg":"noderesult","processed_node_count":38,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/h8gcrf75rq1l0.lump.cpp","index":119,"exitcode":0,"outputfile":"tapa\\h8gcrf75rq1l0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/mgg6s6g6j08c1.lump.cpp","index":124}
{"msg":"runNodeAction","annotation":"MakeLump tapa/mgg6s6g6j08c1.lump.cpp","index":124}
{"msg":"noderesult","processed_node_count":39,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/h8gcrf75rq1l1.lump.cpp","index":120,"exitcode":0,"outputfile":"tapa\\h8gcrf75rq1l1.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/ui1pik8gjvqo0.lump.cpp","index":125}
{"msg":"runNodeAction","annotation":"MakeLump tapa/ui1pik8gjvqo0.lump.cpp","index":125}
{"msg":"noderesult","processed_node_count":40,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/mgg6s6g6j08c0.lump.cpp","index":123,"exitcode":0,"outputfile":"tapa\\mgg6s6g6j08c0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/bvbutjn3tthx0.lump.cpp","index":126}
{"msg":"runNodeAction","annotation":"MakeLump tapa/bvbutjn3tthx0.lump.cpp","index":126}
{"msg":"noderesult","processed_node_count":41,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/h8gcrf75rq1l2.lump.cpp","index":121,"exitcode":0,"outputfile":"tapa\\h8gcrf75rq1l2.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/bvbutjn3tthx1.lump.cpp","index":127}
{"msg":"runNodeAction","annotation":"MakeLump tapa/bvbutjn3tthx1.lump.cpp","index":127}
{"msg":"noderesult","processed_node_count":42,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/4be2jl37posm0.lump.cpp","index":122,"exitcode":0,"outputfile":"tapa\\4be2jl37posm0.lump.cpp"}
{"msg":"noderesult","processed_node_count":42,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/ui1pik8gjvqo0.lump.cpp","index":125,"exitcode":0,"outputfile":"tapa\\ui1pik8gjvqo0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/bvbutjn3tthx2.lump.cpp","index":128}
{"msg":"runNodeAction","annotation":"MakeLump tapa/bvbutjn3tthx2.lump.cpp","index":128}
{"msg":"newNode","annotation":"MakeLump tapa/bvbutjn3tthx3.lump.cpp","index":129}
{"msg":"runNodeAction","annotation":"MakeLump tapa/bvbutjn3tthx3.lump.cpp","index":129}
{"msg":"noderesult","processed_node_count":44,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/mgg6s6g6j08c1.lump.cpp","index":124,"exitcode":0,"outputfile":"tapa\\mgg6s6g6j08c1.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/tfta84hr1bt50.lump.cpp","index":130}
{"msg":"runNodeAction","annotation":"MakeLump tapa/tfta84hr1bt50.lump.cpp","index":130}
{"msg":"noderesult","processed_node_count":45,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/bvbutjn3tthx0.lump.cpp","index":126,"exitcode":0,"outputfile":"tapa\\bvbutjn3tthx0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/tfta84hr1bt51.lump.cpp","index":131}
{"msg":"runNodeAction","annotation":"MakeLump tapa/tfta84hr1bt51.lump.cpp","index":131}
{"msg":"noderesult","processed_node_count":46,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/bvbutjn3tthx1.lump.cpp","index":127,"exitcode":0,"outputfile":"tapa\\bvbutjn3tthx1.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/tfta84hr1bt52.lump.cpp","index":132}
{"msg":"runNodeAction","annotation":"MakeLump tapa/tfta84hr1bt52.lump.cpp","index":132}
{"msg":"noderesult","processed_node_count":47,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/bvbutjn3tthx2.lump.cpp","index":128,"exitcode":0,"outputfile":"tapa\\bvbutjn3tthx2.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/tfta84hr1bt53.lump.cpp","index":133}
{"msg":"runNodeAction","annotation":"MakeLump tapa/tfta84hr1bt53.lump.cpp","index":133}
{"msg":"noderesult","processed_node_count":48,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/bvbutjn3tthx3.lump.cpp","index":129,"exitcode":0,"outputfile":"tapa\\bvbutjn3tthx3.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/fgoxhqzj05vf0.lump.cpp","index":134}
{"msg":"runNodeAction","annotation":"MakeLump tapa/fgoxhqzj05vf0.lump.cpp","index":134}
{"msg":"noderesult","processed_node_count":49,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/tfta84hr1bt50.lump.cpp","index":130,"exitcode":0,"outputfile":"tapa\\tfta84hr1bt50.lump.cpp"}
{"msg":"noderesult","processed_node_count":50,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/tfta84hr1bt51.lump.cpp","index":131,"exitcode":0,"outputfile":"tapa\\tfta84hr1bt51.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/6dco4060165b0.lump.cpp","index":135}
{"msg":"runNodeAction","annotation":"MakeLump tapa/6dco4060165b0.lump.cpp","index":135}
{"msg":"newNode","annotation":"MakeLump tapa/6dco4060165b1.lump.cpp","index":136}
{"msg":"runNodeAction","annotation":"MakeLump tapa/6dco4060165b1.lump.cpp","index":136}
{"msg":"noderesult","processed_node_count":51,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/tfta84hr1bt53.lump.cpp","index":133,"exitcode":0,"outputfile":"tapa\\tfta84hr1bt53.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/6dco4060165b2.lump.cpp","index":137}
{"msg":"runNodeAction","annotation":"MakeLump tapa/6dco4060165b2.lump.cpp","index":137}
{"msg":"noderesult","processed_node_count":52,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/tfta84hr1bt52.lump.cpp","index":132,"exitcode":0,"outputfile":"tapa\\tfta84hr1bt52.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/wcdkhkklbi3g0.lump.cpp","index":138}
{"msg":"runNodeAction","annotation":"MakeLump tapa/wcdkhkklbi3g0.lump.cpp","index":138}
{"msg":"noderesult","processed_node_count":53,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/fgoxhqzj05vf0.lump.cpp","index":134,"exitcode":0,"outputfile":"tapa\\fgoxhqzj05vf0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/vzzpsizvlyro0.lump.cpp","index":139}
{"msg":"runNodeAction","annotation":"MakeLump tapa/vzzpsizvlyro0.lump.cpp","index":139}
{"msg":"noderesult","processed_node_count":54,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/6dco4060165b0.lump.cpp","index":135,"exitcode":0,"outputfile":"tapa\\6dco4060165b0.lump.cpp"}
{"msg":"noderesult","processed_node_count":55,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/wcdkhkklbi3g0.lump.cpp","index":138,"exitcode":0,"outputfile":"tapa\\wcdkhkklbi3g0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/efrgocvgf01w0.lump.cpp","index":140}
{"msg":"runNodeAction","annotation":"MakeLump tapa/efrgocvgf01w0.lump.cpp","index":140}
{"msg":"newNode","annotation":"MakeLump tapa/efrgocvgf01w1.lump.cpp","index":141}
{"msg":"runNodeAction","annotation":"MakeLump tapa/efrgocvgf01w1.lump.cpp","index":141}
{"msg":"noderesult","processed_node_count":56,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/6dco4060165b2.lump.cpp","index":137,"exitcode":0,"outputfile":"tapa\\6dco4060165b2.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/efrgocvgf01w2.lump.cpp","index":142}
{"msg":"runNodeAction","annotation":"MakeLump tapa/efrgocvgf01w2.lump.cpp","index":142}
{"msg":"noderesult","processed_node_count":57,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/6dco4060165b1.lump.cpp","index":136,"exitcode":0,"outputfile":"tapa\\6dco4060165b1.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/efrgocvgf01w3.lump.cpp","index":143}
{"msg":"runNodeAction","annotation":"MakeLump tapa/efrgocvgf01w3.lump.cpp","index":143}
{"msg":"noderesult","processed_node_count":58,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/efrgocvgf01w2.lump.cpp","index":142,"exitcode":0,"outputfile":"tapa\\efrgocvgf01w2.lump.cpp"}
{"msg":"noderesult","processed_node_count":58,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/efrgocvgf01w0.lump.cpp","index":140,"exitcode":0,"outputfile":"tapa\\efrgocvgf01w0.lump.cpp"}
{"msg":"noderesult","processed_node_count":59,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/vzzpsizvlyro0.lump.cpp","index":139,"exitcode":0,"outputfile":"tapa\\vzzpsizvlyro0.lump.cpp"}
{"msg":"newNode","annotation":"MakeLump tapa/efrgocvgf01w4.lump.cpp","index":144}
{"msg":"runNodeAction","annotation":"MakeLump tapa/efrgocvgf01w4.lump.cpp","index":144}
{"msg":"newNode","annotation":"MakeLump tapa/6aeod8pjwjxy0.lump.cpp","index":145}
{"msg":"runNodeAction","annotation":"MakeLump tapa/6aeod8pjwjxy0.lump.cpp","index":145}
{"msg":"newNode","annotation":"MakeLump tapa/6aeod8pjwjxy1.lump.cpp","index":146}
{"msg":"runNodeAction","annotation":"MakeLump tapa/6aeod8pjwjxy1.lump.cpp","index":146}
{"msg":"noderesult","processed_node_count":61,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/efrgocvgf01w1.lump.cpp","index":141,"exitcode":0,"outputfile":"tapa\\efrgocvgf01w1.lump.cpp"}
{"msg":"noderesult","processed_node_count":62,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/efrgocvgf01w3.lump.cpp","index":143,"exitcode":0,"outputfile":"tapa\\efrgocvgf01w3.lump.cpp"}
{"msg":"noderesult","processed_node_count":63,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/efrgocvgf01w4.lump.cpp","index":144,"exitcode":0,"outputfile":"tapa\\efrgocvgf01w4.lump.cpp"}
{"msg":"noderesult","processed_node_count":64,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/6aeod8pjwjxy1.lump.cpp","index":146,"exitcode":0,"outputfile":"tapa\\6aeod8pjwjxy1.lump.cpp"}
{"msg":"noderesult","processed_node_count":65,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/6aeod8pjwjxy0.lump.cpp","index":145,"exitcode":0,"outputfile":"tapa\\6aeod8pjwjxy0.lump.cpp"}
{"msg":"runNodeAction","annotation":"MakeLump tapa/x2ssuvmzdu454.lump.cpp","index":159}
{"msg":"runNodeAction","annotation":"MakeLump tapa/pbckbutbpznv1.lump.cpp","index":151}
{"msg":"noderesult","processed_node_count":66,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/x2ssuvmzdu454.lump.cpp","index":159,"exitcode":0,"outputfile":"tapa\\x2ssuvmzdu454.lump.cpp"}
{"msg":"runNodeAction","annotation":"MakeLump tapa/1ephk20h7p4y0.lump.cpp","index":162}
{"msg":"noderesult","processed_node_count":67,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/pbckbutbpznv1.lump.cpp","index":151,"exitcode":0,"outputfile":"tapa\\pbckbutbpznv1.lump.cpp"}
{"msg":"runNodeAction","annotation":"MakeLump tapa/pbckbutbpznv0.lump.cpp","index":150}
{"msg":"noderesult","processed_node_count":68,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/1ephk20h7p4y0.lump.cpp","index":162,"exitcode":0,"outputfile":"tapa\\1ephk20h7p4y0.lump.cpp"}
{"msg":"runNodeAction","annotation":"MakeLump tapa/f5wwni5w1qxs2.lump.cpp","index":154}
{"msg":"noderesult","processed_node_count":69,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/pbckbutbpznv0.lump.cpp","index":150,"exitcode":0,"outputfile":"tapa\\pbckbutbpznv0.lump.cpp"}
{"msg":"runNodeAction","annotation":"MakeLump tapa/x2ssuvmzdu450.lump.cpp","index":155}
{"msg":"noderesult","processed_node_count":70,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/f5wwni5w1qxs2.lump.cpp","index":154,"exitcode":0,"outputfile":"tapa\\f5wwni5w1qxs2.lump.cpp"}
{"msg":"runNodeAction","annotation":"MakeLump tapa/x2ssuvmzdu452.lump.cpp","index":157}
{"msg":"noderesult","processed_node_count":71,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/x2ssuvmzdu450.lump.cpp","index":155,"exitcode":0,"outputfile":"tapa\\x2ssuvmzdu450.lump.cpp"}
{"msg":"runNodeAction","annotation":"MakeLump tapa/f5wwni5w1qxs0.lump.cpp","index":152}
{"msg":"runNodeAction","annotation":"MakeLump tapa/x2ssuvmzdu455.lump.cpp","index":160}
{"msg":"noderesult","processed_node_count":72,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/x2ssuvmzdu452.lump.cpp","index":157,"exitcode":0,"outputfile":"tapa\\x2ssuvmzdu452.lump.cpp"}
{"msg":"noderesult","processed_node_count":73,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/f5wwni5w1qxs0.lump.cpp","index":152,"exitcode":0,"outputfile":"tapa\\f5wwni5w1qxs0.lump.cpp"}
{"msg":"runNodeAction","annotation":"WriteText q8q9/_dummy_for_header_discovery","index":287}
{"msg":"noderesult","processed_node_count":74,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/x2ssuvmzdu455.lump.cpp","index":160,"exitcode":0,"outputfile":"tapa\\x2ssuvmzdu455.lump.cpp"}
{"msg":"runNodeAction","annotation":"MakeLump tapa/x2ssuvmzdu456.lump.cpp","index":161}
{"msg":"noderesult","processed_node_count":75,"number_of_nodes_ever_queued":524,"annotation":"WriteText q8q9/_dummy_for_header_discovery","index":287,"exitcode":0,"outputfile":"q8q9\\_dummy_for_header_discovery"}
{"msg":"noderesult","processed_node_count":76,"number_of_nodes_ever_queued":524,"annotation":"MakeLump tapa/x2ssuvmzdu456.lump.cpp","index":161,"exitcode":0,"outputfile":"tapa\\x2ssuvmzdu456.lump.cpp"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/t3fwzigjivts.o","index":244}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/t3fwzigjivts.o","index":244}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/4kgem2utlgtv.o","index":237}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/4kgem2utlgtv.o","index":237}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/3mxn1k0qn1cc.o","index":242}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/3mxn1k0qn1cc.o","index":242}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/fyhp74esb5vd.o","index":246}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/fyhp74esb5vd.o","index":246}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/cg376tzk4d61.o","index":231}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/cg376tzk4d61.o","index":231}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/115vkuwpp0c1.o","index":236}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/115vkuwpp0c1.o","index":236}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/1tfjgowxt3oh.o","index":234}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/1tfjgowxt3oh.o","index":234}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/iio899vsw92q.o","index":233}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/iio899vsw92q.o","index":233}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/muob9gz8ohwe.o","index":288}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/muob9gz8ohwe.o","index":288}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/myoy7y0vkvy2.o","index":243}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/myoy7y0vkvy2.o","index":243}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/70196kmmnljt.o","index":254}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/70196kmmnljt.o","index":254}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/2si9r6yrn9m9.o","index":253}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/2si9r6yrn9m9.o","index":253}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/gyggkk0iuzko.o","index":251}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/gyggkk0iuzko.o","index":251}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/o1tm9h518tle.o","index":247}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/o1tm9h518tle.o","index":247}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/awvfh43a23nz.o","index":249}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/awvfh43a23nz.o","index":249}
{"msg":"noderesult","processed_node_count":77,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/115vkuwpp0c1.o","index":236,"exitcode":0,"outputfile":"tapa\\115vkuwpp0c1.o"}
{"msg":"noderesult","processed_node_count":77,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/myoy7y0vkvy2.o","index":243,"exitcode":0,"outputfile":"tapa\\myoy7y0vkvy2.o"}
{"msg":"noderesult","processed_node_count":79,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/3mxn1k0qn1cc.o","index":242,"exitcode":0,"outputfile":"tapa\\3mxn1k0qn1cc.o"}
{"msg":"noderesult","processed_node_count":80,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/4kgem2utlgtv.o","index":237,"exitcode":0,"outputfile":"tapa\\4kgem2utlgtv.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/gqkrg2bcsn85.o","index":229}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/gqkrg2bcsn85.o","index":229}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/t4bx0fzf7jkb.o","index":230}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/t4bx0fzf7jkb.o","index":230}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/f9jyj8fcgjze.o","index":226}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/f9jyj8fcgjze.o","index":226}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/fzdq81xo0tmw.o","index":232}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/fzdq81xo0tmw.o","index":232}
{"msg":"noderesult","processed_node_count":81,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/gqkrg2bcsn85.o","index":229,"exitcode":0,"outputfile":"tapa\\gqkrg2bcsn85.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/jhrylsymqf1i.o","index":252}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/jhrylsymqf1i.o","index":252}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/ykb9pmghddl5.o","index":227}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/ykb9pmghddl5.o","index":227}
{"msg":"noderesult","processed_node_count":82,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/ykb9pmghddl5.o","index":227,"exitcode":0,"outputfile":"tapa\\ykb9pmghddl5.o"}
{"msg":"noderesult","processed_node_count":83,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/t3fwzigjivts.o","index":244,"exitcode":0,"outputfile":"tapa\\t3fwzigjivts.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/gt3jv2kz491h.o","index":228}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/gt3jv2kz491h.o","index":228}
{"msg":"noderesult","processed_node_count":84,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/f9jyj8fcgjze.o","index":226,"exitcode":0,"outputfile":"tapa\\f9jyj8fcgjze.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/cq9fi0h8j3ik.o","index":225}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/cq9fi0h8j3ik.o","index":225}
{"msg":"noderesult","processed_node_count":85,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/fyhp74esb5vd.o","index":246,"exitcode":0,"outputfile":"tapa\\fyhp74esb5vd.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/ur36lifwpd3t.o","index":223}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/ur36lifwpd3t.o","index":223}
{"msg":"noderesult","processed_node_count":86,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/muob9gz8ohwe.o","index":288,"exitcode":0,"outputfile":"q8q9\\muob9gz8ohwe.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/n4m5d5og0oq2.o","index":221}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/n4m5d5og0oq2.o","index":221}
{"msg":"noderesult","processed_node_count":87,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/1tfjgowxt3oh.o","index":234,"exitcode":0,"outputfile":"tapa\\1tfjgowxt3oh.o"}
{"msg":"noderesult","processed_node_count":88,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/gt3jv2kz491h.o","index":228,"exitcode":0,"outputfile":"tapa\\gt3jv2kz491h.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/qnxnfdnkw46w.o","index":222}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/qnxnfdnkw46w.o","index":222}
{"msg":"noderesult","processed_node_count":89,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/t4bx0fzf7jkb.o","index":230,"exitcode":0,"outputfile":"tapa\\t4bx0fzf7jkb.o"}
{"msg":"noderesult","processed_node_count":90,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/n4m5d5og0oq2.o","index":221,"exitcode":0,"outputfile":"tapa\\n4m5d5og0oq2.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/klcncxqc4897.o","index":220}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/klcncxqc4897.o","index":220}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/19kc6iq76eoh.o","index":219}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/19kc6iq76eoh.o","index":219}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/hk7rrta8wxe2.o","index":218}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/hk7rrta8wxe2.o","index":218}
{"msg":"noderesult","processed_node_count":91,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/qnxnfdnkw46w.o","index":222,"exitcode":0,"outputfile":"tapa\\qnxnfdnkw46w.o"}
{"msg":"noderesult","processed_node_count":92,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/cg376tzk4d61.o","index":231,"exitcode":0,"outputfile":"tapa\\cg376tzk4d61.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/y8fhlfa3z3sb.o","index":217}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/y8fhlfa3z3sb.o","index":217}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/vp5yj7bz3nch.o","index":216}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/vp5yj7bz3nch.o","index":216}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/s6ugizdv77vm.o","index":215}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/s6ugizdv77vm.o","index":215}
{"msg":"noderesult","processed_node_count":93,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/klcncxqc4897.o","index":220,"exitcode":0,"outputfile":"tapa\\klcncxqc4897.o"}
{"msg":"noderesult","processed_node_count":94,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/19kc6iq76eoh.o","index":219,"exitcode":0,"outputfile":"tapa\\19kc6iq76eoh.o"}
{"msg":"noderesult","processed_node_count":95,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/fzdq81xo0tmw.o","index":232,"exitcode":0,"outputfile":"tapa\\fzdq81xo0tmw.o"}
{"msg":"noderesult","processed_node_count":96,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/cq9fi0h8j3ik.o","index":225,"exitcode":0,"outputfile":"tapa\\cq9fi0h8j3ik.o"}
{"msg":"noderesult","processed_node_count":97,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/o1tm9h518tle.o","index":247,"exitcode":0,"outputfile":"tapa\\o1tm9h518tle.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/wgk56z322ulh.o","index":214}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/wgk56z322ulh.o","index":214}
{"msg":"noderesult","processed_node_count":98,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/ur36lifwpd3t.o","index":223,"exitcode":0,"outputfile":"tapa\\ur36lifwpd3t.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/sjdnpqvv6fdm.o","index":209}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/sjdnpqvv6fdm.o","index":209}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/1qgvf2hj4rdj.o","index":213}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/1qgvf2hj4rdj.o","index":213}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/8cgihdwfd3lx.o","index":211}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/8cgihdwfd3lx.o","index":211}
{"msg":"noderesult","processed_node_count":99,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/jhrylsymqf1i.o","index":252,"exitcode":0,"outputfile":"tapa\\jhrylsymqf1i.o"}
{"msg":"noderesult","processed_node_count":100,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/iio899vsw92q.o","index":233,"exitcode":0,"outputfile":"tapa\\iio899vsw92q.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/97lcjcvq9lrv.o","index":208}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/97lcjcvq9lrv.o","index":208}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/2o0jfa67i7xu.o","index":204}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/2o0jfa67i7xu.o","index":204}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/y75ceujf8bxo.o","index":212}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/y75ceujf8bxo.o","index":212}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/6obuh4wmd6a1.o","index":207}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/6obuh4wmd6a1.o","index":207}
{"msg":"noderesult","processed_node_count":101,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/awvfh43a23nz.o","index":249,"exitcode":0,"outputfile":"tapa\\awvfh43a23nz.o"}
{"msg":"noderesult","processed_node_count":102,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/s6ugizdv77vm.o","index":215,"exitcode":0,"outputfile":"tapa\\s6ugizdv77vm.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/mypo75nen25f.o","index":200}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/mypo75nen25f.o","index":200}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/6mywhr3m0icl.o","index":203}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/6mywhr3m0icl.o","index":203}
{"msg":"noderesult","processed_node_count":103,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/hk7rrta8wxe2.o","index":218,"exitcode":0,"outputfile":"tapa\\hk7rrta8wxe2.o"}
{"msg":"noderesult","processed_node_count":104,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/vp5yj7bz3nch.o","index":216,"exitcode":0,"outputfile":"tapa\\vp5yj7bz3nch.o"}
{"msg":"noderesult","processed_node_count":105,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/sjdnpqvv6fdm.o","index":209,"exitcode":0,"outputfile":"tapa\\sjdnpqvv6fdm.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/264s9sf1em1y.o","index":195}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/264s9sf1em1y.o","index":195}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/4ae7cej35191.o","index":190}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/4ae7cej35191.o","index":190}
{"msg":"noderesult","processed_node_count":106,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/gyggkk0iuzko.o","index":251,"exitcode":0,"outputfile":"tapa\\gyggkk0iuzko.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/qh2ltntixpfx.o","index":197}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/qh2ltntixpfx.o","index":197}
{"msg":"noderesult","processed_node_count":107,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/6mywhr3m0icl.o","index":203,"exitcode":0,"outputfile":"tapa\\6mywhr3m0icl.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/84l1150lwd1l.o","index":196}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/84l1150lwd1l.o","index":196}
{"msg":"noderesult","processed_node_count":108,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/y8fhlfa3z3sb.o","index":217,"exitcode":0,"outputfile":"tapa\\y8fhlfa3z3sb.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/u8wq7c9hkdwo.o","index":186}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/u8wq7c9hkdwo.o","index":186}
{"msg":"noderesult","processed_node_count":109,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/wgk56z322ulh.o","index":214,"exitcode":0,"outputfile":"tapa\\wgk56z322ulh.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/6tgv1n3v9qqq.o","index":181}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/6tgv1n3v9qqq.o","index":181}
{"msg":"noderesult","processed_node_count":110,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/70196kmmnljt.o","index":254,"exitcode":0,"outputfile":"tapa\\70196kmmnljt.o"}
{"msg":"noderesult","processed_node_count":111,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/1qgvf2hj4rdj.o","index":213,"exitcode":0,"outputfile":"tapa\\1qgvf2hj4rdj.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/soio991420sb.o","index":183}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/soio991420sb.o","index":183}
{"msg":"noderesult","processed_node_count":112,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/mypo75nen25f.o","index":200,"exitcode":0,"outputfile":"tapa\\mypo75nen25f.o"}
{"msg":"noderesult","processed_node_count":113,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/264s9sf1em1y.o","index":195,"exitcode":0,"outputfile":"tapa\\264s9sf1em1y.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/p57571306kch.o","index":182}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/p57571306kch.o","index":182}
{"msg":"noderesult","processed_node_count":114,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/2o0jfa67i7xu.o","index":204,"exitcode":0,"outputfile":"tapa\\2o0jfa67i7xu.o"}
{"msg":"noderesult","processed_node_count":115,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/y75ceujf8bxo.o","index":212,"exitcode":0,"outputfile":"tapa\\y75ceujf8bxo.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/6hfrb35xyh61.o","index":180}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/6hfrb35xyh61.o","index":180}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/dif3usrqm9vg.o","index":178}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/dif3usrqm9vg.o","index":178}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/jc53bbkptoqw.o","index":179}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/jc53bbkptoqw.o","index":179}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/qhrvn2k8zv5e.o","index":175}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/qhrvn2k8zv5e.o","index":175}
{"msg":"noderesult","processed_node_count":116,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/84l1150lwd1l.o","index":196,"exitcode":0,"outputfile":"tapa\\84l1150lwd1l.o"}
{"msg":"noderesult","processed_node_count":117,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/4ae7cej35191.o","index":190,"exitcode":0,"outputfile":"tapa\\4ae7cej35191.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/cctovojht57z.o","index":177}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/cctovojht57z.o","index":177}
{"msg":"noderesult","processed_node_count":118,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/6obuh4wmd6a1.o","index":207,"exitcode":0,"outputfile":"tapa\\6obuh4wmd6a1.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/t01dpajcwbm9.o","index":176}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/t01dpajcwbm9.o","index":176}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/nygdmum43fpk.o","index":174}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/nygdmum43fpk.o","index":174}
{"msg":"noderesult","processed_node_count":119,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/qh2ltntixpfx.o","index":197,"exitcode":0,"outputfile":"tapa\\qh2ltntixpfx.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/9i4yejb78mz0.o","index":171}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/9i4yejb78mz0.o","index":171}
{"msg":"noderesult","processed_node_count":120,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/dif3usrqm9vg.o","index":178,"exitcode":0,"outputfile":"tapa\\dif3usrqm9vg.o"}
{"msg":"noderesult","processed_node_count":121,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/u8wq7c9hkdwo.o","index":186,"exitcode":0,"outputfile":"tapa\\u8wq7c9hkdwo.o"}
{"msg":"noderesult","processed_node_count":122,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/6tgv1n3v9qqq.o","index":181,"exitcode":0,"outputfile":"tapa\\6tgv1n3v9qqq.o"}
{"msg":"noderesult","processed_node_count":123,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/soio991420sb.o","index":183,"exitcode":0,"outputfile":"tapa\\soio991420sb.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/o61b9xbj8v00.o","index":166}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/o61b9xbj8v00.o","index":166}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/7hsruchm4tn6.o","index":168}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/7hsruchm4tn6.o","index":168}
{"msg":"newNode","annotation":"C_Android_arm32 aa4b/mpavjz22hxa8.o","index":2}
{"msg":"runNodeAction","annotation":"C_Android_arm32 aa4b/mpavjz22hxa8.o","index":2}
{"msg":"newNode","annotation":"C_Android_arm32 l3s9/o9utnlxltzml.o","index":24}
{"msg":"runNodeAction","annotation":"C_Android_arm32 l3s9/o9utnlxltzml.o","index":24}
{"msg":"noderesult","processed_node_count":124,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/jc53bbkptoqw.o","index":179,"exitcode":0,"outputfile":"tapa\\jc53bbkptoqw.o"}
{"msg":"noderesult","processed_node_count":124,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/97lcjcvq9lrv.o","index":208,"exitcode":0,"outputfile":"tapa\\97lcjcvq9lrv.o"}
{"msg":"noderesult","processed_node_count":126,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/8cgihdwfd3lx.o","index":211,"exitcode":0,"outputfile":"tapa\\8cgihdwfd3lx.o"}
{"msg":"newNode","annotation":"C_Android_arm32 l3s9/rs5bptvppf3f.o","index":25}
{"msg":"runNodeAction","annotation":"C_Android_arm32 l3s9/rs5bptvppf3f.o","index":25}
{"msg":"newNode","annotation":"C_Android_arm32 l3s9/ubguq1ttlvja.o","index":26}
{"msg":"runNodeAction","annotation":"C_Android_arm32 l3s9/ubguq1ttlvja.o","index":26}
{"msg":"noderesult","processed_node_count":127,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/6hfrb35xyh61.o","index":180,"exitcode":0,"outputfile":"tapa\\6hfrb35xyh61.o"}
{"msg":"newNode","annotation":"C_Android_arm32 l3s9/dn74wfuyip50.o","index":27}
{"msg":"runNodeAction","annotation":"C_Android_arm32 l3s9/dn74wfuyip50.o","index":27}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/dbezd06ubz2u.o","index":29}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/dbezd06ubz2u.o","index":29}
{"msg":"noderesult","processed_node_count":128,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/p57571306kch.o","index":182,"exitcode":0,"outputfile":"tapa\\p57571306kch.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/nw7osgvyiafm.o","index":238}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/nw7osgvyiafm.o","index":238}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/6zaswe5itjdt.o","index":165}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/6zaswe5itjdt.o","index":165}
{"msg":"noderesult","processed_node_count":129,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/nygdmum43fpk.o","index":174,"exitcode":0,"outputfile":"tapa\\nygdmum43fpk.o"}
{"msg":"noderesult","processed_node_count":130,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 l3s9/rs5bptvppf3f.o","index":25,"exitcode":0,"outputfile":"l3s9\\rs5bptvppf3f.o"}
{"msg":"noderesult","processed_node_count":131,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/nw7osgvyiafm.o","index":238,"exitcode":0,"outputfile":"tapa\\nw7osgvyiafm.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/qfi7tot2eqvg.o","index":239}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/qfi7tot2eqvg.o","index":239}
{"msg":"noderesult","processed_node_count":132,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 l3s9/ubguq1ttlvja.o","index":26,"exitcode":0,"outputfile":"l3s9\\ubguq1ttlvja.o"}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/qy6anwdowhix.o","index":5}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/qy6anwdowhix.o","index":5}
{"msg":"noderesult","processed_node_count":133,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/qhrvn2k8zv5e.o","index":175,"exitcode":0,"outputfile":"tapa\\qhrvn2k8zv5e.o"}
{"msg":"noderesult","processed_node_count":134,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/cctovojht57z.o","index":177,"exitcode":0,"outputfile":"tapa\\cctovojht57z.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/rk44aq354918.o","index":248}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/rk44aq354918.o","index":248}
{"msg":"noderesult","processed_node_count":135,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 l3s9/dn74wfuyip50.o","index":27,"exitcode":0,"outputfile":"l3s9\\dn74wfuyip50.o","stdout":"In file included from l3s9/31nfg42ed8r13.lump.cpp:3:\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\gfile-unity.c(60,12): warning: returning 'const char *' from a function with result type 'gchar *' (aka 'char *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n    return UnityPalDirectoryGetCurrent(&unused);\r\n           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n1 warning generated."}
{"msg":"noderesult","processed_node_count":136,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/dbezd06ubz2u.o","index":29,"exitcode":0,"outputfile":"nwd5\\dbezd06ubz2u.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/j0j4dwypuznz.o","index":255}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/j0j4dwypuznz.o","index":255}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/df6xic2eyj4t.o","index":250}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/df6xic2eyj4t.o","index":250}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/etlpam3yh080.o","index":439}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/etlpam3yh080.o","index":439}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/tyspvwr6a6bb.o","index":240}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/tyspvwr6a6bb.o","index":240}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/wmqe1qeneban.o","index":245}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/wmqe1qeneban.o","index":245}
{"msg":"noderesult","processed_node_count":137,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 l3s9/o9utnlxltzml.o","index":24,"exitcode":0,"outputfile":"l3s9\\o9utnlxltzml.o","stdout":"In file included from l3s9/31nfg42ed8r10.lump.cpp:4:\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\gdir-unity.c(130,16): warning: passing 'const gchar *' (aka 'const char *') to parameter of type 'void *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        g_free(dir->path_for_rewind);\r\n               ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(134,20): note: passing argument to parameter 'ptr' here\r\nvoid g_free (void *ptr);\r\n                   ^\r\nIn file included from l3s9/31nfg42ed8r10.lump.cpp:7:\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\goutput.c(40,21): warning: incompatible pointer types initializing 'vprintf_func' (aka 'void (*)(const char *, __builtin_va_list)') with an expression of type 'int (const char *, __builtin_va_list)' [-Wincompatible-pointer-types]\r\nstatic vprintf_func our_vprintf = vprintf;\r\n                    ^             ~~~~~~~\r\n2 warnings generated."}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/p4klk4fl36bp.o","index":438}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/p4klk4fl36bp.o","index":438}
{"msg":"noderesult","processed_node_count":138,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/qfi7tot2eqvg.o","index":239,"exitcode":0,"outputfile":"tapa\\qfi7tot2eqvg.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/tnws8q1kuw7x.o","index":437}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/tnws8q1kuw7x.o","index":437}
{"msg":"noderesult","processed_node_count":139,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/9i4yejb78mz0.o","index":171,"exitcode":0,"outputfile":"tapa\\9i4yejb78mz0.o"}
{"msg":"noderesult","processed_node_count":140,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/qy6anwdowhix.o","index":5,"exitcode":0,"outputfile":"o1sj\\qy6anwdowhix.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/xpwxpev2syza.o","index":436}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/xpwxpev2syza.o","index":436}
{"msg":"noderesult","processed_node_count":141,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/2si9r6yrn9m9.o","index":253,"exitcode":0,"outputfile":"tapa\\2si9r6yrn9m9.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/16qvbl8pykl9.o","index":435}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/16qvbl8pykl9.o","index":435}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/rgg891wfvjou.o","index":434}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/rgg891wfvjou.o","index":434}
{"msg":"noderesult","processed_node_count":142,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/etlpam3yh080.o","index":439,"exitcode":0,"outputfile":"q8q9\\etlpam3yh080.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/vqh21kw61vma.o","index":433}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/vqh21kw61vma.o","index":433}
{"msg":"noderesult","processed_node_count":143,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/tyspvwr6a6bb.o","index":240,"exitcode":0,"outputfile":"tapa\\tyspvwr6a6bb.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/3vcjnfbfxv3t.o","index":432}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/3vcjnfbfxv3t.o","index":432}
{"msg":"noderesult","processed_node_count":144,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/p4klk4fl36bp.o","index":438,"exitcode":0,"outputfile":"q8q9\\p4klk4fl36bp.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/3mbhu7ah2sfc.o","index":431}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/3mbhu7ah2sfc.o","index":431}
{"msg":"noderesult","processed_node_count":145,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/tnws8q1kuw7x.o","index":437,"exitcode":0,"outputfile":"q8q9\\tnws8q1kuw7x.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/yc3ygrmnjz2i.o","index":430}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/yc3ygrmnjz2i.o","index":430}
{"msg":"noderesult","processed_node_count":146,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/xpwxpev2syza.o","index":436,"exitcode":0,"outputfile":"q8q9\\xpwxpev2syza.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/mii4bmp3zaib.o","index":429}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/mii4bmp3zaib.o","index":429}
{"msg":"noderesult","processed_node_count":147,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/16qvbl8pykl9.o","index":435,"exitcode":0,"outputfile":"q8q9\\16qvbl8pykl9.o"}
{"msg":"noderesult","processed_node_count":148,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/3vcjnfbfxv3t.o","index":432,"exitcode":0,"outputfile":"q8q9\\3vcjnfbfxv3t.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/m5bn8xyw4a55.o","index":427}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/m5bn8xyw4a55.o","index":427}
{"msg":"noderesult","processed_node_count":149,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/rgg891wfvjou.o","index":434,"exitcode":0,"outputfile":"q8q9\\rgg891wfvjou.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/usghbcd4g0gi.o","index":428}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/usghbcd4g0gi.o","index":428}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/cvl4oz8paclb.o","index":426}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/cvl4oz8paclb.o","index":426}
{"msg":"noderesult","processed_node_count":150,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/3mbhu7ah2sfc.o","index":431,"exitcode":0,"outputfile":"q8q9\\3mbhu7ah2sfc.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/dyag3wu70264.o","index":425}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/dyag3wu70264.o","index":425}
{"msg":"noderesult","processed_node_count":151,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/o61b9xbj8v00.o","index":166,"exitcode":0,"outputfile":"tapa\\o61b9xbj8v00.o"}
{"msg":"noderesult","processed_node_count":152,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/j0j4dwypuznz.o","index":255,"exitcode":0,"outputfile":"tapa\\j0j4dwypuznz.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/9e88i5g75993.o","index":423}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/9e88i5g75993.o","index":423}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/mhyu9w283jip.o","index":424}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/mhyu9w283jip.o","index":424}
{"msg":"noderesult","processed_node_count":153,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/m5bn8xyw4a55.o","index":427,"exitcode":0,"outputfile":"q8q9\\m5bn8xyw4a55.o"}
{"msg":"noderesult","processed_node_count":154,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 aa4b/mpavjz22hxa8.o","index":2,"exitcode":0,"outputfile":"aa4b\\mpavjz22hxa8.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/dv33z8xp40ji.o","index":422}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/dv33z8xp40ji.o","index":422}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/dylh2fqn70rm.o","index":421}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/dylh2fqn70rm.o","index":421}
{"msg":"noderesult","processed_node_count":155,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/cvl4oz8paclb.o","index":426,"exitcode":0,"outputfile":"q8q9\\cvl4oz8paclb.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/g4o2hzobzcgs.o","index":420}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/g4o2hzobzcgs.o","index":420}
{"msg":"noderesult","processed_node_count":156,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/mii4bmp3zaib.o","index":429,"exitcode":0,"outputfile":"q8q9\\mii4bmp3zaib.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/2z4hv49lto2d.o","index":419}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/2z4hv49lto2d.o","index":419}
{"msg":"noderesult","processed_node_count":157,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/dyag3wu70264.o","index":425,"exitcode":0,"outputfile":"q8q9\\dyag3wu70264.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/r5iutmq6md45.o","index":418}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/r5iutmq6md45.o","index":418}
{"msg":"noderesult","processed_node_count":158,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/dylh2fqn70rm.o","index":421,"exitcode":0,"outputfile":"q8q9\\dylh2fqn70rm.o"}
{"msg":"noderesult","processed_node_count":159,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/vqh21kw61vma.o","index":433,"exitcode":0,"outputfile":"q8q9\\vqh21kw61vma.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/z6hf124nn6rd.o","index":416}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/z6hf124nn6rd.o","index":416}
{"msg":"noderesult","processed_node_count":160,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/t01dpajcwbm9.o","index":176,"exitcode":0,"outputfile":"tapa\\t01dpajcwbm9.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/zip28tk6wlw4.o","index":417}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/zip28tk6wlw4.o","index":417}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/t65s1yx6dclc.o","index":415}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/t65s1yx6dclc.o","index":415}
{"msg":"noderesult","processed_node_count":161,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/mhyu9w283jip.o","index":424,"exitcode":0,"outputfile":"q8q9\\mhyu9w283jip.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/p8kxv0iazmh4.o","index":414}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/p8kxv0iazmh4.o","index":414}
{"msg":"noderesult","processed_node_count":162,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/dv33z8xp40ji.o","index":422,"exitcode":0,"outputfile":"q8q9\\dv33z8xp40ji.o"}
{"msg":"noderesult","processed_node_count":163,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/g4o2hzobzcgs.o","index":420,"exitcode":0,"outputfile":"q8q9\\g4o2hzobzcgs.o"}
{"msg":"noderesult","processed_node_count":164,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/2z4hv49lto2d.o","index":419,"exitcode":0,"outputfile":"q8q9\\2z4hv49lto2d.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/3kxsvboeswo5.o","index":412}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/3kxsvboeswo5.o","index":412}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/4sh9fr4cwy5k.o","index":413}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/4sh9fr4cwy5k.o","index":413}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/i5t4f29gp8cm.o","index":411}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/i5t4f29gp8cm.o","index":411}
{"msg":"noderesult","processed_node_count":165,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/7hsruchm4tn6.o","index":168,"exitcode":0,"outputfile":"tapa\\7hsruchm4tn6.o"}
{"msg":"noderesult","processed_node_count":166,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/9e88i5g75993.o","index":423,"exitcode":0,"outputfile":"q8q9\\9e88i5g75993.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/zsf8kx84dly5.o","index":409}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/zsf8kx84dly5.o","index":409}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/xtxzij85gsnc.o","index":410}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/xtxzij85gsnc.o","index":410}
{"msg":"noderesult","processed_node_count":167,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/wmqe1qeneban.o","index":245,"exitcode":0,"outputfile":"tapa\\wmqe1qeneban.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/bcmlc1gy2j13.o","index":408}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/bcmlc1gy2j13.o","index":408}
{"msg":"noderesult","processed_node_count":168,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/r5iutmq6md45.o","index":418,"exitcode":0,"outputfile":"q8q9\\r5iutmq6md45.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/qwixwr20zvpk.o","index":407}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/qwixwr20zvpk.o","index":407}
{"msg":"noderesult","processed_node_count":169,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/t65s1yx6dclc.o","index":415,"exitcode":0,"outputfile":"q8q9\\t65s1yx6dclc.o"}
{"msg":"noderesult","processed_node_count":170,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/zip28tk6wlw4.o","index":417,"exitcode":0,"outputfile":"q8q9\\zip28tk6wlw4.o"}
{"msg":"noderesult","processed_node_count":171,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/6zaswe5itjdt.o","index":165,"exitcode":0,"outputfile":"tapa\\6zaswe5itjdt.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/poygccm2vt84.o","index":406}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/poygccm2vt84.o","index":406}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/48usw274s5wl.o","index":405}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/48usw274s5wl.o","index":405}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/jtr4gtt7phl2.o","index":404}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/jtr4gtt7phl2.o","index":404}
{"msg":"noderesult","processed_node_count":172,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/xtxzij85gsnc.o","index":410,"exitcode":0,"outputfile":"q8q9\\xtxzij85gsnc.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/il7nwdd9lf4m.o","index":403}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/il7nwdd9lf4m.o","index":403}
{"msg":"noderesult","processed_node_count":173,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/p8kxv0iazmh4.o","index":414,"exitcode":0,"outputfile":"q8q9\\p8kxv0iazmh4.o"}
{"msg":"noderesult","processed_node_count":174,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/yc3ygrmnjz2i.o","index":430,"exitcode":0,"outputfile":"q8q9\\yc3ygrmnjz2i.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/x53zg4ybjrs3.o","index":402}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/x53zg4ybjrs3.o","index":402}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/wxjjwoidfpbo.o","index":401}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/wxjjwoidfpbo.o","index":401}
{"msg":"noderesult","processed_node_count":175,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/z6hf124nn6rd.o","index":416,"exitcode":0,"outputfile":"q8q9\\z6hf124nn6rd.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/5dvt39bbhvcv.o","index":400}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/5dvt39bbhvcv.o","index":400}
{"msg":"noderesult","processed_node_count":176,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/zsf8kx84dly5.o","index":409,"exitcode":0,"outputfile":"q8q9\\zsf8kx84dly5.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/kyr5n0xde70b.o","index":399}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/kyr5n0xde70b.o","index":399}
{"msg":"noderesult","processed_node_count":177,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/df6xic2eyj4t.o","index":250,"exitcode":0,"outputfile":"tapa\\df6xic2eyj4t.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/zioh8qjgbjps.o","index":398}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/zioh8qjgbjps.o","index":398}
{"msg":"noderesult","processed_node_count":178,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/usghbcd4g0gi.o","index":428,"exitcode":0,"outputfile":"q8q9\\usghbcd4g0gi.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/bigvgf4fc1z4.o","index":397}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/bigvgf4fc1z4.o","index":397}
{"msg":"noderesult","processed_node_count":179,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/rk44aq354918.o","index":248,"exitcode":0,"outputfile":"tapa\\rk44aq354918.o"}
{"msg":"noderesult","processed_node_count":180,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/5dvt39bbhvcv.o","index":400,"exitcode":0,"outputfile":"q8q9\\5dvt39bbhvcv.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/0mhp1226duym.o","index":396}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/0mhp1226duym.o","index":396}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/1xwu6vlrqu0e.o","index":395}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/1xwu6vlrqu0e.o","index":395}
{"msg":"noderesult","processed_node_count":181,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/i5t4f29gp8cm.o","index":411,"exitcode":0,"outputfile":"q8q9\\i5t4f29gp8cm.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/vp2vvut0lqmv.o","index":394}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/vp2vvut0lqmv.o","index":394}
{"msg":"noderesult","processed_node_count":182,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/3kxsvboeswo5.o","index":412,"exitcode":0,"outputfile":"q8q9\\3kxsvboeswo5.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/0cndbv2lkbol.o","index":393}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/0cndbv2lkbol.o","index":393}
{"msg":"noderesult","processed_node_count":183,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/48usw274s5wl.o","index":405,"exitcode":0,"outputfile":"q8q9\\48usw274s5wl.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/5z6if2oes8bg.o","index":392}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/5z6if2oes8bg.o","index":392}
{"msg":"noderesult","processed_node_count":184,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/vp2vvut0lqmv.o","index":394,"exitcode":0,"outputfile":"q8q9\\vp2vvut0lqmv.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/kk3uzsahpk0w.o","index":391}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/kk3uzsahpk0w.o","index":391}
{"msg":"noderesult","processed_node_count":185,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/kyr5n0xde70b.o","index":399,"exitcode":0,"outputfile":"q8q9\\kyr5n0xde70b.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/z4z6jjwjmwod.o","index":390}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/z4z6jjwjmwod.o","index":390}
{"msg":"noderesult","processed_node_count":186,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/bcmlc1gy2j13.o","index":408,"exitcode":0,"outputfile":"q8q9\\bcmlc1gy2j13.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/kmk8qefciokc.o","index":389}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/kmk8qefciokc.o","index":389}
{"msg":"noderesult","processed_node_count":187,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/qwixwr20zvpk.o","index":407,"exitcode":0,"outputfile":"q8q9\\qwixwr20zvpk.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/uoxrhwb6uh78.o","index":388}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/uoxrhwb6uh78.o","index":388}
{"msg":"noderesult","processed_node_count":188,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/4sh9fr4cwy5k.o","index":413,"exitcode":0,"outputfile":"q8q9\\4sh9fr4cwy5k.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/d2v5koi2g7mk.o","index":387}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/d2v5koi2g7mk.o","index":387}
{"msg":"noderesult","processed_node_count":189,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/il7nwdd9lf4m.o","index":403,"exitcode":0,"outputfile":"q8q9\\il7nwdd9lf4m.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/5yljwj390wq2.o","index":386}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/5yljwj390wq2.o","index":386}
{"msg":"noderesult","processed_node_count":190,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/0cndbv2lkbol.o","index":393,"exitcode":0,"outputfile":"q8q9\\0cndbv2lkbol.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/o7nozt8ub7o2.o","index":385}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/o7nozt8ub7o2.o","index":385}
{"msg":"noderesult","processed_node_count":191,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/jtr4gtt7phl2.o","index":404,"exitcode":0,"outputfile":"q8q9\\jtr4gtt7phl2.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/6figx4iiuw82.o","index":384}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/6figx4iiuw82.o","index":384}
{"msg":"noderesult","processed_node_count":192,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/5yljwj390wq2.o","index":386,"exitcode":0,"outputfile":"q8q9\\5yljwj390wq2.o"}
{"msg":"noderesult","processed_node_count":193,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/d2v5koi2g7mk.o","index":387,"exitcode":0,"outputfile":"q8q9\\d2v5koi2g7mk.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/6x5wb7yqdgz7.o","index":382}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/6x5wb7yqdgz7.o","index":382}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/06k6xcjpawcy.o","index":383}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/06k6xcjpawcy.o","index":383}
{"msg":"noderesult","processed_node_count":194,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/poygccm2vt84.o","index":406,"exitcode":0,"outputfile":"q8q9\\poygccm2vt84.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/eiq4iyzclqpc.o","index":381}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/eiq4iyzclqpc.o","index":381}
{"msg":"noderesult","processed_node_count":195,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/5z6if2oes8bg.o","index":392,"exitcode":0,"outputfile":"q8q9\\5z6if2oes8bg.o"}
{"msg":"noderesult","processed_node_count":196,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/uoxrhwb6uh78.o","index":388,"exitcode":0,"outputfile":"q8q9\\uoxrhwb6uh78.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/rdnc6agl2oc5.o","index":380}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/rdnc6agl2oc5.o","index":380}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/owdan9so5d8z.o","index":379}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/owdan9so5d8z.o","index":379}
{"msg":"noderesult","processed_node_count":197,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/x53zg4ybjrs3.o","index":402,"exitcode":0,"outputfile":"q8q9\\x53zg4ybjrs3.o"}
{"msg":"noderesult","processed_node_count":198,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/wxjjwoidfpbo.o","index":401,"exitcode":0,"outputfile":"q8q9\\wxjjwoidfpbo.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/baxjbjaqyula.o","index":378}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/baxjbjaqyula.o","index":378}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ot3wdtbqae4f.o","index":377}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ot3wdtbqae4f.o","index":377}
{"msg":"noderesult","processed_node_count":199,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/o7nozt8ub7o2.o","index":385,"exitcode":0,"outputfile":"q8q9\\o7nozt8ub7o2.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/nwpqu17stoib.o","index":376}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/nwpqu17stoib.o","index":376}
{"msg":"noderesult","processed_node_count":200,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/6x5wb7yqdgz7.o","index":382,"exitcode":0,"outputfile":"q8q9\\6x5wb7yqdgz7.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/rz59odmr48rh.o","index":375}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/rz59odmr48rh.o","index":375}
{"msg":"noderesult","processed_node_count":201,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/6figx4iiuw82.o","index":384,"exitcode":0,"outputfile":"q8q9\\6figx4iiuw82.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ww3bxxhrmxva.o","index":374}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ww3bxxhrmxva.o","index":374}
{"msg":"noderesult","processed_node_count":202,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/eiq4iyzclqpc.o","index":381,"exitcode":0,"outputfile":"q8q9\\eiq4iyzclqpc.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/bh0nho3tj9jr.o","index":373}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/bh0nho3tj9jr.o","index":373}
{"msg":"noderesult","processed_node_count":203,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/rdnc6agl2oc5.o","index":380,"exitcode":0,"outputfile":"q8q9\\rdnc6agl2oc5.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/stcjaowd4rfu.o","index":372}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/stcjaowd4rfu.o","index":372}
{"msg":"noderesult","processed_node_count":204,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/06k6xcjpawcy.o","index":383,"exitcode":0,"outputfile":"q8q9\\06k6xcjpawcy.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/nlbc58r2uqeh.o","index":371}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/nlbc58r2uqeh.o","index":371}
{"msg":"noderesult","processed_node_count":205,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/owdan9so5d8z.o","index":379,"exitcode":0,"outputfile":"q8q9\\owdan9so5d8z.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/hmqkc72qvt01.o","index":370}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/hmqkc72qvt01.o","index":370}
{"msg":"noderesult","processed_node_count":206,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/nwpqu17stoib.o","index":376,"exitcode":0,"outputfile":"q8q9\\nwpqu17stoib.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/vatvycca1aqj.o","index":369}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/vatvycca1aqj.o","index":369}
{"msg":"noderesult","processed_node_count":207,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/zioh8qjgbjps.o","index":398,"exitcode":0,"outputfile":"q8q9\\zioh8qjgbjps.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/dnd127kvkf5e.o","index":368}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/dnd127kvkf5e.o","index":368}
{"msg":"noderesult","processed_node_count":208,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/baxjbjaqyula.o","index":378,"exitcode":0,"outputfile":"q8q9\\baxjbjaqyula.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/us0yx9x8cao3.o","index":367}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/us0yx9x8cao3.o","index":367}
{"msg":"noderesult","processed_node_count":209,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/rz59odmr48rh.o","index":375,"exitcode":0,"outputfile":"q8q9\\rz59odmr48rh.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/32hc3pi60soe.o","index":366}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/32hc3pi60soe.o","index":366}
{"msg":"noderesult","processed_node_count":210,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ww3bxxhrmxva.o","index":374,"exitcode":0,"outputfile":"q8q9\\ww3bxxhrmxva.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/0bqxson2x5jg.o","index":365}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/0bqxson2x5jg.o","index":365}
{"msg":"noderesult","processed_node_count":211,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/bigvgf4fc1z4.o","index":397,"exitcode":0,"outputfile":"q8q9\\bigvgf4fc1z4.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/g8m0rzg13hph.o","index":364}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/g8m0rzg13hph.o","index":364}
{"msg":"noderesult","processed_node_count":212,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/nlbc58r2uqeh.o","index":371,"exitcode":0,"outputfile":"q8q9\\nlbc58r2uqeh.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/rtg4zlrvwioq.o","index":363}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/rtg4zlrvwioq.o","index":363}
{"msg":"noderesult","processed_node_count":213,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/kk3uzsahpk0w.o","index":391,"exitcode":0,"outputfile":"q8q9\\kk3uzsahpk0w.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ju2tm4m9y2gd.o","index":362}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ju2tm4m9y2gd.o","index":362}
{"msg":"noderesult","processed_node_count":214,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/dnd127kvkf5e.o","index":368,"exitcode":0,"outputfile":"q8q9\\dnd127kvkf5e.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/m1xms5is5sb8.o","index":361}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/m1xms5is5sb8.o","index":361}
{"msg":"noderesult","processed_node_count":215,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/hmqkc72qvt01.o","index":370,"exitcode":0,"outputfile":"q8q9\\hmqkc72qvt01.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ltd67p2t1qus.o","index":360}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ltd67p2t1qus.o","index":360}
{"msg":"noderesult","processed_node_count":216,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/us0yx9x8cao3.o","index":367,"exitcode":0,"outputfile":"q8q9\\us0yx9x8cao3.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/0daisgowy2i9.o","index":359}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/0daisgowy2i9.o","index":359}
{"msg":"noderesult","processed_node_count":217,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/0mhp1226duym.o","index":396,"exitcode":0,"outputfile":"q8q9\\0mhp1226duym.o"}
{"msg":"noderesult","processed_node_count":218,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/z4z6jjwjmwod.o","index":390,"exitcode":0,"outputfile":"q8q9\\z4z6jjwjmwod.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/eqmdsrt0rcqa.o","index":357}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/eqmdsrt0rcqa.o","index":357}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/fy6tc79yve7p.o","index":358}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/fy6tc79yve7p.o","index":358}
{"msg":"noderesult","processed_node_count":219,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/kmk8qefciokc.o","index":389,"exitcode":0,"outputfile":"q8q9\\kmk8qefciokc.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/tajpcif3ooer.o","index":356}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/tajpcif3ooer.o","index":356}
{"msg":"noderesult","processed_node_count":220,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ot3wdtbqae4f.o","index":377,"exitcode":0,"outputfile":"q8q9\\ot3wdtbqae4f.o"}
{"msg":"noderesult","processed_node_count":221,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/vatvycca1aqj.o","index":369,"exitcode":0,"outputfile":"q8q9\\vatvycca1aqj.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/s2y8r2y4kmxb.o","index":355}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/s2y8r2y4kmxb.o","index":355}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/7mvkctk7hyls.o","index":354}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/7mvkctk7hyls.o","index":354}
{"msg":"noderesult","processed_node_count":222,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/32hc3pi60soe.o","index":366,"exitcode":0,"outputfile":"q8q9\\32hc3pi60soe.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/8ci6eli7s91x.o","index":353}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/8ci6eli7s91x.o","index":353}
{"msg":"noderesult","processed_node_count":223,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/1xwu6vlrqu0e.o","index":395,"exitcode":0,"outputfile":"q8q9\\1xwu6vlrqu0e.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/m7rwwj69eaa9.o","index":352}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/m7rwwj69eaa9.o","index":352}
{"msg":"noderesult","processed_node_count":224,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/m1xms5is5sb8.o","index":361,"exitcode":0,"outputfile":"q8q9\\m1xms5is5sb8.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/1imosgfo1mi4.o","index":350}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/1imosgfo1mi4.o","index":350}
{"msg":"noderesult","processed_node_count":225,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/0daisgowy2i9.o","index":359,"exitcode":0,"outputfile":"q8q9\\0daisgowy2i9.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/0a2770ypxk1o.o","index":349}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/0a2770ypxk1o.o","index":349}
{"msg":"noderesult","processed_node_count":226,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/eqmdsrt0rcqa.o","index":357,"exitcode":0,"outputfile":"q8q9\\eqmdsrt0rcqa.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/fvyjsrksuwp5.o","index":348}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/fvyjsrksuwp5.o","index":348}
{"msg":"noderesult","processed_node_count":227,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/g8m0rzg13hph.o","index":364,"exitcode":0,"outputfile":"q8q9\\g8m0rzg13hph.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ufvvci6ur8dm.o","index":347}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ufvvci6ur8dm.o","index":347}
{"msg":"noderesult","processed_node_count":228,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/fy6tc79yve7p.o","index":358,"exitcode":0,"outputfile":"q8q9\\fy6tc79yve7p.o"}
{"msg":"noderesult","processed_node_count":229,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/bh0nho3tj9jr.o","index":373,"exitcode":0,"outputfile":"q8q9\\bh0nho3tj9jr.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/t7afs2pwn6w6.o","index":346}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/t7afs2pwn6w6.o","index":346}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/2wxgw7rp4d9o.o","index":345}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/2wxgw7rp4d9o.o","index":345}
{"msg":"noderesult","processed_node_count":230,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ju2tm4m9y2gd.o","index":362,"exitcode":0,"outputfile":"q8q9\\ju2tm4m9y2gd.o"}
{"msg":"noderesult","processed_node_count":231,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ltd67p2t1qus.o","index":360,"exitcode":0,"outputfile":"q8q9\\ltd67p2t1qus.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/2gd15dkmtxoh.o","index":344}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/2gd15dkmtxoh.o","index":344}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/5cgym9v1srt4.o","index":343}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/5cgym9v1srt4.o","index":343}
{"msg":"noderesult","processed_node_count":232,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/stcjaowd4rfu.o","index":372,"exitcode":0,"outputfile":"q8q9\\stcjaowd4rfu.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/p706qf0jhgdp.o","index":342}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/p706qf0jhgdp.o","index":342}
{"msg":"noderesult","processed_node_count":233,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/s2y8r2y4kmxb.o","index":355,"exitcode":0,"outputfile":"q8q9\\s2y8r2y4kmxb.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/hfj0ewb1sl1e.o","index":341}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/hfj0ewb1sl1e.o","index":341}
{"msg":"noderesult","processed_node_count":234,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/5cgym9v1srt4.o","index":343,"exitcode":0,"outputfile":"q8q9\\5cgym9v1srt4.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/yndlzpxikqqn.o","index":340}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/yndlzpxikqqn.o","index":340}
{"msg":"noderesult","processed_node_count":235,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/7mvkctk7hyls.o","index":354,"exitcode":0,"outputfile":"q8q9\\7mvkctk7hyls.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/loouacry68d4.o","index":339}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/loouacry68d4.o","index":339}
{"msg":"noderesult","processed_node_count":236,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/tajpcif3ooer.o","index":356,"exitcode":0,"outputfile":"q8q9\\tajpcif3ooer.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/mpptnd75rhkd.o","index":338}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/mpptnd75rhkd.o","index":338}
{"msg":"noderesult","processed_node_count":237,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/m7rwwj69eaa9.o","index":352,"exitcode":0,"outputfile":"q8q9\\m7rwwj69eaa9.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/19l573s8ot8t.o","index":337}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/19l573s8ot8t.o","index":337}
{"msg":"noderesult","processed_node_count":238,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/2wxgw7rp4d9o.o","index":345,"exitcode":0,"outputfile":"q8q9\\2wxgw7rp4d9o.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/guihsuebm5wa.o","index":336}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/guihsuebm5wa.o","index":336}
{"msg":"noderesult","processed_node_count":239,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/8ci6eli7s91x.o","index":353,"exitcode":0,"outputfile":"q8q9\\8ci6eli7s91x.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/fmy07eyci3fv.o","index":335}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/fmy07eyci3fv.o","index":335}
{"msg":"noderesult","processed_node_count":240,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/loouacry68d4.o","index":339,"exitcode":0,"outputfile":"q8q9\\loouacry68d4.o"}
{"msg":"noderesult","processed_node_count":241,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/rtg4zlrvwioq.o","index":363,"exitcode":0,"outputfile":"q8q9\\rtg4zlrvwioq.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/u6ucs5jfff4b.o","index":334}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/u6ucs5jfff4b.o","index":334}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/d3wmwxb0l71d.o","index":333}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/d3wmwxb0l71d.o","index":333}
{"msg":"noderesult","processed_node_count":242,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/t7afs2pwn6w6.o","index":346,"exitcode":0,"outputfile":"q8q9\\t7afs2pwn6w6.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/g5pmvxp81eht.o","index":332}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/g5pmvxp81eht.o","index":332}
{"msg":"noderesult","processed_node_count":243,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/yndlzpxikqqn.o","index":340,"exitcode":0,"outputfile":"q8q9\\yndlzpxikqqn.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/vpmyfobbzq59.o","index":331}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/vpmyfobbzq59.o","index":331}
{"msg":"noderesult","processed_node_count":244,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/p706qf0jhgdp.o","index":342,"exitcode":0,"outputfile":"q8q9\\p706qf0jhgdp.o"}
{"msg":"noderesult","processed_node_count":245,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/0bqxson2x5jg.o","index":365,"exitcode":0,"outputfile":"q8q9\\0bqxson2x5jg.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/uh2hv8ucvoou.o","index":330}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/uh2hv8ucvoou.o","index":330}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/91ytfzgfs0cb.o","index":329}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/91ytfzgfs0cb.o","index":329}
{"msg":"noderesult","processed_node_count":246,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/fvyjsrksuwp5.o","index":348,"exitcode":0,"outputfile":"q8q9\\fvyjsrksuwp5.o"}
{"msg":"noderesult","processed_node_count":247,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/2gd15dkmtxoh.o","index":344,"exitcode":0,"outputfile":"q8q9\\2gd15dkmtxoh.o"}
{"msg":"noderesult","processed_node_count":248,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/mpptnd75rhkd.o","index":338,"exitcode":0,"outputfile":"q8q9\\mpptnd75rhkd.o"}
{"msg":"noderesult","processed_node_count":249,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ufvvci6ur8dm.o","index":347,"exitcode":0,"outputfile":"q8q9\\ufvvci6ur8dm.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/omv5zp2hpc1r.o","index":328}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/omv5zp2hpc1r.o","index":328}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/nebpfamjlakc.o","index":327}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/nebpfamjlakc.o","index":327}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/2y70z07lim8s.o","index":326}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/2y70z07lim8s.o","index":326}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/8ms8bm4j6yib.o","index":325}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/8ms8bm4j6yib.o","index":325}
{"msg":"noderesult","processed_node_count":250,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/0a2770ypxk1o.o","index":349,"exitcode":0,"outputfile":"q8q9\\0a2770ypxk1o.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/n7okwcqm3a7r.o","index":324}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/n7okwcqm3a7r.o","index":324}
{"msg":"noderesult","processed_node_count":251,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/1imosgfo1mi4.o","index":350,"exitcode":0,"outputfile":"q8q9\\1imosgfo1mi4.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/mz43bx9nz8pc.o","index":323}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/mz43bx9nz8pc.o","index":323}
{"msg":"noderesult","processed_node_count":252,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/8ms8bm4j6yib.o","index":325,"exitcode":0,"outputfile":"q8q9\\8ms8bm4j6yib.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/1j1fwnvqwket.o","index":322}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/1j1fwnvqwket.o","index":322}
{"msg":"noderesult","processed_node_count":253,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/hfj0ewb1sl1e.o","index":341,"exitcode":0,"outputfile":"q8q9\\hfj0ewb1sl1e.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/1qnkflrnekrd.o","index":321}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/1qnkflrnekrd.o","index":321}
{"msg":"noderesult","processed_node_count":254,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/guihsuebm5wa.o","index":336,"exitcode":0,"outputfile":"q8q9\\guihsuebm5wa.o"}
{"msg":"noderesult","processed_node_count":255,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/19l573s8ot8t.o","index":337,"exitcode":0,"outputfile":"q8q9\\19l573s8ot8t.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/frabzvwpnmsg.o","index":320}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/frabzvwpnmsg.o","index":320}
{"msg":"noderesult","processed_node_count":256,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/d3wmwxb0l71d.o","index":333,"exitcode":0,"outputfile":"q8q9\\d3wmwxb0l71d.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ub7mjmiskygx.o","index":319}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ub7mjmiskygx.o","index":319}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/t3m6y61tgwzh.o","index":318}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/t3m6y61tgwzh.o","index":318}
{"msg":"noderesult","processed_node_count":257,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/u6ucs5jfff4b.o","index":334,"exitcode":0,"outputfile":"q8q9\\u6ucs5jfff4b.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/8njijxnwd8ny.o","index":317}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/8njijxnwd8ny.o","index":317}
{"msg":"noderesult","processed_node_count":258,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/fmy07eyci3fv.o","index":335,"exitcode":0,"outputfile":"q8q9\\fmy07eyci3fv.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/7fz1yh7x956i.o","index":316}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/7fz1yh7x956i.o","index":316}
{"msg":"noderesult","processed_node_count":259,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/g5pmvxp81eht.o","index":332,"exitcode":0,"outputfile":"q8q9\\g5pmvxp81eht.o"}
{"msg":"noderesult","processed_node_count":260,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/n7okwcqm3a7r.o","index":324,"exitcode":0,"outputfile":"q8q9\\n7okwcqm3a7r.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/m0vdj8s06hvz.o","index":315}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/m0vdj8s06hvz.o","index":315}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/1ksp3ye33tjg.o","index":314}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/1ksp3ye33tjg.o","index":314}
{"msg":"noderesult","processed_node_count":261,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/91ytfzgfs0cb.o","index":329,"exitcode":0,"outputfile":"q8q9\\91ytfzgfs0cb.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/0c88ijy4zr20.o","index":313}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/0c88ijy4zr20.o","index":313}
{"msg":"noderesult","processed_node_count":262,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/uh2hv8ucvoou.o","index":330,"exitcode":0,"outputfile":"q8q9\\uh2hv8ucvoou.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/fx4k39j7w3qh.o","index":312}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/fx4k39j7w3qh.o","index":312}
{"msg":"noderesult","processed_node_count":263,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/2y70z07lim8s.o","index":326,"exitcode":0,"outputfile":"q8q9\\2y70z07lim8s.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/uh1wn059tffy.o","index":311}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/uh1wn059tffy.o","index":311}
{"msg":"noderesult","processed_node_count":264,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/vpmyfobbzq59.o","index":331,"exitcode":0,"outputfile":"q8q9\\vpmyfobbzq59.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/gbkwzbdqbwfu.o","index":310}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/gbkwzbdqbwfu.o","index":310}
{"msg":"noderesult","processed_node_count":265,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/mz43bx9nz8pc.o","index":323,"exitcode":0,"outputfile":"q8q9\\mz43bx9nz8pc.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/n7t5m94wou4a.o","index":309}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/n7t5m94wou4a.o","index":309}
{"msg":"noderesult","processed_node_count":266,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/nebpfamjlakc.o","index":327,"exitcode":0,"outputfile":"q8q9\\nebpfamjlakc.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/4b9ood22m1fy.o","index":308}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/4b9ood22m1fy.o","index":308}
{"msg":"noderesult","processed_node_count":267,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/omv5zp2hpc1r.o","index":328,"exitcode":0,"outputfile":"q8q9\\omv5zp2hpc1r.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/fbn84t7z5on3.o","index":307}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/fbn84t7z5on3.o","index":307}
{"msg":"noderesult","processed_node_count":268,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/1j1fwnvqwket.o","index":322,"exitcode":0,"outputfile":"q8q9\\1j1fwnvqwket.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/7qz316bqna7c.o","index":306}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/7qz316bqna7c.o","index":306}
{"msg":"noderesult","processed_node_count":269,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/0c88ijy4zr20.o","index":313,"exitcode":0,"outputfile":"q8q9\\0c88ijy4zr20.o"}
{"msg":"noderesult","processed_node_count":270,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/1ksp3ye33tjg.o","index":314,"exitcode":0,"outputfile":"q8q9\\1ksp3ye33tjg.o"}
{"msg":"noderesult","processed_node_count":271,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/8njijxnwd8ny.o","index":317,"exitcode":0,"outputfile":"q8q9\\8njijxnwd8ny.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ippglipgcz8g.o","index":305}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ippglipgcz8g.o","index":305}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/pwplvu3zsh24.o","index":304}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/pwplvu3zsh24.o","index":304}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ge8ax8kv3q4w.o","index":303}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ge8ax8kv3q4w.o","index":303}
{"msg":"noderesult","processed_node_count":272,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/uh1wn059tffy.o","index":311,"exitcode":0,"outputfile":"q8q9\\uh1wn059tffy.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/yz1fv1xn4uvx.o","index":302}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/yz1fv1xn4uvx.o","index":302}
{"msg":"noderesult","processed_node_count":273,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/t3m6y61tgwzh.o","index":318,"exitcode":0,"outputfile":"q8q9\\t3m6y61tgwzh.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/gdn7hvpl76wq.o","index":301}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/gdn7hvpl76wq.o","index":301}
{"msg":"noderesult","processed_node_count":274,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/4b9ood22m1fy.o","index":308,"exitcode":0,"outputfile":"q8q9\\4b9ood22m1fy.o"}
{"msg":"noderesult","processed_node_count":275,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/1qnkflrnekrd.o","index":321,"exitcode":0,"outputfile":"q8q9\\1qnkflrnekrd.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ahfmvn9ykve7.o","index":300}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ahfmvn9ykve7.o","index":300}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/1ful6bm93q9v.o","index":299}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/1ful6bm93q9v.o","index":299}
{"msg":"noderesult","processed_node_count":276,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/7qz316bqna7c.o","index":306,"exitcode":0,"outputfile":"q8q9\\7qz316bqna7c.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/er9b718xr6gh.o","index":298}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/er9b718xr6gh.o","index":298}
{"msg":"noderesult","processed_node_count":277,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/frabzvwpnmsg.o","index":320,"exitcode":0,"outputfile":"q8q9\\frabzvwpnmsg.o"}
{"msg":"noderesult","processed_node_count":278,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/fx4k39j7w3qh.o","index":312,"exitcode":0,"outputfile":"q8q9\\fx4k39j7w3qh.o"}
{"msg":"noderesult","processed_node_count":279,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ge8ax8kv3q4w.o","index":303,"exitcode":0,"outputfile":"q8q9\\ge8ax8kv3q4w.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/10any52d6dkx.o","index":297}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/10any52d6dkx.o","index":297}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/mypc8ptl4aun.o","index":351}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/mypc8ptl4aun.o","index":351}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/kt2oj2wshjsc.o","index":295}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/kt2oj2wshjsc.o","index":295}
{"msg":"noderesult","processed_node_count":280,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/7fz1yh7x956i.o","index":316,"exitcode":0,"outputfile":"q8q9\\7fz1yh7x956i.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/jli8ymgudhbx.o","index":294}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/jli8ymgudhbx.o","index":294}
{"msg":"noderesult","processed_node_count":281,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/pwplvu3zsh24.o","index":304,"exitcode":0,"outputfile":"q8q9\\pwplvu3zsh24.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/y5ekjd2watzd.o","index":293}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/y5ekjd2watzd.o","index":293}
{"msg":"noderesult","processed_node_count":282,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/n7t5m94wou4a.o","index":309,"exitcode":0,"outputfile":"q8q9\\n7t5m94wou4a.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/dqbw33nz74nu.o","index":292}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/dqbw33nz74nu.o","index":292}
{"msg":"noderesult","processed_node_count":283,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/gbkwzbdqbwfu.o","index":310,"exitcode":0,"outputfile":"q8q9\\gbkwzbdqbwfu.o"}
{"msg":"noderesult","processed_node_count":284,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/yz1fv1xn4uvx.o","index":302,"exitcode":0,"outputfile":"q8q9\\yz1fv1xn4uvx.o"}
{"msg":"noderesult","processed_node_count":285,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/m0vdj8s06hvz.o","index":315,"exitcode":0,"outputfile":"q8q9\\m0vdj8s06hvz.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ao7rm7aqidnf.o","index":291}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ao7rm7aqidnf.o","index":291}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/1dngrz1v5swk.o","index":289}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/1dngrz1v5swk.o","index":289}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ealrq3jtgwnn.o","index":290}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ealrq3jtgwnn.o","index":290}
{"msg":"noderesult","processed_node_count":286,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ub7mjmiskygx.o","index":319,"exitcode":0,"outputfile":"q8q9\\ub7mjmiskygx.o"}
{"msg":"newNode","annotation":"WriteResponseFile C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/rsp/18325343352748135175.rsp","index":515}
{"msg":"runNodeAction","annotation":"WriteResponseFile C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/rsp/18325343352748135175.rsp","index":515}
{"msg":"noderesult","processed_node_count":287,"number_of_nodes_ever_queued":524,"annotation":"WriteResponseFile C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/rsp/18325343352748135175.rsp","index":515,"exitcode":0,"outputfile":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\build\\il2cpp_armeabi-v7a_Debug\\il2cpp_cache\\buildstate\\artifacts\\rsp\\18325343352748135175.rsp"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/n07abn9rs7nl.o","index":286}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/n07abn9rs7nl.o","index":286}
{"msg":"noderesult","processed_node_count":288,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ahfmvn9ykve7.o","index":300,"exitcode":0,"outputfile":"q8q9\\ahfmvn9ykve7.o"}
{"msg":"noderesult","processed_node_count":289,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/gdn7hvpl76wq.o","index":301,"exitcode":0,"outputfile":"q8q9\\gdn7hvpl76wq.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/irt73r8qh5ll.o","index":285}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/irt73r8qh5ll.o","index":285}
{"msg":"noderesult","processed_node_count":290,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/n07abn9rs7nl.o","index":286,"exitcode":0,"outputfile":"tapa\\n07abn9rs7nl.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/gyzldtng3z6p.o","index":283}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/gyzldtng3z6p.o","index":283}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/v09s0o9mes60.o","index":284}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/v09s0o9mes60.o","index":284}
{"msg":"noderesult","processed_node_count":291,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/gyzldtng3z6p.o","index":283,"exitcode":0,"outputfile":"tapa\\gyzldtng3z6p.o"}
{"msg":"noderesult","processed_node_count":292,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/er9b718xr6gh.o","index":298,"exitcode":0,"outputfile":"q8q9\\er9b718xr6gh.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/nx2wkyroz26w.o","index":281}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/nx2wkyroz26w.o","index":281}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/4vm8yms30b1n.o","index":282}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/4vm8yms30b1n.o","index":282}
{"msg":"noderesult","processed_node_count":293,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/10any52d6dkx.o","index":297,"exitcode":0,"outputfile":"q8q9\\10any52d6dkx.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/gaa3xfzhv2go.o","index":280}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/gaa3xfzhv2go.o","index":280}
{"msg":"noderesult","processed_node_count":294,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/irt73r8qh5ll.o","index":285,"exitcode":0,"outputfile":"tapa\\irt73r8qh5ll.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/jqk189892szi.o","index":279}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/jqk189892szi.o","index":279}
{"msg":"noderesult","processed_node_count":295,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/4vm8yms30b1n.o","index":282,"exitcode":0,"outputfile":"tapa\\4vm8yms30b1n.o"}
{"msg":"noderesult","processed_node_count":296,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/1ful6bm93q9v.o","index":299,"exitcode":0,"outputfile":"q8q9\\1ful6bm93q9v.o"}
{"msg":"noderesult","processed_node_count":297,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/gaa3xfzhv2go.o","index":280,"exitcode":0,"outputfile":"tapa\\gaa3xfzhv2go.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/ijhjb5rypm6e.o","index":276}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/ijhjb5rypm6e.o","index":276}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/4u1ttgp32urs.o","index":278}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/4u1ttgp32urs.o","index":278}
{"msg":"noderesult","processed_node_count":298,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/nx2wkyroz26w.o","index":281,"exitcode":0,"outputfile":"tapa\\nx2wkyroz26w.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/5twjngtkeq50.o","index":275}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/5twjngtkeq50.o","index":275}
{"msg":"noderesult","processed_node_count":299,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/v09s0o9mes60.o","index":284,"exitcode":0,"outputfile":"tapa\\v09s0o9mes60.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/90mqkxduhlue.o","index":277}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/90mqkxduhlue.o","index":277}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/c6nttv9fc937.o","index":274}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/c6nttv9fc937.o","index":274}
{"msg":"noderesult","processed_node_count":300,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/jqk189892szi.o","index":279,"exitcode":0,"outputfile":"tapa\\jqk189892szi.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/e1l2ey60ur6x.o","index":273}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/e1l2ey60ur6x.o","index":273}
{"msg":"noderesult","processed_node_count":301,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/fbn84t7z5on3.o","index":307,"exitcode":0,"outputfile":"q8q9\\fbn84t7z5on3.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/9lim5gcan4pm.o","index":272}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/9lim5gcan4pm.o","index":272}
{"msg":"noderesult","processed_node_count":302,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/ijhjb5rypm6e.o","index":276,"exitcode":0,"outputfile":"tapa\\ijhjb5rypm6e.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/uqf0nndjovtk.o","index":271}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/uqf0nndjovtk.o","index":271}
{"msg":"noderesult","processed_node_count":303,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/e1l2ey60ur6x.o","index":273,"exitcode":0,"outputfile":"tapa\\e1l2ey60ur6x.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/g8uqbza8s3ga.o","index":270}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/g8uqbza8s3ga.o","index":270}
{"msg":"noderesult","processed_node_count":304,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/9lim5gcan4pm.o","index":272,"exitcode":0,"outputfile":"tapa\\9lim5gcan4pm.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/eeuupbdic1hl.o","index":269}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/eeuupbdic1hl.o","index":269}
{"msg":"noderesult","processed_node_count":305,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/4u1ttgp32urs.o","index":278,"exitcode":0,"outputfile":"tapa\\4u1ttgp32urs.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/3x2kzd2umyvj.o","index":268}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/3x2kzd2umyvj.o","index":268}
{"msg":"noderesult","processed_node_count":306,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ealrq3jtgwnn.o","index":290,"exitcode":0,"outputfile":"q8q9\\ealrq3jtgwnn.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/z2vmfwesqt8p.o","index":267}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/z2vmfwesqt8p.o","index":267}
{"msg":"noderesult","processed_node_count":307,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/c6nttv9fc937.o","index":274,"exitcode":0,"outputfile":"tapa\\c6nttv9fc937.o"}
{"msg":"noderesult","processed_node_count":308,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/5twjngtkeq50.o","index":275,"exitcode":0,"outputfile":"tapa\\5twjngtkeq50.o"}
{"msg":"noderesult","processed_node_count":308,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/uqf0nndjovtk.o","index":271,"exitcode":0,"outputfile":"tapa\\uqf0nndjovtk.o"}
{"msg":"noderesult","processed_node_count":310,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/90mqkxduhlue.o","index":277,"exitcode":0,"outputfile":"tapa\\90mqkxduhlue.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/o6jn9jztzsm4.o","index":266}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/o6jn9jztzsm4.o","index":266}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/wbq91mzfcwd1.o","index":265}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/wbq91mzfcwd1.o","index":265}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/kcavfaf1m1ly.o","index":263}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/kcavfaf1m1ly.o","index":263}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/tglix51yf5p0.o","index":264}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/tglix51yf5p0.o","index":264}
{"msg":"noderesult","processed_node_count":311,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/g8uqbza8s3ga.o","index":270,"exitcode":0,"outputfile":"tapa\\g8uqbza8s3ga.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/uzpfhssz316s.o","index":262}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/uzpfhssz316s.o","index":262}
{"msg":"noderesult","processed_node_count":312,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/mypc8ptl4aun.o","index":351,"exitcode":0,"outputfile":"q8q9\\mypc8ptl4aun.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/ber0msjtvj34.o","index":261}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/ber0msjtvj34.o","index":261}
{"msg":"noderesult","processed_node_count":313,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/eeuupbdic1hl.o","index":269,"exitcode":0,"outputfile":"tapa\\eeuupbdic1hl.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/m4960e4ovx6e.o","index":260}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/m4960e4ovx6e.o","index":260}
{"msg":"noderesult","processed_node_count":314,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/kcavfaf1m1ly.o","index":263,"exitcode":0,"outputfile":"tapa\\kcavfaf1m1ly.o"}
{"msg":"noderesult","processed_node_count":315,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/o6jn9jztzsm4.o","index":266,"exitcode":0,"outputfile":"tapa\\o6jn9jztzsm4.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/h7x11krbe04a.o","index":259}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/h7x11krbe04a.o","index":259}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/l6bwfn723p0c.o","index":258}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/l6bwfn723p0c.o","index":258}
{"msg":"noderesult","processed_node_count":316,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/wbq91mzfcwd1.o","index":265,"exitcode":0,"outputfile":"tapa\\wbq91mzfcwd1.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/wuxhlifo5n2s.o","index":257}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/wuxhlifo5n2s.o","index":257}
{"msg":"noderesult","processed_node_count":317,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/uzpfhssz316s.o","index":262,"exitcode":0,"outputfile":"tapa\\uzpfhssz316s.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/i4k1ykruicvf.o","index":256}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/i4k1ykruicvf.o","index":256}
{"msg":"noderesult","processed_node_count":318,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/ber0msjtvj34.o","index":261,"exitcode":0,"outputfile":"tapa\\ber0msjtvj34.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/3md31llst903.o","index":514}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/3md31llst903.o","index":514}
{"msg":"noderesult","processed_node_count":319,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/l6bwfn723p0c.o","index":258,"exitcode":0,"outputfile":"tapa\\l6bwfn723p0c.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/nbogsdoykbht.o","index":513}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/nbogsdoykbht.o","index":513}
{"msg":"noderesult","processed_node_count":320,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/h7x11krbe04a.o","index":259,"exitcode":0,"outputfile":"tapa\\h7x11krbe04a.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/3o7r9hyp967a.o","index":512}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/3o7r9hyp967a.o","index":512}
{"msg":"noderesult","processed_node_count":321,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/3x2kzd2umyvj.o","index":268,"exitcode":0,"outputfile":"tapa\\3x2kzd2umyvj.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/7kgiks77wlcf.o","index":511}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/7kgiks77wlcf.o","index":511}
{"msg":"noderesult","processed_node_count":322,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/m4960e4ovx6e.o","index":260,"exitcode":0,"outputfile":"tapa\\m4960e4ovx6e.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/f91upof1490l.o","index":510}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/f91upof1490l.o","index":510}
{"msg":"noderesult","processed_node_count":323,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/wuxhlifo5n2s.o","index":257,"exitcode":0,"outputfile":"tapa\\wuxhlifo5n2s.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/zfwf9sdsc1un.o","index":509}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/zfwf9sdsc1un.o","index":509}
{"msg":"noderesult","processed_node_count":324,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/3md31llst903.o","index":514,"exitcode":0,"outputfile":"q8q9\\3md31llst903.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/1dmzh6oh4o0o.o","index":508}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/1dmzh6oh4o0o.o","index":508}
{"msg":"noderesult","processed_node_count":325,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/nbogsdoykbht.o","index":513,"exitcode":0,"outputfile":"q8q9\\nbogsdoykbht.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/tfoferw1csgo.o","index":507}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/tfoferw1csgo.o","index":507}
{"msg":"noderesult","processed_node_count":326,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/3o7r9hyp967a.o","index":512,"exitcode":0,"outputfile":"q8q9\\3o7r9hyp967a.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/9ib9udn5duyq.o","index":506}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/9ib9udn5duyq.o","index":506}
{"msg":"noderesult","processed_node_count":327,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/7kgiks77wlcf.o","index":511,"exitcode":0,"outputfile":"q8q9\\7kgiks77wlcf.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/pxz34lz66fpw.o","index":505}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/pxz34lz66fpw.o","index":505}
{"msg":"noderesult","processed_node_count":328,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/zfwf9sdsc1un.o","index":509,"exitcode":0,"outputfile":"q8q9\\zfwf9sdsc1un.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/dv82hiph6hx6.o","index":504}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/dv82hiph6hx6.o","index":504}
{"msg":"noderesult","processed_node_count":329,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/f91upof1490l.o","index":510,"exitcode":0,"outputfile":"q8q9\\f91upof1490l.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/dfss56lcyvft.o","index":503}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/dfss56lcyvft.o","index":503}
{"msg":"noderesult","processed_node_count":330,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/tglix51yf5p0.o","index":264,"exitcode":0,"outputfile":"tapa\\tglix51yf5p0.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/fn0op9d2mafw.o","index":502}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/fn0op9d2mafw.o","index":502}
{"msg":"noderesult","processed_node_count":331,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/tfoferw1csgo.o","index":507,"exitcode":0,"outputfile":"q8q9\\tfoferw1csgo.o"}
{"msg":"noderesult","processed_node_count":332,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/1dmzh6oh4o0o.o","index":508,"exitcode":0,"outputfile":"q8q9\\1dmzh6oh4o0o.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/zdv1s4kbgav3.o","index":501}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/zdv1s4kbgav3.o","index":501}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/a8bnc4barzda.o","index":241}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/a8bnc4barzda.o","index":241}
{"msg":"noderesult","processed_node_count":333,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/z2vmfwesqt8p.o","index":267,"exitcode":0,"outputfile":"tapa\\z2vmfwesqt8p.o"}
{"msg":"noderesult","processed_node_count":334,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/pxz34lz66fpw.o","index":505,"exitcode":0,"outputfile":"q8q9\\pxz34lz66fpw.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/585czbbqk73v.o","index":296}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/585czbbqk73v.o","index":296}
{"msg":"noderesult","processed_node_count":335,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/dv82hiph6hx6.o","index":504,"exitcode":0,"outputfile":"q8q9\\dv82hiph6hx6.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/u1g1n331pymq.o","index":500}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/u1g1n331pymq.o","index":500}
{"msg":"noderesult","processed_node_count":336,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/dfss56lcyvft.o","index":503,"exitcode":0,"outputfile":"q8q9\\dfss56lcyvft.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/4ebh3vu915lm.o","index":499}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/4ebh3vu915lm.o","index":499}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/7sjubnemlbz7.o","index":498}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/7sjubnemlbz7.o","index":498}
{"msg":"noderesult","processed_node_count":337,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/fn0op9d2mafw.o","index":502,"exitcode":0,"outputfile":"q8q9\\fn0op9d2mafw.o"}
{"msg":"noderesult","processed_node_count":337,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/zdv1s4kbgav3.o","index":501,"exitcode":0,"outputfile":"q8q9\\zdv1s4kbgav3.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/sf0cipizcsfy.o","index":235}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/sf0cipizcsfy.o","index":235}
{"msg":"noderesult","processed_node_count":339,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/a8bnc4barzda.o","index":241,"exitcode":0,"outputfile":"tapa\\a8bnc4barzda.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/v2vy1sdbdw3j.o","index":497}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/v2vy1sdbdw3j.o","index":497}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/iu162025tkfk.o","index":496}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/iu162025tkfk.o","index":496}
{"msg":"noderesult","processed_node_count":340,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/7sjubnemlbz7.o","index":498,"exitcode":0,"outputfile":"q8q9\\7sjubnemlbz7.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/g6133hx0abyq.o","index":495}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/g6133hx0abyq.o","index":495}
{"msg":"noderesult","processed_node_count":341,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/i4k1ykruicvf.o","index":256,"exitcode":0,"outputfile":"tapa\\i4k1ykruicvf.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/uh3vymfywbxw.o","index":494}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/uh3vymfywbxw.o","index":494}
{"msg":"noderesult","processed_node_count":342,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/sf0cipizcsfy.o","index":235,"exitcode":0,"outputfile":"tapa\\sf0cipizcsfy.o"}
{"msg":"noderesult","processed_node_count":343,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/iu162025tkfk.o","index":496,"exitcode":0,"outputfile":"q8q9\\iu162025tkfk.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/w86ss48t05wu.o","index":493}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/w86ss48t05wu.o","index":493}
{"msg":"noderesult","processed_node_count":344,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/v2vy1sdbdw3j.o","index":497,"exitcode":0,"outputfile":"q8q9\\v2vy1sdbdw3j.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/omcobgkq72t4.o","index":492}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/omcobgkq72t4.o","index":492}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/2vlr2exoxgsa.o","index":491}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/2vlr2exoxgsa.o","index":491}
{"msg":"noderesult","processed_node_count":345,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/4ebh3vu915lm.o","index":499,"exitcode":0,"outputfile":"q8q9\\4ebh3vu915lm.o"}
{"msg":"noderesult","processed_node_count":346,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/g6133hx0abyq.o","index":495,"exitcode":0,"outputfile":"q8q9\\g6133hx0abyq.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/9bqjs67r1szv.o","index":490}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/9bqjs67r1szv.o","index":490}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/pwibcm9fslqj.o","index":489}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/pwibcm9fslqj.o","index":489}
{"msg":"noderesult","processed_node_count":347,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/w86ss48t05wu.o","index":493,"exitcode":0,"outputfile":"q8q9\\w86ss48t05wu.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/1u17bi88hudz.o","index":488}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/1u17bi88hudz.o","index":488}
{"msg":"noderesult","processed_node_count":348,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/2vlr2exoxgsa.o","index":491,"exitcode":0,"outputfile":"q8q9\\2vlr2exoxgsa.o"}
{"msg":"noderesult","processed_node_count":349,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/omcobgkq72t4.o","index":492,"exitcode":0,"outputfile":"q8q9\\omcobgkq72t4.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/b88qbfqiog6p.o","index":224}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/b88qbfqiog6p.o","index":224}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/9mexoxrsmhx9.o","index":487}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/9mexoxrsmhx9.o","index":487}
{"msg":"noderesult","processed_node_count":350,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/pwibcm9fslqj.o","index":489,"exitcode":0,"outputfile":"q8q9\\pwibcm9fslqj.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/21juj4axkcw0.o","index":486}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/21juj4axkcw0.o","index":486}
{"msg":"noderesult","processed_node_count":351,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/9bqjs67r1szv.o","index":490,"exitcode":0,"outputfile":"q8q9\\9bqjs67r1szv.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/wesxdxne76bq.o","index":485}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/wesxdxne76bq.o","index":485}
{"msg":"noderesult","processed_node_count":352,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/b88qbfqiog6p.o","index":224,"exitcode":0,"outputfile":"tapa\\b88qbfqiog6p.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/kp80d7fsug9d.o","index":484}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/kp80d7fsug9d.o","index":484}
{"msg":"noderesult","processed_node_count":353,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/9ib9udn5duyq.o","index":506,"exitcode":0,"outputfile":"q8q9\\9ib9udn5duyq.o"}
{"msg":"noderesult","processed_node_count":354,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/1u17bi88hudz.o","index":488,"exitcode":0,"outputfile":"q8q9\\1u17bi88hudz.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/iqzf2978l13i.o","index":483}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/iqzf2978l13i.o","index":483}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/u9u8j0xw2uws.o","index":482}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/u9u8j0xw2uws.o","index":482}
{"msg":"noderesult","processed_node_count":355,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/9mexoxrsmhx9.o","index":487,"exitcode":0,"outputfile":"q8q9\\9mexoxrsmhx9.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ou03dluk0yh5.o","index":481}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ou03dluk0yh5.o","index":481}
{"msg":"noderesult","processed_node_count":356,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/uh3vymfywbxw.o","index":494,"exitcode":0,"outputfile":"q8q9\\uh3vymfywbxw.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/cd8xs6dvfkax.o","index":480}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/cd8xs6dvfkax.o","index":480}
{"msg":"noderesult","processed_node_count":357,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/wesxdxne76bq.o","index":485,"exitcode":0,"outputfile":"q8q9\\wesxdxne76bq.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/igt63utha00p.o","index":479}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/igt63utha00p.o","index":479}
{"msg":"noderesult","processed_node_count":358,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/21juj4axkcw0.o","index":486,"exitcode":0,"outputfile":"q8q9\\21juj4axkcw0.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/kp3aaw6b31og.o","index":478}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/kp3aaw6b31og.o","index":478}
{"msg":"noderesult","processed_node_count":359,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/iqzf2978l13i.o","index":483,"exitcode":0,"outputfile":"q8q9\\iqzf2978l13i.o"}
{"msg":"noderesult","processed_node_count":360,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/kp80d7fsug9d.o","index":484,"exitcode":0,"outputfile":"q8q9\\kp80d7fsug9d.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/mpif63jrlkkc.o","index":477}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/mpif63jrlkkc.o","index":477}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/b5e5pq99c1d3.o","index":476}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/b5e5pq99c1d3.o","index":476}
{"msg":"noderesult","processed_node_count":361,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/u9u8j0xw2uws.o","index":482,"exitcode":0,"outputfile":"q8q9\\u9u8j0xw2uws.o"}
{"msg":"noderesult","processed_node_count":362,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ou03dluk0yh5.o","index":481,"exitcode":0,"outputfile":"q8q9\\ou03dluk0yh5.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/f1cc053o9491.o","index":475}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/63pjic483gsb.o","index":474}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/63pjic483gsb.o","index":474}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/f1cc053o9491.o","index":475}
{"msg":"noderesult","processed_node_count":363,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/dqbw33nz74nu.o","index":292,"exitcode":0,"outputfile":"q8q9\\dqbw33nz74nu.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/dnsk8qeszecg.o","index":210}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/dnsk8qeszecg.o","index":210}
{"msg":"noderesult","processed_node_count":364,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/cd8xs6dvfkax.o","index":480,"exitcode":0,"outputfile":"q8q9\\cd8xs6dvfkax.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/s4buab97je5z.o","index":473}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/s4buab97je5z.o","index":473}
{"msg":"noderesult","processed_node_count":365,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/1dngrz1v5swk.o","index":289,"exitcode":0,"outputfile":"q8q9\\1dngrz1v5swk.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/y8buk9y6i86v.o","index":472}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/y8buk9y6i86v.o","index":472}
{"msg":"noderesult","processed_node_count":366,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/igt63utha00p.o","index":479,"exitcode":0,"outputfile":"q8q9\\igt63utha00p.o"}
{"msg":"noderesult","processed_node_count":367,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/kp3aaw6b31og.o","index":478,"exitcode":0,"outputfile":"q8q9\\kp3aaw6b31og.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/s1dwql8jmj41.o","index":471}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/s1dwql8jmj41.o","index":471}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/5kl3j1wn0b1h.o","index":206}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/5kl3j1wn0b1h.o","index":206}
{"msg":"noderesult","processed_node_count":368,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/mpif63jrlkkc.o","index":477,"exitcode":0,"outputfile":"q8q9\\mpif63jrlkkc.o"}
{"msg":"noderesult","processed_node_count":369,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/b5e5pq99c1d3.o","index":476,"exitcode":0,"outputfile":"q8q9\\b5e5pq99c1d3.o"}
{"msg":"noderesult","processed_node_count":370,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/f1cc053o9491.o","index":475,"exitcode":0,"outputfile":"q8q9\\f1cc053o9491.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/b3iajdplnllk.o","index":470}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/b3iajdplnllk.o","index":470}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/j6l4ii0diiil.o","index":469}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/j6l4ii0diiil.o","index":469}
{"msg":"noderesult","processed_node_count":371,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/63pjic483gsb.o","index":474,"exitcode":0,"outputfile":"q8q9\\63pjic483gsb.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/ysv9fdc3cv7r.o","index":205}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/ysv9fdc3cv7r.o","index":205}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/0yec2mv6cwvz.o","index":202}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/0yec2mv6cwvz.o","index":202}
{"msg":"noderesult","processed_node_count":372,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/jli8ymgudhbx.o","index":294,"exitcode":0,"outputfile":"q8q9\\jli8ymgudhbx.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/hgaqwiqpqzh1.o","index":201}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/hgaqwiqpqzh1.o","index":201}
{"msg":"noderesult","processed_node_count":373,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/s4buab97je5z.o","index":473,"exitcode":0,"outputfile":"q8q9\\s4buab97je5z.o"}
{"msg":"noderesult","processed_node_count":374,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/y5ekjd2watzd.o","index":293,"exitcode":0,"outputfile":"q8q9\\y5ekjd2watzd.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/4ocpj5v0otmi.o","index":199}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/4ocpj5v0otmi.o","index":199}
{"msg":"noderesult","processed_node_count":375,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/dnsk8qeszecg.o","index":210,"exitcode":0,"outputfile":"tapa\\dnsk8qeszecg.o"}
{"msg":"noderesult","processed_node_count":376,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/s1dwql8jmj41.o","index":471,"exitcode":0,"outputfile":"q8q9\\s1dwql8jmj41.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/qx328zhmwg3k.o","index":468}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/qx328zhmwg3k.o","index":468}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/ljf4db7t28aa.o","index":198}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/ljf4db7t28aa.o","index":198}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ksbsdx4rrfic.o","index":467}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ksbsdx4rrfic.o","index":467}
{"msg":"noderesult","processed_node_count":377,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/b3iajdplnllk.o","index":470,"exitcode":0,"outputfile":"q8q9\\b3iajdplnllk.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/33ffdgxo640b.o","index":466}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/33ffdgxo640b.o","index":466}
{"msg":"noderesult","processed_node_count":378,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/j6l4ii0diiil.o","index":469,"exitcode":0,"outputfile":"q8q9\\j6l4ii0diiil.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/f8mxb7jmv61c.o","index":465}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/f8mxb7jmv61c.o","index":465}
{"msg":"noderesult","processed_node_count":379,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/4ocpj5v0otmi.o","index":199,"exitcode":0,"outputfile":"tapa\\4ocpj5v0otmi.o"}
{"msg":"noderesult","processed_node_count":380,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/y8buk9y6i86v.o","index":472,"exitcode":0,"outputfile":"q8q9\\y8buk9y6i86v.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/a1po4vm7rsxr.o","index":193}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/a1po4vm7rsxr.o","index":193}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/dqhboi087pld.o","index":194}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/dqhboi087pld.o","index":194}
{"msg":"noderesult","processed_node_count":381,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/33ffdgxo640b.o","index":466,"exitcode":0,"outputfile":"q8q9\\33ffdgxo640b.o"}
{"msg":"noderesult","processed_node_count":382,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/585czbbqk73v.o","index":296,"exitcode":0,"outputfile":"q8q9\\585czbbqk73v.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/avlg3qamnk6c.o","index":192}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/avlg3qamnk6c.o","index":192}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/nkeqawl0kn1r.o","index":191}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/nkeqawl0kn1r.o","index":191}
{"msg":"noderesult","processed_node_count":383,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/f8mxb7jmv61c.o","index":465,"exitcode":0,"outputfile":"q8q9\\f8mxb7jmv61c.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/htoudt6dofk5.o","index":464}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/htoudt6dofk5.o","index":464}
{"msg":"noderesult","processed_node_count":384,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ksbsdx4rrfic.o","index":467,"exitcode":0,"outputfile":"q8q9\\ksbsdx4rrfic.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/4olnedbv8iz6.o","index":189}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/4olnedbv8iz6.o","index":189}
{"msg":"noderesult","processed_node_count":385,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/kt2oj2wshjsc.o","index":295,"exitcode":0,"outputfile":"q8q9\\kt2oj2wshjsc.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/3spyvydbecf4.o","index":188}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/3spyvydbecf4.o","index":188}
{"msg":"noderesult","processed_node_count":386,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/ysv9fdc3cv7r.o","index":205,"exitcode":0,"outputfile":"tapa\\ysv9fdc3cv7r.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/ue2dffvuzhz2.o","index":187}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/ue2dffvuzhz2.o","index":187}
{"msg":"noderesult","processed_node_count":387,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/a1po4vm7rsxr.o","index":193,"exitcode":0,"outputfile":"tapa\\a1po4vm7rsxr.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/9k3jebtysxb5.o","index":463}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/9k3jebtysxb5.o","index":463}
{"msg":"noderesult","processed_node_count":388,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/hgaqwiqpqzh1.o","index":201,"exitcode":0,"outputfile":"tapa\\hgaqwiqpqzh1.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/vmszl3pi2lre.o","index":462}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/vmszl3pi2lre.o","index":462}
{"msg":"noderesult","processed_node_count":389,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/htoudt6dofk5.o","index":464,"exitcode":0,"outputfile":"q8q9\\htoudt6dofk5.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/kyk6h4dbkfnn.o","index":184}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/kyk6h4dbkfnn.o","index":184}
{"msg":"noderesult","processed_node_count":390,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ippglipgcz8g.o","index":305,"exitcode":0,"outputfile":"q8q9\\ippglipgcz8g.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/ro474reziexb.o","index":461}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/ro474reziexb.o","index":461}
{"msg":"noderesult","processed_node_count":391,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/ljf4db7t28aa.o","index":198,"exitcode":0,"outputfile":"tapa\\ljf4db7t28aa.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/lc9km62p2g7u.o","index":460}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/lc9km62p2g7u.o","index":460}
{"msg":"noderesult","processed_node_count":392,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/0yec2mv6cwvz.o","index":202,"exitcode":0,"outputfile":"tapa\\0yec2mv6cwvz.o"}
{"msg":"noderesult","processed_node_count":393,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/qx328zhmwg3k.o","index":468,"exitcode":0,"outputfile":"q8q9\\qx328zhmwg3k.o"}
{"msg":"noderesult","processed_node_count":394,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/9k3jebtysxb5.o","index":463,"exitcode":0,"outputfile":"q8q9\\9k3jebtysxb5.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/lm5cw9d9d6wp.o","index":459}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/lm5cw9d9d6wp.o","index":459}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/sdszrh5ys4p0.o","index":458}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/sdszrh5ys4p0.o","index":458}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/2zg8so1r8frw.o","index":457}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/2zg8so1r8frw.o","index":457}
{"msg":"noderesult","processed_node_count":395,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/dqhboi087pld.o","index":194,"exitcode":0,"outputfile":"tapa\\dqhboi087pld.o"}
{"msg":"noderesult","processed_node_count":396,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/5kl3j1wn0b1h.o","index":206,"exitcode":0,"outputfile":"tapa\\5kl3j1wn0b1h.o"}
{"msg":"noderesult","processed_node_count":397,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ro474reziexb.o","index":461,"exitcode":0,"outputfile":"q8q9\\ro474reziexb.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/apc2yofz8zr1.o","index":456}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/apc2yofz8zr1.o","index":456}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/gtfi5xyvz6wp.o","index":455}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/gtfi5xyvz6wp.o","index":455}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/jjuey9agpfyi.o","index":454}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/jjuey9agpfyi.o","index":454}
{"msg":"noderesult","processed_node_count":398,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/avlg3qamnk6c.o","index":192,"exitcode":0,"outputfile":"tapa\\avlg3qamnk6c.o"}
{"msg":"noderesult","processed_node_count":399,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/4olnedbv8iz6.o","index":189,"exitcode":0,"outputfile":"tapa\\4olnedbv8iz6.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/3jo637kdc1wp.o","index":453}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/3jo637kdc1wp.o","index":453}
{"msg":"noderesult","processed_node_count":400,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/nkeqawl0kn1r.o","index":191,"exitcode":0,"outputfile":"tapa\\nkeqawl0kn1r.o"}
{"msg":"noderesult","processed_node_count":401,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/ao7rm7aqidnf.o","index":291,"exitcode":0,"outputfile":"q8q9\\ao7rm7aqidnf.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/zqbmnn1gtg9k.o","index":173}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/zqbmnn1gtg9k.o","index":173}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/nroj2h82gp3j.o","index":452}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/nroj2h82gp3j.o","index":452}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/2sk1zoeru2rt.o","index":172}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/2sk1zoeru2rt.o","index":172}
{"msg":"noderesult","processed_node_count":402,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/vmszl3pi2lre.o","index":462,"exitcode":0,"outputfile":"q8q9\\vmszl3pi2lre.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/jf2es2taxecq.o","index":451}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/jf2es2taxecq.o","index":451}
{"msg":"noderesult","processed_node_count":403,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/lc9km62p2g7u.o","index":460,"exitcode":0,"outputfile":"q8q9\\lc9km62p2g7u.o"}
{"msg":"noderesult","processed_node_count":404,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/lm5cw9d9d6wp.o","index":459,"exitcode":0,"outputfile":"q8q9\\lm5cw9d9d6wp.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/zh4dq43k2517.o","index":170}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/zh4dq43k2517.o","index":170}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/1ae853av9wpl.o","index":169}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/1ae853av9wpl.o","index":169}
{"msg":"noderesult","processed_node_count":405,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/2zg8so1r8frw.o","index":457,"exitcode":0,"outputfile":"q8q9\\2zg8so1r8frw.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/9t9jnpoyzzgm.o","index":450}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/9t9jnpoyzzgm.o","index":450}
{"msg":"noderesult","processed_node_count":406,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/sdszrh5ys4p0.o","index":458,"exitcode":0,"outputfile":"q8q9\\sdszrh5ys4p0.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/mwgvopdrllb1.o","index":167}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/mwgvopdrllb1.o","index":167}
{"msg":"noderesult","processed_node_count":407,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/ue2dffvuzhz2.o","index":187,"exitcode":0,"outputfile":"tapa\\ue2dffvuzhz2.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/9xzp845hbwyf.o","index":449}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/9xzp845hbwyf.o","index":449}
{"msg":"noderesult","processed_node_count":408,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/2sk1zoeru2rt.o","index":172,"exitcode":0,"outputfile":"tapa\\2sk1zoeru2rt.o"}
{"msg":"noderesult","processed_node_count":409,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/gtfi5xyvz6wp.o","index":455,"exitcode":0,"outputfile":"q8q9\\gtfi5xyvz6wp.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/8zr280j46sm4.o","index":448}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/8zr280j46sm4.o","index":448}
{"msg":"noderesult","processed_node_count":410,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/3jo637kdc1wp.o","index":453,"exitcode":0,"outputfile":"q8q9\\3jo637kdc1wp.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/a0ymy7e9d2ic.o","index":447}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/a0ymy7e9d2ic.o","index":447}
{"msg":"noderesult","processed_node_count":411,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/jf2es2taxecq.o","index":451,"exitcode":0,"outputfile":"q8q9\\jf2es2taxecq.o"}
{"msg":"noderesult","processed_node_count":412,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/1ae853av9wpl.o","index":169,"exitcode":0,"outputfile":"tapa\\1ae853av9wpl.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/zu13m5zyu13d.o","index":95}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/zu13m5zyu13d.o","index":95}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/b37gkcprfuxz.o","index":94}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/b37gkcprfuxz.o","index":94}
{"msg":"noderesult","processed_node_count":413,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/9t9jnpoyzzgm.o","index":450,"exitcode":0,"outputfile":"q8q9\\9t9jnpoyzzgm.o"}
{"msg":"noderesult","processed_node_count":414,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/nroj2h82gp3j.o","index":452,"exitcode":0,"outputfile":"q8q9\\nroj2h82gp3j.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/27ubhzdp1r8x.o","index":93}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/27ubhzdp1r8x.o","index":93}
{"msg":"noderesult","processed_node_count":415,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/3spyvydbecf4.o","index":188,"exitcode":0,"outputfile":"tapa\\3spyvydbecf4.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/rqd07q29es7b.o","index":92}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/rqd07q29es7b.o","index":92}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/69wbfg2pekyo.o","index":91}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/69wbfg2pekyo.o","index":91}
{"msg":"noderesult","processed_node_count":416,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/8zr280j46sm4.o","index":448,"exitcode":0,"outputfile":"q8q9\\8zr280j46sm4.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/mm2xg32amcdo.o","index":90}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/mm2xg32amcdo.o","index":90}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/myp4uti4ktim.o","index":96}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/myp4uti4ktim.o","index":96}
{"msg":"noderesult","processed_node_count":417,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/zu13m5zyu13d.o","index":95,"exitcode":0,"outputfile":"nwd5\\zu13m5zyu13d.o"}
{"msg":"noderesult","processed_node_count":418,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/apc2yofz8zr1.o","index":456,"exitcode":0,"outputfile":"q8q9\\apc2yofz8zr1.o"}
{"msg":"noderesult","processed_node_count":419,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/9xzp845hbwyf.o","index":449,"exitcode":0,"outputfile":"q8q9\\9xzp845hbwyf.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/tzyn0y4b6dcb.o","index":88}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/tzyn0y4b6dcb.o","index":88}
{"msg":"noderesult","processed_node_count":420,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/b37gkcprfuxz.o","index":94,"exitcode":0,"outputfile":"nwd5\\b37gkcprfuxz.o"}
{"msg":"noderesult","processed_node_count":420,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/a0ymy7e9d2ic.o","index":447,"exitcode":0,"outputfile":"q8q9\\a0ymy7e9d2ic.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/nc0qfz28633g.o","index":87}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/nc0qfz28633g.o","index":87}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/shi37vazyr88.o","index":85}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/shi37vazyr88.o","index":85}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/dbn8su885cop.o","index":86}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/dbn8su885cop.o","index":86}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/7407amlb8n5r.o","index":89}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/7407amlb8n5r.o","index":89}
{"msg":"noderesult","processed_node_count":422,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/jjuey9agpfyi.o","index":454,"exitcode":0,"outputfile":"q8q9\\jjuey9agpfyi.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/09liu0i9fg1b.o","index":84}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/09liu0i9fg1b.o","index":84}
{"msg":"noderesult","processed_node_count":423,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/zh4dq43k2517.o","index":170,"exitcode":0,"outputfile":"tapa\\zh4dq43k2517.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/zimwowyt3ovq.o","index":83}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/zimwowyt3ovq.o","index":83}
{"msg":"noderesult","processed_node_count":424,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/kyk6h4dbkfnn.o","index":184,"exitcode":0,"outputfile":"tapa\\kyk6h4dbkfnn.o"}
{"msg":"noderesult","processed_node_count":425,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/rqd07q29es7b.o","index":92,"exitcode":0,"outputfile":"nwd5\\rqd07q29es7b.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/mcyprmuf10dp.o","index":82}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/mcyprmuf10dp.o","index":82}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/hkmhb9oiz423.o","index":81}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/hkmhb9oiz423.o","index":81}
{"msg":"noderesult","processed_node_count":426,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/69wbfg2pekyo.o","index":91,"exitcode":0,"outputfile":"nwd5\\69wbfg2pekyo.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/xesv7efxp7he.o","index":80}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/xesv7efxp7he.o","index":80}
{"msg":"noderesult","processed_node_count":427,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/27ubhzdp1r8x.o","index":93,"exitcode":0,"outputfile":"nwd5\\27ubhzdp1r8x.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/8yp0txxyr4ez.o","index":79}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/8yp0txxyr4ez.o","index":79}
{"msg":"noderesult","processed_node_count":428,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/nc0qfz28633g.o","index":87,"exitcode":0,"outputfile":"nwd5\\nc0qfz28633g.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/0y6vgiaazmjm.o","index":78}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/0y6vgiaazmjm.o","index":78}
{"msg":"noderesult","processed_node_count":429,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/shi37vazyr88.o","index":85,"exitcode":0,"outputfile":"nwd5\\shi37vazyr88.o","stdout":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\console-unity.c(44,33): warning: incompatible pointer types passing 'MonoString *' (aka 'struct _MonoString *') to parameter of type 'const char *' [-Wincompatible-pointer-types]\r\n        return UnityPalConsoleTtySetup(keypad, teardown, control_chars, size);\r\n                                       ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\os\\c-api\\Console-c-api.h(13,45): note: passing argument to parameter 'keypadXmit' here\r\nint32_t UnityPalConsoleTtySetup(const char* keypadXmit, const char* teardown, uint8_t* control_characters, int32_t** size);\r\n                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\console-unity.c(44,41): warning: incompatible pointer types passing 'MonoString *' (aka 'struct _MonoString *') to parameter of type 'const char *' [-Wincompatible-pointer-types]\r\n        return UnityPalConsoleTtySetup(keypad, teardown, control_chars, size);\r\n                                               ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\os\\c-api\\Console-c-api.h(13,69): note: passing argument to parameter 'teardown' here\r\nint32_t UnityPalConsoleTtySetup(const char* keypadXmit, const char* teardown, uint8_t* control_characters, int32_t** size);\r\n                                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\console-unity.c(44,51): warning: incompatible pointer types passing 'MonoArray **' (aka 'struct _MonoArray **') to parameter of type 'uint8_t *' (aka 'unsigned char *') [-Wincompatible-pointer-types]\r\n        return UnityPalConsoleTtySetup(keypad, teardown, control_chars, size);\r\n                                                         ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\os\\c-api\\Console-c-api.h(13,88): note: passing argument to parameter 'control_characters' here\r\nint32_t UnityPalConsoleTtySetup(const char* keypadXmit, const char* teardown, uint8_t* control_characters, int32_t** size);\r\n                                                                                       ^\r\n3 warnings generated."}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/cjc2rj9zqzhl.o","index":77}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/cjc2rj9zqzhl.o","index":77}
{"msg":"noderesult","processed_node_count":430,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/09liu0i9fg1b.o","index":84,"exitcode":0,"outputfile":"nwd5\\09liu0i9fg1b.o"}
{"msg":"noderesult","processed_node_count":431,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/u1g1n331pymq.o","index":500,"exitcode":0,"outputfile":"q8q9\\u1g1n331pymq.o"}
{"msg":"noderesult","processed_node_count":431,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/mm2xg32amcdo.o","index":90,"exitcode":0,"outputfile":"nwd5\\mm2xg32amcdo.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/ysje1mcmqcw9.o","index":76}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/ysje1mcmqcw9.o","index":76}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/gzi4dbsz3mfe.o","index":74}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/gzi4dbsz3mfe.o","index":74}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/zgr9clvsgxsm.o","index":75}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/zgr9clvsgxsm.o","index":75}
{"msg":"noderesult","processed_node_count":433,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/zqbmnn1gtg9k.o","index":173,"exitcode":0,"outputfile":"tapa\\zqbmnn1gtg9k.o"}
{"msg":"noderesult","processed_node_count":434,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/zimwowyt3ovq.o","index":83,"exitcode":0,"outputfile":"nwd5\\zimwowyt3ovq.o","stdout":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\utils\\networking-unity.c(73,32): warning: incompatible pointer types passing 'char **' to parameter of type 'void **' [-Wincompatible-pointer-types]\r\n    free_null_terminated_array(aliases);\r\n                               ^~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\utils\\networking-unity.c(43,48): note: passing argument to parameter 'array' here\r\nstatic void free_null_terminated_array (void** array)\r\n                                               ^\r\n1 warning generated."}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/3nkpdtyo4nw9.o","index":72}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/3nkpdtyo4nw9.o","index":72}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/jllpxczjv5f9.o","index":73}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/jllpxczjv5f9.o","index":73}
{"msg":"noderesult","processed_node_count":435,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/tzyn0y4b6dcb.o","index":88,"exitcode":0,"outputfile":"nwd5\\tzyn0y4b6dcb.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/1jnzbjif8l7q.o","index":71}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/1jnzbjif8l7q.o","index":71}
{"msg":"noderesult","processed_node_count":436,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/hkmhb9oiz423.o","index":81,"exitcode":0,"outputfile":"nwd5\\hkmhb9oiz423.o"}
{"msg":"noderesult","processed_node_count":437,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/dbn8su885cop.o","index":86,"exitcode":0,"outputfile":"nwd5\\dbn8su885cop.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/4a40po78w3x8.o","index":70}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/4a40po78w3x8.o","index":70}
{"msg":"noderesult","processed_node_count":438,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/xesv7efxp7he.o","index":80,"exitcode":0,"outputfile":"nwd5\\xesv7efxp7he.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/w32sq1bl20kd.o","index":68}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/w32sq1bl20kd.o","index":68}
{"msg":"noderesult","processed_node_count":439,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/mcyprmuf10dp.o","index":82,"exitcode":0,"outputfile":"nwd5\\mcyprmuf10dp.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/alloo2lkk24f.o","index":69}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/alloo2lkk24f.o","index":69}
{"msg":"noderesult","processed_node_count":440,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/8yp0txxyr4ez.o","index":79,"exitcode":0,"outputfile":"nwd5\\8yp0txxyr4ez.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/m5tnx410l1py.o","index":67}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/m5tnx410l1py.o","index":67}
{"msg":"noderesult","processed_node_count":441,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/7407amlb8n5r.o","index":89,"exitcode":0,"outputfile":"nwd5\\7407amlb8n5r.o","stdout":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\w32file-unity.c(151,48): warning: incompatible pointer to integer conversion passing 'const FILETIME *' to parameter of type 'int64_t' (aka 'long long') [-Wint-conversion]\r\n        gboolean result = UnityPalSetFileTime(handle, create_time, access_time, write_time, &error);\r\n                                                      ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\os\\c-api\\File-c-api.h(48,65): note: passing argument to parameter 'creation_time' here\r\nint32_t UnityPalSetFileTime(UnityPalFileHandle* handle, int64_t creation_time, int64_t last_access_time, int64_t last_write_time, int* error);\r\n                                                                ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\w32file-unity.c(151,61): warning: incompatible pointer to integer conversion passing 'const FILETIME *' to parameter of type 'int64_t' (aka 'long long') [-Wint-conversion]\r\n        gboolean result = UnityPalSetFileTime(handle, create_time, access_time, write_time, &error);\r\n                                                                   ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\os\\c-api\\File-c-api.h(48,88): note: passing argument to parameter 'last_access_time' here\r\nint32_t UnityPalSetFileTime(UnityPalFileHandle* handle, int64_t creation_time, int64_t last_access_time, int64_t last_write_time, int* error);\r\n                                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\w32file-unity.c(151,74): warning: incompatible pointer to integer conversion passing 'const FILETIME *' to parameter of type 'int64_t' (aka 'long long') [-Wint-conversion]\r\n        gboolean result = UnityPalSetFileTime(handle, create_time, access_time, write_time, &error);\r\n                                                                                ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\os\\c-api\\File-c-api.h(48,114): note: passing argument to parameter 'last_write_time' here\r\nint32_t UnityPalSetFileTime(UnityPalFileHandle* handle, int64_t creation_time, int64_t last_access_time, int64_t last_write_time, int* error);\r\n                                                                                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\w32file-unity.c(167,63): warning: passing 'const char **' to parameter of type 'char **' discards qualifiers in nested pointer types [-Wincompatible-pointer-types-discards-qualifiers]\r\n        result = UnityPalDirectoryFindFirstFile(findHandle, palPath, &filename, &resultAttributes);\r\n                                                                     ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\os\\c-api\\Directory-c-api.h(35,124): note: passing argument to parameter 'resultFileName' here\r\nUnityPalErrorCode UnityPalDirectoryFindFirstFile(UnityPalFindHandle* findHandle, const char* searchPathWithPattern, char** resultFileName, int32_t* resultAttributes);\r\n                                                                                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\w32file-unity.c(192,9): warning: passing 'const char *' to parameter of type 'void *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        g_free(filename);\r\n               ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(134,20): note: passing argument to parameter 'ptr' here\r\nvoid g_free (void *ptr);\r\n                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\w32file-unity.c(212,49): warning: passing 'const char **' to parameter of type 'char **' discards qualifiers in nested pointer types [-Wincompatible-pointer-types-discards-qualifiers]\r\n        result = UnityPalDirectoryFindNextFile(handle, &filename, &resultAttributes);\r\n                                                       ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\os\\c-api\\Directory-c-api.h(36,89): note: passing argument to parameter 'resultFileName' here\r\nUnityPalErrorCode UnityPalDirectoryFindNextFile(UnityPalFindHandle*  findHandle, char** resultFileName, int32_t* resultAttributes);\r\n                                                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\w32file-unity.c(223,9): warning: passing 'const char *' to parameter of type 'void *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        g_free(filename);\r\n               ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(134,20): note: passing argument to parameter 'ptr' here\r\nvoid g_free (void *ptr);\r\n                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\w32file-unity.c(519,9): warning: passing 'const char *' to parameter of type 'void *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        g_free(palPath);\r\n               ^~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(134,20): note: passing argument to parameter 'ptr' here\r\nvoid g_free (void *ptr);\r\n                   ^\r\n8 warnings generated."}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/rkj8867g9xu2.o","index":66}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/rkj8867g9xu2.o","index":66}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/qd9vbh13czul.o","index":65}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/qd9vbh13czul.o","index":65}
{"msg":"noderesult","processed_node_count":442,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/0y6vgiaazmjm.o","index":78,"exitcode":0,"outputfile":"nwd5\\0y6vgiaazmjm.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/13h4ydpwje0y.o","index":64}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/13h4ydpwje0y.o","index":64}
{"msg":"noderesult","processed_node_count":443,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/cjc2rj9zqzhl.o","index":77,"exitcode":0,"outputfile":"nwd5\\cjc2rj9zqzhl.o"}
{"msg":"noderesult","processed_node_count":444,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/ysje1mcmqcw9.o","index":76,"exitcode":0,"outputfile":"nwd5\\ysje1mcmqcw9.o"}
{"msg":"newNode","annotation":"C_Android_arm32 tapa/gi6cmqlv3js9.o","index":185}
{"msg":"runNodeAction","annotation":"C_Android_arm32 tapa/gi6cmqlv3js9.o","index":185}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/sm1n6m35p82q.o","index":62}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/sm1n6m35p82q.o","index":62}
{"msg":"noderesult","processed_node_count":445,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/gzi4dbsz3mfe.o","index":74,"exitcode":0,"outputfile":"nwd5\\gzi4dbsz3mfe.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/ezngilt0mugg.o","index":61}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/ezngilt0mugg.o","index":61}
{"msg":"noderesult","processed_node_count":446,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/zgr9clvsgxsm.o","index":75,"exitcode":0,"outputfile":"nwd5\\zgr9clvsgxsm.o"}
{"msg":"noderesult","processed_node_count":447,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/3nkpdtyo4nw9.o","index":72,"exitcode":0,"outputfile":"nwd5\\3nkpdtyo4nw9.o"}
{"msg":"noderesult","processed_node_count":448,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/jllpxczjv5f9.o","index":73,"exitcode":0,"outputfile":"nwd5\\jllpxczjv5f9.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/sznmtb1jphf7.o","index":60}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/sznmtb1jphf7.o","index":60}
{"msg":"noderesult","processed_node_count":449,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/1jnzbjif8l7q.o","index":71,"exitcode":0,"outputfile":"nwd5\\1jnzbjif8l7q.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/ni9ki14iatri.o","index":58}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/ni9ki14iatri.o","index":58}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/q19sjeacvt0p.o","index":59}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/q19sjeacvt0p.o","index":59}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/lem6xqr0bz09.o","index":57}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/lem6xqr0bz09.o","index":57}
{"msg":"noderesult","processed_node_count":450,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/mwgvopdrllb1.o","index":167,"exitcode":0,"outputfile":"tapa\\mwgvopdrllb1.o"}
{"msg":"noderesult","processed_node_count":451,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/4a40po78w3x8.o","index":70,"exitcode":0,"outputfile":"nwd5\\4a40po78w3x8.o","stdout":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\utils\\mono-tls.c(260,10): warning: enumeration value 'TLS_KEY_NUM' not handled in switch [-Wswitch]\r\n        switch (key) {\r\n                ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\utils\\mono-tls.c(280,10): warning: enumeration value 'TLS_KEY_NUM' not handled in switch [-Wswitch]\r\n        switch (key) {\r\n                ^\r\n2 warnings generated."}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/oco7gygj42be.o","index":56}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/oco7gygj42be.o","index":56}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/yndgs0mcsx9w.o","index":55}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/yndgs0mcsx9w.o","index":55}
{"msg":"noderesult","processed_node_count":452,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/13h4ydpwje0y.o","index":64,"exitcode":0,"outputfile":"nwd5\\13h4ydpwje0y.o"}
{"msg":"noderesult","processed_node_count":453,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/rkj8867g9xu2.o","index":66,"exitcode":0,"outputfile":"nwd5\\rkj8867g9xu2.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/bq01vtmro98q.o","index":54}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/bq01vtmro98q.o","index":54}
{"msg":"noderesult","processed_node_count":454,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/w32sq1bl20kd.o","index":68,"exitcode":0,"outputfile":"nwd5\\w32sq1bl20kd.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/p2sfpa3wm0x8.o","index":53}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/p2sfpa3wm0x8.o","index":53}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/tja9t73x4wy1.o","index":52}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/tja9t73x4wy1.o","index":52}
{"msg":"noderesult","processed_node_count":455,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/m5tnx410l1py.o","index":67,"exitcode":0,"outputfile":"nwd5\\m5tnx410l1py.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/t0u9k252fxyz.o","index":51}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/t0u9k252fxyz.o","index":51}
{"msg":"noderesult","processed_node_count":456,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/qd9vbh13czul.o","index":65,"exitcode":0,"outputfile":"nwd5\\qd9vbh13czul.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/csfng221zvsw.o","index":50}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/csfng221zvsw.o","index":50}
{"msg":"noderesult","processed_node_count":457,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/ezngilt0mugg.o","index":61,"exitcode":0,"outputfile":"nwd5\\ezngilt0mugg.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/rgvrncjbyyfz.o","index":49}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/rgvrncjbyyfz.o","index":49}
{"msg":"noderesult","processed_node_count":458,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/sznmtb1jphf7.o","index":60,"exitcode":0,"outputfile":"nwd5\\sznmtb1jphf7.o"}
{"msg":"noderesult","processed_node_count":459,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/ni9ki14iatri.o","index":58,"exitcode":0,"outputfile":"nwd5\\ni9ki14iatri.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/vdcnq7uhzs5t.o","index":48}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/vdcnq7uhzs5t.o","index":48}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/8bcmsqccotwf.o","index":47}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/8bcmsqccotwf.o","index":47}
{"msg":"noderesult","processed_node_count":460,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/sm1n6m35p82q.o","index":62,"exitcode":0,"outputfile":"nwd5\\sm1n6m35p82q.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/1wwc3no393f6.o","index":46}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/1wwc3no393f6.o","index":46}
{"msg":"noderesult","processed_node_count":461,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/lem6xqr0bz09.o","index":57,"exitcode":0,"outputfile":"nwd5\\lem6xqr0bz09.o"}
{"msg":"noderesult","processed_node_count":462,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/yndgs0mcsx9w.o","index":55,"exitcode":0,"outputfile":"nwd5\\yndgs0mcsx9w.o"}
{"msg":"noderesult","processed_node_count":463,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/q19sjeacvt0p.o","index":59,"exitcode":0,"outputfile":"nwd5\\q19sjeacvt0p.o"}
{"msg":"noderesult","processed_node_count":464,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/alloo2lkk24f.o","index":69,"exitcode":0,"outputfile":"nwd5\\alloo2lkk24f.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/kn85on42dw1c.o","index":43}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/kn85on42dw1c.o","index":43}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/d4oju02d2z63.o","index":45}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/d4oju02d2z63.o","index":45}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/tp89icll7dxh.o","index":44}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/tp89icll7dxh.o","index":44}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/ojffwziafkkr.o","index":42}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/ojffwziafkkr.o","index":42}
{"msg":"noderesult","processed_node_count":465,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/p2sfpa3wm0x8.o","index":53,"exitcode":0,"outputfile":"nwd5\\p2sfpa3wm0x8.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/hnurtvy1q6gx.o","index":41}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/hnurtvy1q6gx.o","index":41}
{"msg":"noderesult","processed_node_count":466,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/bq01vtmro98q.o","index":54,"exitcode":0,"outputfile":"nwd5\\bq01vtmro98q.o"}
{"msg":"noderesult","processed_node_count":467,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/tja9t73x4wy1.o","index":52,"exitcode":0,"outputfile":"nwd5\\tja9t73x4wy1.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/6m1lo2dqvkr2.o","index":40}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/6m1lo2dqvkr2.o","index":40}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/l97eu1vzgc6d.o","index":39}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/l97eu1vzgc6d.o","index":39}
{"msg":"noderesult","processed_node_count":468,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/oco7gygj42be.o","index":56,"exitcode":0,"outputfile":"nwd5\\oco7gygj42be.o"}
{"msg":"noderesult","processed_node_count":469,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/t0u9k252fxyz.o","index":51,"exitcode":0,"outputfile":"nwd5\\t0u9k252fxyz.o"}
{"msg":"noderesult","processed_node_count":470,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/csfng221zvsw.o","index":50,"exitcode":0,"outputfile":"nwd5\\csfng221zvsw.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/dl8vvc0p0dd2.o","index":38}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/dl8vvc0p0dd2.o","index":38}
{"msg":"noderesult","processed_node_count":471,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/vdcnq7uhzs5t.o","index":48,"exitcode":0,"outputfile":"nwd5\\vdcnq7uhzs5t.o"}
{"msg":"noderesult","processed_node_count":472,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/8bcmsqccotwf.o","index":47,"exitcode":0,"outputfile":"nwd5\\8bcmsqccotwf.o"}
{"msg":"noderesult","processed_node_count":473,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/1wwc3no393f6.o","index":46,"exitcode":0,"outputfile":"nwd5\\1wwc3no393f6.o"}
{"msg":"noderesult","processed_node_count":474,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/rgvrncjbyyfz.o","index":49,"exitcode":0,"outputfile":"nwd5\\rgvrncjbyyfz.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/7fv3hbnxfm84.o","index":35}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/7fv3hbnxfm84.o","index":35}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/bx6356gli0fz.o","index":33}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/bx6356gli0fz.o","index":33}
{"msg":"noderesult","processed_node_count":475,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/myp4uti4ktim.o","index":96,"exitcode":0,"outputfile":"nwd5\\myp4uti4ktim.o","stdout":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(906,11): warning: incompatible pointer types assigning to 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') from 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n        internal = mono_thread_internal_current ();\r\n                 ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(1099,52): warning: incompatible pointer types passing 'void (MonoProfiler *, Il2CppAssembly *)' (aka 'void (struct _MonoProfiler *, struct Il2CppAssembly *)') to parameter of type 'MonoProfilerAssemblyLLoadedCallback' (aka 'void (*)(struct _MonoProfiler *, struct _MonoAssembly *)') [-Wincompatible-pointer-types]\r\n        mono_profiler_set_assembly_loaded_callback (prof, assembly_load);\r\n                                                          ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\profiler-events.h(70,1): note: passing argument to parameter 'cb' here\r\nMONO_PROFILER_EVENT_1(assembly_loaded, AssemblyLLoaded, MonoAssembly *, assembly)\r\n^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\profiler.h(209,2): note: expanded from macro 'MONO_PROFILER_EVENT_1'\r\n        _MONO_PROFILER_EVENT(name, type)\r\n        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\profiler.h(205,117): note: expanded from macro '_MONO_PROFILER_EVENT'\r\n        MONO_API void mono_profiler_set_ ## name ## _callback (MonoProfilerHandle handle, MonoProfiler ## type ## Callback cb);\r\n                                                                                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(1103,45): warning: incompatible pointer types passing 'void (MonoProfiler *, MethodInfo *, MonoJitInfo *)' (aka 'void (struct _MonoProfiler *, struct MethodInfo *, struct _MonoJitInfo *)') to parameter of type 'MonoProfilerJitDoneCallback' (aka 'void (*)(struct _MonoProfiler *, struct _MonoMethod *, struct _MonoJitInfo *)') [-Wincompatible-pointer-types]\r\n        mono_profiler_set_jit_done_callback (prof, jit_done);\r\n                                                   ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\profiler-events.h(50,1): note: passing argument to parameter 'cb' here\r\nMONO_PROFILER_EVENT_2(jit_done, JitDone, MonoMethod *, method, MonoJitInfo *, jinfo)\r\n^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\profiler.h(211,2): note: expanded from macro 'MONO_PROFILER_EVENT_2'\r\n        _MONO_PROFILER_EVENT(name, type)\r\n        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\profiler.h(205,117): note: expanded from macro '_MONO_PROFILER_EVENT'\r\n        MONO_API void mono_profiler_set_ ## name ## _callback (MonoProfilerHandle handle, MonoProfiler ## type ## Callback cb);\r\n                                                                                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(1104,47): warning: incompatible pointer types passing 'void (MonoProfiler *, MethodInfo *)' (aka 'void (struct _MonoProfiler *, struct MethodInfo *)') to parameter of type 'MonoProfilerJitFailedCallback' (aka 'void (*)(struct _MonoProfiler *, struct _MonoMethod *)') [-Wincompatible-pointer-types]\r\n        mono_profiler_set_jit_failed_callback (prof, jit_failed);\r\n                                                     ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\profiler-events.h(49,1): note: passing argument to parameter 'cb' here\r\nMONO_PROFILER_EVENT_1(jit_failed, JitFailed, MonoMethod *, method)\r\n^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\profiler.h(209,2): note: expanded from macro 'MONO_PROFILER_EVENT_1'\r\n        _MONO_PROFILER_EVENT(name, type)\r\n        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\profiler.h(205,117): note: expanded from macro '_MONO_PROFILER_EVENT'\r\n        MONO_API void mono_profiler_set_ ## name ## _callback (MonoProfilerHandle handle, MonoProfiler ## type ## Callback cb);\r\n                                                                                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2198,28): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                hash = mono_object_hash (obj);\r\n                                         ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(134,50): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(int, mono_object_hash, (MonoObject * obj))\r\n                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2203,54): warning: comparison of distinct pointer types ('MonoObject *' (aka 'struct _MonoObject *') and 'Il2CppObject *' (aka 'struct Il2CppObject *')) [-Wcompare-distinct-pointer-types]\r\n                        if (ref && mono_gchandle_get_target (ref->handle) == obj) {\r\n                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2212,53): warning: comparison of distinct pointer types ('MonoObject *' (aka 'struct _MonoObject *') and 'Il2CppObject *' (aka 'struct Il2CppObject *')) [-Wcompare-distinct-pointer-types]\r\n                if (ref && mono_gchandle_get_target (ref->handle) == obj) {\r\n                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2220,43): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n        ref->handle = mono_gchandle_new_weakref (obj, FALSE);\r\n                                                 ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(141,64): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(uint32_t, mono_gchandle_new_weakref, (MonoObject * obj, int32_t track_resurrection))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2282,8): warning: incompatible pointer types assigning to 'Il2CppObject *' (aka 'struct Il2CppObject *') from 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                *obj = mono_gchandle_get_target (ref->handle);\r\n                     ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2426,70): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n        AgentDomainInfo *info = (AgentDomainInfo *)VM_DOMAIN_GET_AGENT_INFO(domain);\r\n                                                                            ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(12,71): note: expanded from macro 'VM_DOMAIN_GET_AGENT_INFO'\r\n#define VM_DOMAIN_GET_AGENT_INFO(domain) il2cpp_domain_get_agent_info(domain)\r\n                                                                      ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(92,51): note: passing argument to parameter 'domain' here\r\nvoid* il2cpp_domain_get_agent_info(MonoAppDomain* domain);\r\n                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2461,27): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n        VM_DOMAIN_SET_AGENT_INFO(domain, NULL);\r\n                                 ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(13,78): note: expanded from macro 'VM_DOMAIN_SET_AGENT_INFO'\r\n#define VM_DOMAIN_SET_AGENT_INFO(domain, value) il2cpp_domain_set_agent_info(domain, value)\r\n                                                                             ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(93,50): note: passing argument to parameter 'domain' here\r\nvoid il2cpp_domain_set_agent_info(MonoAppDomain* domain, void* agentInfo);\r\n                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2488,53): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n        info = (AgentDomainInfo *)VM_DOMAIN_GET_AGENT_INFO(domain);\r\n                                                           ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(12,71): note: expanded from macro 'VM_DOMAIN_GET_AGENT_INFO'\r\n#define VM_DOMAIN_GET_AGENT_INFO(domain) il2cpp_domain_get_agent_info(domain)\r\n                                                                      ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(92,51): note: passing argument to parameter 'domain' here\r\nvoid* il2cpp_domain_get_agent_info(MonoAppDomain* domain);\r\n                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2491,28): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n                VM_DOMAIN_SET_AGENT_INFO(domain, info);\r\n                                         ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(13,78): note: expanded from macro 'VM_DOMAIN_SET_AGENT_INFO'\r\n#define VM_DOMAIN_SET_AGENT_INFO(domain, value) il2cpp_domain_set_agent_info(domain, value)\r\n                                                                             ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(93,50): note: passing argument to parameter 'domain' here\r\nvoid il2cpp_domain_set_agent_info(MonoAppDomain* domain, void* agentInfo);\r\n                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2620,30): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                s = mono_method_full_name (m, TRUE);\r\n                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2668,30): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                s = mono_method_full_name (method, 1);\r\n                                           ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2681,110): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n                DEBUG_PRINTF (2, \"[dbg]   send assembly [%s][%s][%d]\\n\", assembly->aname.name, VM_DOMAIN_GET_FRIENDLY_NAME(domain), id);\r\n                                                                                                                           ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(14,77): note: expanded from macro 'VM_DOMAIN_GET_FRIENDLY_NAME'\r\n#define VM_DOMAIN_GET_FRIENDLY_NAME(domain) il2cpp_domain_get_friendly_name(domain)\r\n                                                                            ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(94,60): note: passing argument to parameter 'domain' here\r\nconst char* il2cpp_domain_get_friendly_name(MonoAppDomain* domain);\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3001,39): warning: incompatible pointer types passing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') to parameter of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n        if (mono_thread_internal_is_current (thread) || tls->terminated)\r\n                                             ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(149,90): note: passing argument to parameter 'thread' here\r\nDO_MONO_API_NOT_EXPORTED(int32_t, mono_thread_internal_is_current, (MonoInternalThread * thread))\r\n                                                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3286,79): warning: incompatible pointer types passing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') to parameter of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n        if (!tls->suspended && !tls->terminated && !mono_thread_internal_is_current (tls->thread))\r\n                                                                                     ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(149,90): note: passing argument to parameter 'thread' here\r\nDO_MONO_API_NOT_EXPORTED(int32_t, mono_thread_internal_is_current, (MonoInternalThread * thread))\r\n                                                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3351,94): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        printf (\"Unable to find seq points for method '%s', offset 0x%x.\\n\", mono_method_full_name (method, TRUE), offset);\r\n                                                                                                    ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3378,10): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                method = jinfo_get_method (info->ji);\r\n                       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3380,10): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                method = info->method;\r\n                       ^ ~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3381,16): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        actual_method = info->actual_method;\r\n                      ^ ~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3393,66): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                        if (mono_find_prev_seq_point_for_native_offset (info->domain, method, info->native_offset, NULL, &sp))\r\n                                                                                      ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(210,101): note: passing argument to parameter 'method' here\r\nDO_MONO_API(int32_t, mono_find_prev_seq_point_for_native_offset, (MonoDomain * domain, MonoMethod * method, int32_t native_offset, MonoSeqPointInfo **info, SeqPoint * seq_point))\r\n                                                                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3397,57): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                        info->il_offset = mono_debug_il_offset_from_address (method, info->domain, info->native_offset);\r\n                                                                             ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(193,71): note: passing argument to parameter 'method' here\r\nDO_MONO_API(int32_t, mono_debug_il_offset_from_address, (MonoMethod * method, MonoDomain * domain, uint32_t native_offset))\r\n                                                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3400,85): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        DEBUG_PRINTF (1, \"\\tFrame: %s:[il=0x%x, native=0x%x] %d\\n\", mono_method_full_name (method, TRUE), info->il_offset, info->native_offset, info->managed);\r\n                                                                                           ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3406,50): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                api_method = mono_marshal_method_from_wrapper (method);\r\n                                                               ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(202,74): note: passing argument to parameter 'wrapper' here\r\nDO_MONO_API(MonoMethod*, mono_marshal_method_from_wrapper, (MonoMethod * wrapper))\r\n                                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3406,14): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                api_method = mono_marshal_method_from_wrapper (method);\r\n                           ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3547,16): warning: initializing 'MethodInfo *' (aka 'struct MethodInfo *') with an expression of type 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                        MonoMethod *sp_method = il2cpp_get_seq_point_method(seq_point);\r\n                                    ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3549,25): warning: assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                        frame->actual_method = tls->il2cpp_context->executionContexts[frame_index]->method;\r\n                                             ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3565,16): warning: incompatible pointer types assigning to 'MonoMethod *' (aka 'struct _MonoMethod *') from 'MethodInfo *' (aka 'struct MethodInfo *') [-Wincompatible-pointer-types]\r\n                        info.method = sp_method;\r\n                                    ^ ~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3566,23): warning: incompatible pointer types assigning to 'MonoMethod *' (aka 'struct _MonoMethod *') from 'const MethodInfo *' (aka 'const struct MethodInfo *') [-Wincompatible-pointer-types]\r\n                        info.actual_method = tls->il2cpp_context->executionContexts[frame_index]->method;\r\n                                           ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3774,27): warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        char *s = strdup_tolower(needle);\r\n                                 ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3677,23): note: passing argument to parameter 's' here\r\nstrdup_tolower (char *s)\r\n                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3812,14): warning: initializing 'MethodInfo *' (aka 'struct MethodInfo *') with an expression of type 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        MonoMethod *sp_method = ji ? il2cpp_get_seq_point_method(sp) : NULL;\r\n                    ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3842,27): warning: comparison of distinct pointer types ('Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') and 'MonoInternalThread *' (aka 'struct _MonoInternalThread *')) [-Wcompare-distinct-pointer-types]\r\n                                        if (mod->data.thread != mono_thread_internal_current ())\r\n                                            ~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3845,128): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                                        if (mod->data.exc_class && mod->subclasses && !mono_class_is_assignable_from (mod->data.exc_class, mono_object_get_class (ei->exc)))\r\n                                                                                                                                                                  ^~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3847,100): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                                        if (mod->data.exc_class && !mod->subclasses && mod->data.exc_class !=  mono_object_get_class (ei->exc))\r\n                                                                                                                                      ^~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3862,99): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                                        if (assemblies[k] == mono_image_get_assembly (mono_class_get_image (mono_method_get_class (sp_method))))\r\n                                                                                                                                                   ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(112,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoClass*, mono_method_get_class, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3862,26): warning: comparison of distinct pointer types ('Il2CppAssembly *' (aka 'struct Il2CppAssembly *') and 'MonoAssembly *' (aka 'struct _MonoAssembly *')) [-Wcompare-distinct-pointer-types]\r\n                                                        if (assemblies[k] == mono_image_get_assembly (mono_class_get_image (mono_method_get_class (sp_method))))\r\n                                                            ~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3890,32): warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                                                char *s = strdup_tolower(files[i]);\r\n                                                                         ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3677,23): note: passing argument to parameter 's' here\r\nstrdup_tolower (char *s)\r\n                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4076,12): warning: incompatible pointer types assigning to 'Il2CppThread *' (aka 'struct Il2CppThread *') from 'MonoThread *' (aka 'struct _MonoThread *') [-Wincompatible-pointer-types]\r\n                                thread = is_debugger_thread () ? mono_thread_get_main () : mono_thread_current ();\r\n                                       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4257,22): warning: incompatible pointer types initializing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') with an expression of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n        MonoInternalThread *thread = mono_thread_internal_current ();\r\n                            ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4309,55): warning: incompatible pointer types passing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n        mono_gc_wbarrier_generic_store((void**)&tls->thread, thread);\r\n                                                             ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(165,89): note: passing argument to parameter 'value' here\r\nDO_MONO_API_NOT_EXPORTED(void, mono_gc_wbarrier_generic_store, (void* ptr, MonoObject * value))\r\n                                                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4356,40): warning: incompatible pointer types passing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') to parameter of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n                if (mono_thread_internal_is_current (thread) && !mono_native_tls_get_value (debugger_tls_id)\r\n                                                     ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(149,90): note: passing argument to parameter 'thread' here\r\nDO_MONO_API_NOT_EXPORTED(int32_t, mono_thread_internal_is_current, (MonoInternalThread * thread))\r\n                                                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4394,65): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n        mono_gc_wbarrier_generic_store((void**)&tls->domain_unloading, domain);\r\n                                                                       ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(165,89): note: passing argument to parameter 'value' here\r\nDO_MONO_API_NOT_EXPORTED(void, mono_gc_wbarrier_generic_store, (void* ptr, MonoObject * value))\r\n                                                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4517,47): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n        while (ass = mono_domain_get_assemblies_iter(domain, &iter))\r\n                                                     ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(42,78): note: passing argument to parameter 'domain' here\r\nDO_MONO_API(MonoAssembly*, mono_domain_get_assemblies_iter, (MonoAppDomain * domain, void** iter))\r\n                                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4517,13): warning: incompatible pointer types assigning to 'Il2CppAssembly *' (aka 'struct Il2CppAssembly *') from 'MonoAssembly *' (aka 'struct _MonoAssembly *') [-Wincompatible-pointer-types]\r\n        while (ass = mono_domain_get_assemblies_iter(domain, &iter))\r\n                   ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4517,13): warning: using the result of an assignment as a condition without parentheses [-Wparentheses]\r\n        while (ass = mono_domain_get_assemblies_iter(domain, &iter))\r\n               ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4517,13): note: place parentheses around the assignment to silence this warning\r\n        while (ass = mono_domain_get_assemblies_iter(domain, &iter))\r\n                   ^\r\n               (                                                   )\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4517,13): note: use '==' to turn this assignment into an equality comparison\r\n        while (ass = mono_domain_get_assemblies_iter(domain, &iter))\r\n                   ^\r\n                   ==\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4570,18): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        send_type_load (method->klass);\r\n                        ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4455,28): note: passing argument to parameter 'klass' here\r\nsend_type_load (MonoClass *klass)\r\n                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4930,155): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        DEBUG_PRINTF (1, \"[dbg] Setting %sbreakpoint at %s:0x%x.\\n\", (req->event_kind == EVENT_KIND_STEP) ? \"single step \" : \"\", method ? mono_method_full_name (method, TRUE) : \"<all>\", (int)il_offset);\r\n                                                                                                                                                                 ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4940,17): warning: using the result of an assignment as a condition without parentheses [-Wparentheses]\r\n        while(seqPoint = il2cpp_get_method_sequence_points(method, &seqPointIter))\r\n              ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4940,17): note: place parentheses around the assignment to silence this warning\r\n        while(seqPoint = il2cpp_get_method_sequence_points(method, &seqPointIter))\r\n                       ^\r\n              (                                                                  )\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(4940,17): note: use '==' to turn this assignment into an equality comparison\r\n        while(seqPoint = il2cpp_get_method_sequence_points(method, &seqPointIter))\r\n                       ^\r\n                       ==\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5029,13): warning: assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        bp->method = il2cpp_get_seq_point_method(sp);\r\n                   ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5034,157): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        DEBUG_PRINTF(1, \"[dbg] Setting %sbreakpoint at %s:0x%x.\\n\", (req->event_kind == EVENT_KIND_STEP) ? \"single step \" : \"\", bp->method ? mono_method_full_name(bp->method, TRUE) : \"<all>\", (int)bp->il_offset);\r\n                                                                                                                                                                   ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5190,40): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                frame->jit = mono_debug_find_method (frame->api_method, frame->domain);\r\n                                                     ^~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(102,76): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoDebugMethodJitInfo*, mono_debug_find_method, (MonoMethod * method, MonoDomain * domain))\r\n                                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5192,82): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                        frame->jit = mono_debug_find_method(mono_method_get_declaring_generic_method (frame->api_method), frame->domain);\r\n                                                                                                      ^~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(110,82): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoMethod*, mono_method_get_declaring_generic_method, (MonoMethod * method))\r\n                                                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5197,31): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                        s = mono_method_full_name (frame->api_method, TRUE);\r\n                                                   ^~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5221,171): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                DEBUG_PRINTF (1, \"[%p] Breakpoint hit during async step-out at %s hit, continuing stepping out.\\n\", (gpointer)(gsize)mono_native_thread_id_get (), mono_method_get_name(method));\r\n                                                                                                                                                                                        ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(111,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(const char*, mono_method_get_name, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5314,14): warning: initializing 'MethodInfo *' (aka 'struct MethodInfo *') with an expression of type 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        MonoMethod *sp_method = il2cpp_get_seq_point_method(sequencePoint);\r\n                    ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5318,169): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                DEBUG_PRINTF(1, \"[%p] Breakpoint hit during async step-out at %s hit, continuing stepping out.\\n\", (gpointer)(gsize)mono_native_thread_id_get(), mono_method_get_name(sp_method));\r\n                                                                                                                                                                                      ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(111,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(const char*, mono_method_get_name, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5370,93): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        return bp->method && mono_image_get_assembly (mono_class_get_image (mono_method_get_class (bp->method))) == assembly;\r\n                                                                                                   ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(112,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoClass*, mono_method_get_class, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5370,107): warning: comparison of distinct pointer types ('MonoAssembly *' (aka 'struct _MonoAssembly *') and 'Il2CppAssembly *' (aka 'struct Il2CppAssembly *')) [-Wcompare-distinct-pointer-types]\r\n        return bp->method && mono_image_get_assembly (mono_class_get_image (mono_method_get_class (bp->method))) == assembly;\r\n                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5426,50): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        builder_field = mono_class_get_field_from_name (frame->method->klass, \"<>t__builder\");\r\n                                                        ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\class.h(77,44): note: passing argument to parameter 'klass' here\r\nmono_class_get_field_from_name (MonoClass *klass, const char *name);\r\n                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5433,31): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        if (mono_class_is_valuetype (frame->method->klass)) {\r\n                                     ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5466,50): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        builder_field = mono_class_get_field_from_name (frame->method->klass, \"<>t__builder\");\r\n                                                        ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\class.h(77,44): note: passing argument to parameter 'klass' here\r\nmono_class_get_field_from_name (MonoClass *klass, const char *name);\r\n                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5476,33): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        obj = mono_runtime_try_invoke (method, builder, NULL, &ex, &error);\r\n                                       ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(178,78): note: passing argument to parameter 'method' here\r\nDO_MONO_API_NOT_EXPORTED(MonoObject*, mono_runtime_try_invoke, (MonoMethod * method, void* obj, void** params, MonoObject** exc, MonoError * error))\r\n                                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5476,56): warning: incompatible pointer types passing 'Il2CppObject **' (aka 'struct Il2CppObject **') to parameter of type 'MonoObject **' (aka 'struct _MonoObject **') [-Wincompatible-pointer-types]\r\n        obj = mono_runtime_try_invoke (method, builder, NULL, &ex, &error);\r\n                                                              ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(178,125): note: passing argument to parameter 'exc' here\r\nDO_MONO_API_NOT_EXPORTED(MonoObject*, mono_runtime_try_invoke, (MonoMethod * method, void* obj, void** params, MonoObject** exc, MonoError * error))\r\n                                                                                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5476,6): warning: incompatible pointer types assigning to 'Il2CppObject *' (aka 'struct Il2CppObject *') from 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n        obj = mono_runtime_try_invoke (method, builder, NULL, &ex, &error);\r\n            ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5488,66): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        MonoClassField *builder_field = mono_class_get_field_from_name (frame->method->klass, \"<>t__builder\");\r\n                                                                        ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\class.h(77,44): note: passing argument to parameter 'klass' here\r\nmono_class_get_field_from_name (MonoClass *klass, const char *name);\r\n                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5497,31): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        mono_runtime_invoke_checked (get_set_notification_method (mono_class_from_mono_type (mono_field_get_type (builder_field))), builder, args, &error);\r\n                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(179,82): note: passing argument to parameter 'method' here\r\nDO_MONO_API_NOT_EXPORTED(MonoObject*, mono_runtime_invoke_checked, (MonoMethod * method, void* obj, void** params, MonoError * error))\r\n                                                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5512,53): warning: incompatible pointer types passing 'Il2CppImage *' (aka 'struct Il2CppImage *') to parameter of type 'MonoImage *' (aka 'struct _MonoImage *') [-Wincompatible-pointer-types]\r\n        MonoClass* task_class = mono_class_load_from_name (mono_defaults.corlib, \"System.Threading.Tasks\", \"Task\");\r\n                                                           ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(43,23): note: expanded from macro 'mono_defaults'\r\n#define mono_defaults il2cpp_mono_defaults\r\n                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\class-internals.h(1434,39): note: passing argument to parameter 'image' here\r\nmono_class_load_from_name (MonoImage *image, const char* name_space, const char *name) MONO_LLVM_INTERNAL;\r\n                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5867,38): warning: comparison of distinct pointer types ('MonoInternalThread *' (aka 'struct _MonoInternalThread *') and 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *')) [-Wcompare-distinct-pointer-types]\r\n        if (mono_thread_internal_current () != ss_req->thread)\r\n            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5876,52): warning: incompatible pointer types passing 'Il2CppSequencePoint *' (aka 'struct Il2CppSequencePoint *') to parameter of type 'MonoJitInfo *' (aka 'struct _MonoJitInfo *') [-Wincompatible-pointer-types]\r\n        events = create_event_list(EVENT_KIND_STEP, reqs, sequencePoint, NULL, &suspend_policy);\r\n                                                          ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3806,67): note: passing argument to parameter 'ji' here\r\ncreate_event_list (EventKind event, GPtrArray *reqs, MonoJitInfo *ji, DebuggerEventInfo *ei, int *suspend_policy)\r\n                                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5883,14): warning: initializing 'MethodInfo *' (aka 'struct MethodInfo *') with an expression of type 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        MonoMethod *sp_method = il2cpp_get_seq_point_method(sequence_pt);\r\n                    ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5894,108): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                        if (ss_req->user_assemblies[k] == mono_image_get_assembly (mono_class_get_image (mono_method_get_class (sp_method))))\r\n                                                                                                                                ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(112,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoClass*, mono_method_get_class, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5894,35): warning: comparison of distinct pointer types ('Il2CppAssembly *' (aka 'struct Il2CppAssembly *') and 'MonoAssembly *' (aka 'struct _MonoAssembly *')) [-Wcompare-distinct-pointer-types]\r\n                        if (ss_req->user_assemblies[k] == mono_image_get_assembly (mono_class_get_image (mono_method_get_class (sp_method))))\r\n                            ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6026,24): warning: incompatible pointer types passing 'void (DebuggerTlsData *, gboolean, Il2CppSequencePoint *)' (aka 'void (DebuggerTlsData *, int, struct Il2CppSequencePoint *)') to parameter of type 'void (*)(DebuggerTlsData *, gboolean)' (aka 'void (*)(DebuggerTlsData *, int)') [-Wincompatible-pointer-types]\r\n        process_signal_event (process_single_step_inner);\r\n                              ^~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(5700,30): note: passing argument to parameter 'func' here\r\nprocess_signal_event (void (*func) (DebuggerTlsData*, gboolean))\r\n                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6283,143): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                DEBUG_PRINTF (1, \"[dbg] Candidate breakpoint at %s:[il=0x%x] is a duplicate for this step request, will not add.\\n\", mono_method_full_name (method, TRUE), (int)il_offset);\r\n                                                                                                                                                            ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6298,14): warning: initializing 'MethodInfo *' (aka 'struct MethodInfo *') with an expression of type 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        MonoMethod *sp_method = il2cpp_get_seq_point_method(sp);\r\n                    ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6311,141): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                DEBUG_PRINTF(1, \"[dbg] Candidate breakpoint at %s:[il=0x%x] is a duplicate for this step request, will not add.\\n\", mono_method_full_name(sp_method, TRUE), (int)sp->ilOffset);\r\n                                                                                                                                                          ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6366,16): warning: initializing 'MethodInfo *' (aka 'struct MethodInfo *') with an expression of type 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                        MonoMethod* currentMethod = il2cpp_get_seq_point_method(tls->il2cpp_context->executionContexts[tls->il2cpp_context->frameCount - 1]->currentSequencePoint);\r\n                                    ^               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6370,19): warning: using the result of an assignment as a condition without parentheses [-Wparentheses]\r\n                        while(seqPoint = il2cpp_get_method_sequence_points(currentMethod, &seqPointIter))\r\n                              ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6370,19): note: place parentheses around the assignment to silence this warning\r\n                        while(seqPoint = il2cpp_get_method_sequence_points(currentMethod, &seqPointIter))\r\n                                       ^\r\n                              (                                                                         )\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6370,19): note: use '==' to turn this assignment into an equality comparison\r\n                        while(seqPoint = il2cpp_get_method_sequence_points(currentMethod, &seqPointIter))\r\n                                       ^\r\n                                       ==\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6709,15): warning: initializing 'MethodInfo *' (aka 'struct MethodInfo *') with an expression of type 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                MonoMethod *sp_method = il2cpp_get_seq_point_method(seq_point);\r\n                            ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6922,46): warning: passing 'const MethodInfo *' (aka 'const struct MethodInfo *') to parameter of type 'MethodInfo *' (aka 'struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                while (cp = il2cpp_get_method_catch_points(method, &catchPointIter))\r\n                                                           ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(87,62): note: passing argument to parameter 'method' here\r\nIl2CppCatchPoint* il2cpp_get_method_catch_points(MonoMethod* method, void* *iter);\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6922,13): warning: using the result of an assignment as a condition without parentheses [-Wparentheses]\r\n                while (cp = il2cpp_get_method_catch_points(method, &catchPointIter))\r\n                       ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6922,13): note: place parentheses around the assignment to silence this warning\r\n                while (cp = il2cpp_get_method_catch_points(method, &catchPointIter))\r\n                          ^\r\n                       (                                                           )\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6922,13): note: use '==' to turn this assignment into an equality comparison\r\n                while (cp = il2cpp_get_method_catch_points(method, &catchPointIter))\r\n                          ^\r\n                          ==\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6926,16): warning: initializing 'MonoClass *' (aka 'struct _MonoClass *') with an expression of type 'const MonoClass *' (aka 'const struct _MonoClass *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                                MonoClass *catchType = il2cpp_get_class_from_index(cp->catchTypeIndex);\r\n                                           ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(6989,23): warning: incompatible pointer types initializing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') with an expression of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n                MonoInternalThread *thread = mono_thread_internal_current();\r\n                                    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7019,10): warning: assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                method = tls->il2cpp_context->frameCount > 0 ? tls->il2cpp_context->executionContexts[tls->il2cpp_context->frameCount - 1]->method : NULL;\r\n                       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7041,98): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                                if (assemblies[k] == mono_image_get_assembly (mono_class_get_image (mono_method_get_class (method))))\r\n                                                                                                                                           ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(112,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoClass*, mono_method_get_class, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7041,25): warning: comparison of distinct pointer types ('Il2CppAssembly *' (aka 'struct Il2CppAssembly *') and 'MonoAssembly *' (aka 'struct _MonoAssembly *')) [-Wcompare-distinct-pointer-types]\r\n                                                if (assemblies[k] == mono_image_get_assembly (mono_class_get_image (mono_method_get_class (method))))\r\n                                                    ~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7086,23): warning: incompatible pointer types initializing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') with an expression of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n                MonoInternalThread *thread = mono_thread_internal_current ();\r\n                                    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7170,26): warning: comparison of distinct pointer types ('Il2CppAssembly *' (aka 'struct Il2CppAssembly *') and 'MonoAssembly *' (aka 'struct _MonoAssembly *')) [-Wcompare-distinct-pointer-types]\r\n                                                if (assemblies [k] == mono_image_get_assembly (mono_class_get_image (mono_method_get_class (jinfo_get_method (catch_ji)))))\r\n                                                    ~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7343,64): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                buffer_add_typeid (buf, domain, mono_class_from_mono_type (t));\r\n                                                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7360,16): warning: incompatible pointer types initializing 'MonoClass *' (aka 'struct _MonoClass *') with an expression of type 'Il2CppClass *' (aka 'struct Il2CppClass *') [-Wincompatible-pointer-types]\r\n                                MonoClass *klass = il2cpp_object_get_class(obj);\r\n                                           ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7361,35): warning: incompatible pointer types passing 'MonoClass *' (aka 'struct _MonoClass *') to parameter of type 'const Il2CppClass *' (aka 'const struct Il2CppClass *') [-Wincompatible-pointer-types]\r\n                                if (il2cpp_class_is_valuetype(klass))\r\n                                                              ^~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-api-functions.h(65,62): note: passing argument to parameter 'klass' here\r\nDO_API(bool, il2cpp_class_is_valuetype, (const Il2CppClass * klass));\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7363,8): warning: assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'const Il2CppType *' (aka 'const struct Il2CppType *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                                        t =  il2cpp_class_get_type(il2cpp_object_get_class(obj));\r\n                                          ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7364,31): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                                        addr = mono_object_unbox(obj);\r\n                                                                 ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(135,53): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(void*, mono_object_unbox, (MonoObject * obj))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7368,36): warning: incompatible pointer types passing 'MonoClass *' (aka 'struct _MonoClass *') to parameter of type 'const Il2CppClass *' (aka 'const struct Il2CppClass *') [-Wincompatible-pointer-types]\r\n                                else if (il2cpp_class_get_rank(klass))\r\n                                                               ^~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-api-functions.h(80,57): note: passing argument to parameter 'klass' here\r\nDO_API(int, il2cpp_class_get_rank, (const Il2CppClass * klass));\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7370,70): warning: incompatible pointer types passing 'MonoClass *' (aka 'struct _MonoClass *') to parameter of type 'Il2CppClass *' (aka 'struct Il2CppClass *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_byte(buf, il2cpp_type_get_type(il2cpp_class_get_type(klass)));\r\n                                                                                                        ^~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-api-functions.h(73,65): note: passing argument to parameter 'klass' here\r\nDO_API(const Il2CppType*, il2cpp_class_get_type, (Il2CppClass * klass));\r\n                                                                ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7372,57): warning: incompatible pointer types passing 'MonoClass *' (aka 'struct _MonoClass *') to parameter of type 'Il2CppClass *' (aka 'struct Il2CppClass *') [-Wincompatible-pointer-types]\r\n                                else if (il2cpp_type_get_type(il2cpp_class_get_type(klass)) == MONO_TYPE_GENERICINST)\r\n                                                                                    ^~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-api-functions.h(73,65): note: passing argument to parameter 'klass' here\r\nDO_API(const Il2CppType*, il2cpp_class_get_type, (Il2CppClass * klass));\r\n                                                                ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7378,70): warning: incompatible pointer types passing 'MonoClass *' (aka 'struct _MonoClass *') to parameter of type 'Il2CppClass *' (aka 'struct Il2CppClass *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_byte(buf, il2cpp_type_get_type(il2cpp_class_get_type(klass)));\r\n                                                                                                        ^~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-api-functions.h(73,65): note: passing argument to parameter 'klass' here\r\nDO_API(const Il2CppType*, il2cpp_class_get_type, (Il2CppClass * klass));\r\n                                                                ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7389,49): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        MonoClass *klass = mono_class_from_mono_type(t);\r\n                                                                     ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7443,32): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                buffer_add_value_full(buf, mono_field_get_type (f), (guint8*)addr + mono_field_get_offset (f) - sizeof(MonoObject), domain, FALSE, parent_vtypes);\r\n                                                           ^~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7259,58): note: passing argument to parameter 't' here\r\nstatic void buffer_add_value_full(Buffer *buf, MonoType *t, void *addr, MonoDomain *domain,\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7458,44): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        if (mono_type_generic_inst_is_valuetype(t))\r\n                                                                ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(47,71): note: passing argument to parameter 'monoType' here\r\nDO_MONO_API(int32_t, mono_type_generic_inst_is_valuetype, (MonoType * monoType))\r\n                                                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7665,44): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n        MonoClass *klass = mono_object_get_class (obj);\r\n                                                  ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7666,65): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n        if (!mono_class_is_assignable_from (mono_class_from_mono_type (t), klass)) {\r\n                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7669,66): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        if (mono_class_is_assignable_from (mono_class_from_mono_type (t), klass)) {\r\n                                                                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7700,47): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n        if (t && klass != mono_class_from_mono_type (t)) {\r\n                                                     ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7701,37): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                char *name = mono_type_full_name (t);\r\n                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(48,53): note: passing argument to parameter 'type' here\r\nDO_MONO_API(char*, mono_type_full_name, (MonoType * type))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7715,23): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                err = decode_value (mono_field_get_type (f), domain, (guint8*)addr + mono_field_get_offset (f) - sizeof (MonoObject), buf, &buf, limit);\r\n                                    ^~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7679,25): note: passing argument to parameter 't' here\r\ndecode_value (MonoType *t, MonoDomain *domain, guint8 *addr, guint8 *buf, guint8 **endbuf, guint8 *limit);\r\n                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7732,50): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n        if (type != t->type && !MONO_TYPE_IS_REFERENCE (t) &&\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\metadata.h(19,59): note: expanded from macro 'MONO_TYPE_IS_REFERENCE'\r\n#define MONO_TYPE_IS_REFERENCE(t) mono_type_is_reference (t)\r\n                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(46,58): note: passing argument to parameter 'type' here\r\nDO_MONO_API(int32_t, mono_type_is_reference, (MonoType * type))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7738,37): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                char *name = mono_type_full_name (t);\r\n                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(48,53): note: passing argument to parameter 'type' here\r\nDO_MONO_API(char*, mono_type_full_name, (MonoType * type))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7787,27): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                if (MONO_TYPE_ISSTRUCT (t)) {\r\n                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\metadata.h(16,52): note: expanded from macro 'MONO_TYPE_ISSTRUCT'\r\n#define MONO_TYPE_ISSTRUCT(t) mono_type_is_struct (t)\r\n                                                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(45,55): note: passing argument to parameter 'type' here\r\nDO_MONO_API(int32_t, mono_type_is_struct, (MonoType * type))\r\n                                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7812,31): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                        if (mono_object_get_class (obj) != mono_class_from_mono_type (t)) {\r\n                                                   ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7812,66): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        if (mono_object_get_class (obj) != mono_class_from_mono_type (t)) {\r\n                                                                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7813,84): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                DEBUG_PRINTF (1, \"Expected type '%s', got object '%s'\\n\", mono_type_full_name (t), mono_class_get_name (mono_object_get_class (obj)));\r\n                                                                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(48,53): note: passing argument to parameter 'type' here\r\nDO_MONO_API(char*, mono_type_full_name, (MonoType * type))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7813,132): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                                DEBUG_PRINTF (1, \"Expected type '%s', got object '%s'\\n\", mono_type_full_name (t), mono_class_get_name (mono_object_get_class (obj)));\r\n                                                                                                                                                               ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7816,37): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                        memcpy (addr, mono_object_unbox (obj), mono_class_value_size (mono_object_get_class (obj), NULL));\r\n                                                         ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(135,53): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(void*, mono_object_unbox, (MonoObject * obj))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7816,89): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                        memcpy (addr, mono_object_unbox (obj), mono_class_value_size (mono_object_get_class (obj), NULL));\r\n                                                                                                             ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7825,31): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                if (MONO_TYPE_IS_REFERENCE (t)) {\r\n                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\metadata.h(19,59): note: expanded from macro 'MONO_TYPE_IS_REFERENCE'\r\n#define MONO_TYPE_IS_REFERENCE(t) mono_type_is_reference (t)\r\n                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(46,58): note: passing argument to parameter 'type' here\r\nDO_MONO_API(int32_t, mono_type_is_reference, (MonoType * type))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7837,79): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                                DEBUG_PRINTF (1, \"Expected type '%s', got '%s'\\n\", mono_type_full_name (t), mono_class_get_name (mono_object_get_class (obj)));\r\n                                                                                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(48,53): note: passing argument to parameter 'type' here\r\nDO_MONO_API(char*, mono_type_full_name, (MonoType * type))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7837,127): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                                                DEBUG_PRINTF (1, \"Expected type '%s', got '%s'\\n\", mono_type_full_name (t), mono_class_get_name (mono_object_get_class (obj)));\r\n                                                                                                                                                                        ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7844,43): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                                mono_gc_wbarrier_generic_store (addr, obj);\r\n                                                                      ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(165,89): note: passing argument to parameter 'value' here\r\nDO_MONO_API_NOT_EXPORTED(void, mono_gc_wbarrier_generic_store, (void* ptr, MonoObject * value))\r\n                                                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7884,39): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                char *name = mono_type_full_name (t);\r\n                                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(48,53): note: passing argument to parameter 'type' here\r\nDO_MONO_API(char*, mono_type_full_name, (MonoType * type))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7890,30): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                                        mono_class_is_valuetype(t->data.generic_class->cached_class) &&\r\n                                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7913,93): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n        if (t->type == MONO_TYPE_GENERICINST && mono_class_is_nullable (mono_class_from_mono_type (t))) {\r\n                                                                                                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7914,104): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                MonoType *targ = VM_GENERIC_INST_TYPE_ARGV(mono_generic_class_get_context (m_type_get_generic_class (t))->class_inst, 0);\r\n                                                                                                                     ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(25,77): note: expanded from macro 'VM_GENERIC_INST_TYPE_ARGV'\r\n#define VM_GENERIC_INST_TYPE_ARGV(inst, index) il2cpp_generic_inst_get_argv(inst, index)\r\n                                                                            ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(44,83): note: passing argument to parameter 'type' here\r\nDO_MONO_API_NOT_EXPORTED(MonoGenericClass*, m_type_get_generic_class, (MonoType * type))\r\n                                                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7928,92): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        nullable_buf = (guint8 *)g_malloc (mono_class_instance_size (mono_class_from_mono_type (targ)));\r\n                                                                                                                ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7934,83): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        MonoObject *boxed = mono_value_box_checked (domain, mono_class_from_mono_type (targ), nullable_buf, &error);\r\n                                                                                                       ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7934,16): warning: incompatible pointer types initializing 'Il2CppObject *' (aka 'struct Il2CppObject *') with an expression of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                        MonoObject *boxed = mono_value_box_checked (domain, mono_class_from_mono_type (targ), nullable_buf, &error);\r\n                                    ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7939,64): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        mono_nullable_init (addr, boxed, mono_class_from_mono_type (t));\r\n                                                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7939,30): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                        mono_nullable_init (addr, boxed, mono_class_from_mono_type (t));\r\n                                                  ^~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(199,81): note: passing argument to parameter 'value' here\r\nDO_MONO_API_NOT_EXPORTED(void, mono_nullable_init, (uint8_t * buf, MonoObject * value, MonoClass * klass))\r\n                                                                                ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7944,63): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        mono_nullable_init (addr, NULL, mono_class_from_mono_type (t));\r\n                                                                                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8170,30): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n        if (MONO_TYPE_IS_REFERENCE (t))\r\n                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\metadata.h(19,59): note: expanded from macro 'MONO_TYPE_IS_REFERENCE'\r\n#define MONO_TYPE_IS_REFERENCE(t) mono_type_is_reference (t)\r\n                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(46,58): note: passing argument to parameter 'type' here\r\nDO_MONO_API(int32_t, mono_type_is_reference, (MonoType * type))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8173,60): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                size = mono_class_value_size (mono_class_from_mono_type (t), NULL);\r\n                                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8209,132): warning: comparison of distinct pointer types ('MonoAssembly *' (aka 'struct _MonoAssembly *') and 'Il2CppAssembly *' (aka 'struct Il2CppAssembly *')) [-Wcompare-distinct-pointer-types]\r\n        if (m->kind == MOD_KIND_EXCEPTION_ONLY && m->data.exc_class && mono_image_get_assembly (mono_class_get_image (m->data.exc_class)) == assembly)\r\n                                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8289,95): warning: incompatible pointer types passing 'Il2CppAssembly *' (aka 'struct Il2CppAssembly *') to parameter of type 'MonoAssembly *' (aka 'struct _MonoAssembly *') [-Wincompatible-pointer-types]\r\n        return mono_type_in_image (mono_class_get_type ((MonoClass*)klass), mono_assembly_get_image ((MonoAssembly*)assembly));\r\n                                                                                                     ^~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(215,66): note: passing argument to parameter 'assembly' here\r\nDO_MONO_API(MonoImage*, mono_assembly_get_image, (MonoAssembly * assembly))\r\n                                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8351,141): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                DEBUG_PRINTF (1, \"[%p] Invoking method '%s' on receiver '%s'.\\n\", (gpointer) (gsize) mono_native_thread_id_get (), mono_method_full_name (invoke->method, TRUE), this_arg ? mono_class_get_name (mono_object_get_class (this_arg)) : \"<null>\");\r\n                                                                                                                                                          ^~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8351,219): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                DEBUG_PRINTF (1, \"[%p] Invoking method '%s' on receiver '%s'.\\n\", (gpointer) (gsize) mono_native_thread_id_get (), mono_method_full_name (invoke->method, TRUE), this_arg ? mono_class_get_name (mono_object_get_class (this_arg)) : \"<null>\");\r\n                                                                                                                                                                                                                                        ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8353,28): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                mono_runtime_try_invoke (invoke->method, NULL, invoke->args, &exc, &error);\r\n                                         ^~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(178,78): note: passing argument to parameter 'method' here\r\nDO_MONO_API_NOT_EXPORTED(MonoObject*, mono_runtime_try_invoke, (MonoMethod * method, void* obj, void** params, MonoObject** exc, MonoError * error))\r\n                                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8353,64): warning: incompatible pointer types passing 'Il2CppObject **' (aka 'struct Il2CppObject **') to parameter of type 'MonoObject **' (aka 'struct _MonoObject **') [-Wincompatible-pointer-types]\r\n                mono_runtime_try_invoke (invoke->method, NULL, invoke->args, &exc, &error);\r\n                                                                             ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(178,125): note: passing argument to parameter 'exc' here\r\nDO_MONO_API_NOT_EXPORTED(MonoObject*, mono_runtime_try_invoke, (MonoMethod * method, void* obj, void** params, MonoObject** exc, MonoError * error))\r\n                                                                                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8362,31): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        sig = mono_method_signature (m);\r\n                                     ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(98,72): note: passing argument to parameter 'm' here\r\nDO_MONO_API(MonoMethodSignature*, mono_method_signature, (MonoMethod * m))\r\n                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8364,31): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        if (mono_class_is_valuetype (m->klass))\r\n                                     ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8365,60): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                this_buf = (guint8 *)g_alloca (mono_class_instance_size (m->klass));\r\n                                                                         ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(148,33): note: expanded from macro 'g_alloca'\r\n#define g_alloca(size)          alloca (size)\r\n                                        ^~~~\r\nC:\\Program Files\\Unity\\Hub\\Editor\\2021.3.22f1\\Editor\\Data\\PlaybackEngines\\AndroidPlayer\\NDK\\toolchains\\llvm\\prebuilt\\windows-x86_64\\sysroot\\usr\\include\\alloca.h(46,41): note: expanded from macro 'alloca'\r\n#define alloca(size)   __builtin_alloca(size)\r\n                                        ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(56,61): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_instance_size, (MonoClass * klass))\r\n                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8370,158): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                DEBUG_PRINTF (1, \"[%p] Error: Attemtping to invoke uninflated generic method %s.\\n\", (gpointer)(gsize)mono_native_thread_id_get (), mono_method_full_name (m, TRUE));\r\n                                                                                                                                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8372,38): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        } else if (mono_class_is_valuetype (m->klass) && (m->flags & METHOD_ATTRIBUTE_STATIC)) {\r\n                                            ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8379,50): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                memset (this_buf, 0, mono_class_instance_size (m->klass));\r\n                                                               ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(56,61): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_instance_size, (MonoClass * klass))\r\n                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8380,37): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        } else if (mono_class_is_valuetype(m->klass) && !strcmp (m->name, \".ctor\")) {\r\n                                           ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8386,52): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                                memset (this_buf, 0, mono_class_instance_size (m->klass));\r\n                                                                               ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(56,61): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_instance_size, (MonoClass * klass))\r\n                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8389,45): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                                err = decode_value(mono_class_get_type (m->klass), domain, this_buf, p, &p, end);\r\n                                                                        ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(89,58): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(MonoType*, mono_class_get_type, (MonoClass * klass))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8389,24): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                err = decode_value(mono_class_get_type (m->klass), domain, this_buf, p, &p, end);\r\n                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7907,25): note: passing argument to parameter 't' here\r\ndecode_value (MonoType *t, MonoDomain *domain, guint8 *addr, guint8 *buf, guint8 **endbuf, guint8 *limit)\r\n                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8395,44): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                err = decode_value (mono_class_get_type (m->klass), domain, this_buf, p, &p, end);\r\n                                                         ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(89,58): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(MonoType*, mono_class_get_type, (MonoClass * klass))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8395,23): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                err = decode_value (mono_class_get_type (m->klass), domain, this_buf, p, &p, end);\r\n                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7907,25): note: passing argument to parameter 't' here\r\ndecode_value (MonoType *t, MonoDomain *domain, guint8 *addr, guint8 *buf, guint8 **endbuf, guint8 *limit)\r\n                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8401,32): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        if (!mono_class_is_valuetype (m->klass))\r\n                                      ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8406,31): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        if (MONO_CLASS_IS_INTERFACE (m->klass)) {\r\n                                     ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\metadata.h(21,60): note: expanded from macro 'MONO_CLASS_IS_INTERFACE'\r\n#define MONO_CLASS_IS_INTERFACE(c) ((mono_class_get_flags (c) & TYPE_ATTRIBUTE_INTERFACE) || (c->byval_arg.type == MONO_TYPE_VAR) || (c->byval_arg.type == MONO_TYPE_MVAR))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(60,58): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(uint32_t, mono_class_get_flags, (MonoClass * klass))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8411,39): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                m = mono_object_get_virtual_method (this_arg, m);\r\n                                                    ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(136,72): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoMethod*, mono_object_get_virtual_method, (MonoObject * obj, MonoMethod * method))\r\n                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8411,49): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                m = mono_object_get_virtual_method (this_arg, m);\r\n                                                              ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(136,90): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoMethod*, mono_object_get_virtual_method, (MonoObject * obj, MonoMethod * method))\r\n                                                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8411,5): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                m = mono_object_get_virtual_method (this_arg, m);\r\n                  ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8413,32): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                if (mono_class_is_valuetype (m->klass)) {\r\n                                             ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8414,61): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                        this_buf = (guint8 *)g_alloca (mono_class_instance_size (m->klass));\r\n                                                                                 ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(148,33): note: expanded from macro 'g_alloca'\r\n#define g_alloca(size)          alloca (size)\r\n                                        ^~~~\r\nC:\\Program Files\\Unity\\Hub\\Editor\\2021.3.22f1\\Editor\\Data\\PlaybackEngines\\AndroidPlayer\\NDK\\toolchains\\llvm\\prebuilt\\windows-x86_64\\sysroot\\usr\\include\\alloca.h(46,41): note: expanded from macro 'alloca'\r\n#define alloca(size)   __builtin_alloca(size)\r\n                                        ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(56,61): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_instance_size, (MonoClass * klass))\r\n                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8415,41): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                        memcpy (this_buf, mono_object_unbox (this_arg), mono_class_instance_size (m->klass));\r\n                                                             ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(135,53): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(void*, mono_object_unbox, (MonoObject * obj))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8415,78): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                        memcpy (this_buf, mono_object_unbox (this_arg), mono_class_instance_size (m->klass));\r\n                                                                                                  ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(56,61): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_instance_size, (MonoClass * klass))\r\n                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8417,80): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        } else if ((m->flags & METHOD_ATTRIBUTE_VIRTUAL) && !mono_class_is_valuetype (m->klass) && invoke->flags & INVOKE_FLAG_VIRTUAL) {\r\n                                                                                      ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8422,39): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                m = mono_object_get_virtual_method (this_arg, m);\r\n                                                    ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(136,72): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoMethod*, mono_object_get_virtual_method, (MonoObject * obj, MonoMethod * method))\r\n                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8422,49): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                m = mono_object_get_virtual_method (this_arg, m);\r\n                                                              ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(136,90): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoMethod*, mono_object_get_virtual_method, (MonoObject * obj, MonoMethod * method))\r\n                                                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8422,5): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                m = mono_object_get_virtual_method (this_arg, m);\r\n                  ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8423,32): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                if (mono_class_is_valuetype (m->klass)) {\r\n                                             ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8424,61): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                        this_buf = (guint8 *)g_alloca (mono_class_instance_size (m->klass));\r\n                                                                                 ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(148,33): note: expanded from macro 'g_alloca'\r\n#define g_alloca(size)          alloca (size)\r\n                                        ^~~~\r\nC:\\Program Files\\Unity\\Hub\\Editor\\2021.3.22f1\\Editor\\Data\\PlaybackEngines\\AndroidPlayer\\NDK\\toolchains\\llvm\\prebuilt\\windows-x86_64\\sysroot\\usr\\include\\alloca.h(46,41): note: expanded from macro 'alloca'\r\n#define alloca(size)   __builtin_alloca(size)\r\n                                        ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(56,61): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_instance_size, (MonoClass * klass))\r\n                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8425,41): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                        memcpy (this_buf, mono_object_unbox (this_arg), mono_class_instance_size (m->klass));\r\n                                                             ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(135,53): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(void*, mono_object_unbox, (MonoObject * obj))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8425,78): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                        memcpy (this_buf, mono_object_unbox (this_arg), mono_class_instance_size (m->klass));\r\n                                                                                                  ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(56,61): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_instance_size, (MonoClass * klass))\r\n                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8429,140): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        DEBUG_PRINTF (1, \"[%p] Invoking method '%s' on receiver '%s'.\\n\", (gpointer) (gsize) mono_native_thread_id_get (), mono_method_full_name (m, TRUE), this_arg ? mono_class_get_name (mono_object_get_class (this_arg)): \"<null>\");\r\n                                                                                                                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8429,205): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n        DEBUG_PRINTF (1, \"[%p] Invoking method '%s' on receiver '%s'.\\n\", (gpointer) (gsize) mono_native_thread_id_get (), mono_method_full_name (m, TRUE), this_arg ? mono_class_get_name (mono_object_get_class (this_arg)): \"<null>\");\r\n                                                                                                                                                                                                                   ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8434,32): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        if (!mono_class_is_valuetype (m->klass) && !(m->flags & METHOD_ATTRIBUTE_STATIC) && !this_arg) {\r\n                                      ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8436,32): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                        if (mono_class_is_abstract (m->klass))\r\n                                                    ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(72,72): note: passing argument to parameter 'klass' here\r\nDO_MONO_API_NOT_EXPORTED(int32_t, mono_class_is_abstract, (MonoClass * klass));\r\n                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8440,49): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                                this_arg = mono_object_new_checked (domain, m->klass, &error);\r\n                                                                            ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(137,98): note: passing argument to parameter 'klass' here\r\nDO_MONO_API_NOT_EXPORTED(MonoObject*, mono_object_new_checked, (MonoDomain * domain, MonoClass * klass, MonoError * error))\r\n                                                                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8440,14): warning: incompatible pointer types assigning to 'Il2CppObject *' (aka 'struct Il2CppObject *') from 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                                this_arg = mono_object_new_checked (domain, m->klass, &error);\r\n                                         ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8449,66): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        if (this_arg && !obj_is_of_type (this_arg, mono_class_get_type (m->klass)))\r\n                                                                        ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(89,58): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(MonoType*, mono_class_get_type, (MonoClass * klass))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8449,45): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n        if (this_arg && !obj_is_of_type (this_arg, mono_class_get_type (m->klass)))\r\n                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7663,44): note: passing argument to parameter 't' here\r\nobj_is_of_type (MonoObject *obj, MonoType *t)\r\n                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8461,24): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                        err = decode_value (sig->params [i], domain, (guint8*)&args [i], p, &p, end);\r\n                                            ^~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7907,25): note: passing argument to parameter 't' here\r\ndecode_value (MonoType *t, MonoDomain *domain, guint8 *addr, guint8 *buf, guint8 **endbuf, guint8 *limit)\r\n                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8475,24): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                        err = decode_value (sig->params [i], domain, arg_buf [i], p, &p, end);\r\n                                            ^~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7907,25): note: passing argument to parameter 't' here\r\ndecode_value (MonoType *t, MonoDomain *domain, guint8 *addr, guint8 *buf, guint8 **endbuf, guint8 *limit)\r\n                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8516,61): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n        res = mono_runtime_try_invoke (m, mono_class_is_valuetype (m->klass) ? (gpointer)this_buf : (gpointer)this_arg, args, &exc, &error);\r\n                                                                   ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8516,33): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        res = mono_runtime_try_invoke (m, mono_class_is_valuetype (m->klass) ? (gpointer)this_buf : (gpointer)this_arg, args, &exc, &error);\r\n                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(178,78): note: passing argument to parameter 'method' here\r\nDO_MONO_API_NOT_EXPORTED(MonoObject*, mono_runtime_try_invoke, (MonoMethod * method, void* obj, void** params, MonoObject** exc, MonoError * error))\r\n                                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8516,120): warning: incompatible pointer types passing 'Il2CppObject **' (aka 'struct Il2CppObject **') to parameter of type 'MonoObject **' (aka 'struct _MonoObject **') [-Wincompatible-pointer-types]\r\n        res = mono_runtime_try_invoke (m, mono_class_is_valuetype (m->klass) ? (gpointer)this_buf : (gpointer)this_arg, args, &exc, &error);\r\n                                                                                                                              ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(178,125): note: passing argument to parameter 'exc' here\r\nDO_MONO_API_NOT_EXPORTED(MonoObject*, mono_runtime_try_invoke, (MonoMethod * method, void* obj, void** params, MonoObject** exc, MonoError * error))\r\n                                                                                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8516,6): warning: incompatible pointer types assigning to 'Il2CppObject *' (aka 'struct Il2CppObject *') from 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n        res = mono_runtime_try_invoke (m, mono_class_is_valuetype (m->klass) ? (gpointer)this_buf : (gpointer)this_arg, args, &exc, &error);\r\n            ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8527,175): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n        DEBUG_PRINTF (1, \"[%p] Invoke result: %p, exc: %s, time: %ld ms.\\n\", (gpointer) (gsize) mono_native_thread_id_get (), res, exc ? mono_class_get_name (mono_object_get_class (exc)) : NULL, (long)mono_stopwatch_elapsed_ms (&watch));\r\n                                                                                                                                                                                     ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8530,26): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                buffer_add_value (buf, mono_class_get_type (VM_DEFAULTS_OBJECT_CLASS), &exc, domain);\r\n                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8541,27): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                        buffer_add_value (buf, mono_class_get_type (mono_get_string_class ()), &res, domain);\r\n                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8544,35): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                                if (!mono_class_is_valuetype (m->klass))\r\n                                                              ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8545,29): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value (buf, mono_class_get_type (VM_DEFAULTS_OBJECT_CLASS), &this_arg, domain);\r\n                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8547,50): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value (buf, mono_class_get_type (m->klass), this_buf, domain);\r\n                                                                                    ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(89,58): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(MonoType*, mono_class_get_type, (MonoClass * klass))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8547,29): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value (buf, mono_class_get_type (m->klass), this_buf, domain);\r\n                                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8549,28): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                buffer_add_value (buf, mono_class_get_type (VM_DEFAULTS_VOID_CLASS), NULL, domain);\r\n                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8553,15): warning: incompatible pointer types initializing 'Il2CppType *' (aka 'struct Il2CppType *') with an expression of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                MonoType* ret_byval = mono_class_get_type (mono_class_from_mono_type (sig->ret));\r\n                                          ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8556,28): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                buffer_add_value (buf, sig->ret, &res, domain);\r\n                                                       ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8564,39): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                                mono_nullable_init (nullable_buf, res, k);\r\n                                                                  ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(199,81): note: passing argument to parameter 'value' here\r\nDO_MONO_API_NOT_EXPORTED(void, mono_nullable_init, (uint8_t * buf, MonoObject * value, MonoClass * klass))\r\n                                                                                ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8565,28): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                buffer_add_value (buf, sig->ret, nullable_buf, domain);\r\n                                                       ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8570,16): warning: incompatible pointer types initializing 'Il2CppType *' (aka 'struct Il2CppType *') with an expression of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                        MonoType* ret_byval = mono_class_get_type (mono_class_from_mono_type (sig->ret));\r\n                                                  ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8571,59): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value (buf, ret_byval, mono_object_unbox (res), domain);\r\n                                                                                             ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(135,53): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(void*, mono_object_unbox, (MonoObject * obj))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8573,58): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value (buf, sig->ret, mono_object_unbox (res), domain);\r\n                                                                                            ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(135,53): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(void*, mono_object_unbox, (MonoObject * obj))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8573,29): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value (buf, sig->ret, mono_object_unbox (res), domain);\r\n                                                               ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8581,48): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                        buffer_add_value (buf, mono_class_get_type (m->klass), this_buf, domain);\r\n                                                                    ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(89,58): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(MonoType*, mono_class_get_type, (MonoClass * klass))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8581,27): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                        buffer_add_value (buf, mono_class_get_type (m->klass), this_buf, domain);\r\n                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8586,29): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value (buf, sig->params [i], &args [i], domain);\r\n                                                               ^~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8589,29): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value (buf, sig->params [i], &arg_buf [i], domain);\r\n                                                               ^~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8591,29): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value (buf, sig->params [i], arg_buf [i], domain);\r\n                                                               ^~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8719,37): warning: incompatible pointer types passing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') to parameter of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n                mono_thread_internal_reset_abort (tls->thread);\r\n                                                  ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(151,88): note: passing argument to parameter 'thread' here\r\nDO_MONO_API_NOT_EXPORTED(void, mono_thread_internal_reset_abort, (MonoInternalThread * thread))\r\n                                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(8894,16): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                        exit_method = mono_class_get_method_from_name (env_class, \"Exit\", 1);\r\n                                    ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9049,31): warning: incompatible pointer types passing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') to parameter of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n                mono_thread_internal_abort (THREAD_TO_INTERNAL (thread), FALSE);\r\n                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(124,36): note: expanded from macro 'THREAD_TO_INTERNAL'\r\n#define THREAD_TO_INTERNAL(thread) (thread)->internal_thread\r\n                                   ^~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(150,82): note: passing argument to parameter 'thread' here\r\nDO_MONO_API_NOT_EXPORTED(void, mono_thread_internal_abort, (MonoInternalThread * thread, int32_t appdomain_unload))\r\n                                                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9087,72): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n                        AgentDomainInfo *info = (AgentDomainInfo *)VM_DOMAIN_GET_AGENT_INFO(domain);\r\n                                                                                            ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(12,71): note: expanded from macro 'VM_DOMAIN_GET_AGENT_INFO'\r\n#define VM_DOMAIN_GET_AGENT_INFO(domain) il2cpp_domain_get_agent_info(domain)\r\n                                                                      ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(92,51): note: passing argument to parameter 'domain' here\r\nvoid* il2cpp_domain_get_agent_info(MonoAppDomain* domain);\r\n                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9192,50): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n                        while (ass = mono_domain_get_assemblies_iter (domain, &iter))\r\n                                                                      ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(42,78): note: passing argument to parameter 'domain' here\r\nDO_MONO_API(MonoAssembly*, mono_domain_get_assemblies_iter, (MonoAppDomain * domain, void** iter))\r\n                                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9192,15): warning: incompatible pointer types assigning to 'Il2CppAssembly *' (aka 'struct Il2CppAssembly *') from 'MonoAssembly *' (aka 'struct _MonoAssembly *') [-Wincompatible-pointer-types]\r\n                        while (ass = mono_domain_get_assemblies_iter (domain, &iter))\r\n                                   ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9192,15): warning: using the result of an assignment as a condition without parentheses [-Wparentheses]\r\n                        while (ass = mono_domain_get_assemblies_iter (domain, &iter))\r\n                               ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9192,15): note: place parentheses around the assignment to silence this warning\r\n                        while (ass = mono_domain_get_assemblies_iter (domain, &iter))\r\n                                   ^\r\n                               (                                                    )\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9192,15): note: use '==' to turn this assignment into an equality comparison\r\n                        while (ass = mono_domain_get_assemblies_iter (domain, &iter))\r\n                                   ^\r\n                                   ==\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9198,44): warning: incompatible pointer types passing 'Il2CppImage *' (aka 'struct Il2CppImage *') to parameter of type 'MonoImage *' (aka 'struct _MonoImage *') [-Wincompatible-pointer-types]\r\n                                        t = mono_reflection_get_type_checked (ass->image, ass->image, &info, ignore_case, &type_resolve, &probe_type_error);\r\n                                                                              ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(175,84): note: passing argument to parameter 'rootimage' here\r\nDO_MONO_API_NOT_EXPORTED(MonoType*, mono_reflection_get_type_checked, (MonoImage * rootimage, MonoImage * image, MonoTypeNameParse * info, int32_t ignorecase, int32_t * type_resolve, MonoError * error))\r\n                                                                                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9198,56): warning: incompatible pointer types passing 'Il2CppImage *' (aka 'struct Il2CppImage *') to parameter of type 'MonoImage *' (aka 'struct _MonoImage *') [-Wincompatible-pointer-types]\r\n                                        t = mono_reflection_get_type_checked (ass->image, ass->image, &info, ignore_case, &type_resolve, &probe_type_error);\r\n                                                                                          ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(175,107): note: passing argument to parameter 'image' here\r\nDO_MONO_API_NOT_EXPORTED(MonoType*, mono_reflection_get_type_checked, (MonoImage * rootimage, MonoImage * image, MonoTypeNameParse * info, int32_t ignorecase, int32_t * type_resolve, MonoError * error))\r\n                                                                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9198,8): warning: incompatible pointer types assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                        t = mono_reflection_get_type_checked (ass->image, ass->image, &info, ignore_case, &type_resolve, &probe_type_error);\r\n                                          ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9201,58): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                                g_ptr_array_add (res_classes, mono_type_get_class (t));\r\n                                                                                                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(43,58): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_type_get_class, (MonoType * type))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9526,55): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n                buffer_add_string (buf, VM_DOMAIN_GET_FRIENDLY_NAME(domain));\r\n                                                                    ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(14,77): note: expanded from macro 'VM_DOMAIN_GET_FRIENDLY_NAME'\r\n#define VM_DOMAIN_GET_FRIENDLY_NAME(domain) il2cpp_domain_get_friendly_name(domain)\r\n                                                                            ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(94,60): note: passing argument to parameter 'domain' here\r\nconst char* il2cpp_domain_get_friendly_name(MonoAppDomain* domain);\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9540,41): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n                while(mono_domain_get_assemblies_iter(domain, &iter)) {\r\n                                                      ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(42,78): note: passing argument to parameter 'domain' here\r\nDO_MONO_API(MonoAssembly*, mono_domain_get_assemblies_iter, (MonoAppDomain * domain, void** iter))\r\n                                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9548,47): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n                while(ass = mono_domain_get_assemblies_iter(domain, &iter)) {\r\n                                                            ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(42,78): note: passing argument to parameter 'domain' here\r\nDO_MONO_API(MonoAssembly*, mono_domain_get_assemblies_iter, (MonoAppDomain * domain, void** iter))\r\n                                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9548,13): warning: incompatible pointer types assigning to 'Il2CppAssembly *' (aka 'struct Il2CppAssembly *') from 'MonoAssembly *' (aka 'struct _MonoAssembly *') [-Wincompatible-pointer-types]\r\n                while(ass = mono_domain_get_assemblies_iter(domain, &iter)) {\r\n                          ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9548,13): warning: using the result of an assignment as a condition without parentheses [-Wparentheses]\r\n                while(ass = mono_domain_get_assemblies_iter(domain, &iter)) {\r\n                      ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9548,13): note: place parentheses around the assignment to silence this warning\r\n                while(ass = mono_domain_get_assemblies_iter(domain, &iter)) {\r\n                          ^\r\n                      (                                                   )\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9548,13): note: use '==' to turn this assignment into an equality comparison\r\n                while(ass = mono_domain_get_assemblies_iter(domain, &iter)) {\r\n                          ^\r\n                          ==\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9578,39): warning: incompatible pointer types passing 'const MonoAssembly *' (aka 'const struct _MonoAssembly *') to parameter of type 'Il2CppAssembly *' (aka 'struct Il2CppAssembly *') [-Wincompatible-pointer-types]\r\n                buffer_add_assemblyid (buf, domain, mono_domain_get_corlib (domain));\r\n                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2675,71): note: passing argument to parameter 'assembly' here\r\nbuffer_add_assemblyid (Buffer *buf, MonoDomain *domain, MonoAssembly *assembly)\r\n                                                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9616,5): warning: incompatible pointer types assigning to 'Il2CppObject *' (aka 'struct Il2CppObject *') from 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                o = mono_object_new_checked (domain, klass, &error);\r\n                  ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9619,88): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                err = decode_value (mono_class_get_type(klass), domain, (guint8 *)mono_object_unbox (o), p, &p, end);\r\n                                                                                                     ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(135,53): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(void*, mono_object_unbox, (MonoObject * obj))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9619,23): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                err = decode_value (mono_class_get_type(klass), domain, (guint8 *)mono_object_unbox (o), p, &p, end);\r\n                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7907,25): note: passing argument to parameter 't' here\r\ndecode_value (MonoType *t, MonoDomain *domain, guint8 *addr, guint8 *buf, guint8 **endbuf, guint8 *limit)\r\n                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9672,52): warning: incompatible pointer types passing 'Il2CppImage *' (aka 'struct Il2CppImage *') to parameter of type 'MonoImage *' (aka 'struct _MonoImage *') [-Wincompatible-pointer-types]\r\n                buffer_add_string (buf, mono_image_get_filename (ass->image));\r\n                                                                 ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(30,64): note: passing argument to parameter 'image' here\r\nDO_MONO_API(const char*, mono_image_get_filename, (MonoImage * image))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9679,30): warning: incompatible pointer types passing 'Il2CppImage *' (aka 'struct Il2CppImage *') to parameter of type 'MonoImage *' (aka 'struct _MonoImage *') [-Wincompatible-pointer-types]\r\n                if (mono_image_is_dynamic (ass->image)) {\r\n                                           ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(32,58): note: passing argument to parameter 'image' here\r\nDO_MONO_API(int32_t, mono_image_is_dynamic, (MonoImage * image))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9685,6): warning: assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                        m = il2cpp_image_get_entry_point(ass->image);\r\n                          ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9706,37): warning: incompatible pointer types passing 'Il2CppImage *' (aka 'struct Il2CppImage *') to parameter of type 'MonoImage *' (aka 'struct _MonoImage *') [-Wincompatible-pointer-types]\r\n                buffer_add_moduleid (buf, domain, ass->image);\r\n                                                  ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2685,66): note: passing argument to parameter 'image' here\r\nbuffer_add_moduleid (Buffer *buf, MonoDomain *domain, MonoImage *image)\r\n                                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9747,42): warning: incompatible pointer types passing 'Il2CppImage *' (aka 'struct Il2CppImage *') to parameter of type 'MonoImage *' (aka 'struct _MonoImage *') [-Wincompatible-pointer-types]\r\n                        t = mono_reflection_get_type_checked (ass->image, ass->image, &info, ignorecase, &type_resolve, &error);\r\n                                                              ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(175,84): note: passing argument to parameter 'rootimage' here\r\nDO_MONO_API_NOT_EXPORTED(MonoType*, mono_reflection_get_type_checked, (MonoImage * rootimage, MonoImage * image, MonoTypeNameParse * info, int32_t ignorecase, int32_t * type_resolve, MonoError * error))\r\n                                                                                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9747,54): warning: incompatible pointer types passing 'Il2CppImage *' (aka 'struct Il2CppImage *') to parameter of type 'MonoImage *' (aka 'struct _MonoImage *') [-Wincompatible-pointer-types]\r\n                        t = mono_reflection_get_type_checked (ass->image, ass->image, &info, ignorecase, &type_resolve, &error);\r\n                                                                          ^~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(175,107): note: passing argument to parameter 'image' here\r\nDO_MONO_API_NOT_EXPORTED(MonoType*, mono_reflection_get_type_checked, (MonoImage * rootimage, MonoImage * image, MonoTypeNameParse * info, int32_t ignorecase, int32_t * type_resolve, MonoError * error))\r\n                                                                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9747,6): warning: incompatible pointer types assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        t = mono_reflection_get_type_checked (ass->image, ass->image, &info, ignorecase, &type_resolve, &error);\r\n                          ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9760,66): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                buffer_add_typeid (buf, domain, t ? mono_class_from_mono_type (t) : NULL);\r\n                                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9807,52): warning: incompatible pointer types passing 'MonoImage *' (aka 'struct _MonoImage *') to parameter of type 'const Il2CppImage *' (aka 'const struct Il2CppImage *') [-Wincompatible-pointer-types]\r\n                buffer_add_string (buf, VM_IMAGE_GET_MODULE_NAME(image)); // scopename\r\n                                                                 ^~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(26,63): note: expanded from macro 'VM_IMAGE_GET_MODULE_NAME'\r\n#define VM_IMAGE_GET_MODULE_NAME(image) il2cpp_image_get_name(image)\r\n                                                              ^~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-api-functions.h(271,65): note: passing argument to parameter 'image' here\r\nDO_API(const char*, il2cpp_image_get_name, (const Il2CppImage * image));\r\n                                                                ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9810,39): warning: incompatible pointer types passing 'MonoAssembly *' (aka 'struct _MonoAssembly *') to parameter of type 'Il2CppAssembly *' (aka 'struct Il2CppAssembly *') [-Wincompatible-pointer-types]\r\n                buffer_add_assemblyid (buf, domain, mono_image_get_assembly (image)); // assembly\r\n                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2675,71): note: passing argument to parameter 'assembly' here\r\nbuffer_add_assemblyid (Buffer *buf, MonoDomain *domain, MonoAssembly *assembly)\r\n                                                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9847,35): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n        if (val && mono_object_get_class(val) == mono_defaults.runtimetype_class) {\r\n                                         ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9847,40): warning: comparison of distinct pointer types ('MonoClass *' (aka 'struct _MonoClass *') and 'Il2CppClass *' (aka 'struct Il2CppClass *')) [-Wcompare-distinct-pointer-types]\r\n        if (val && mono_object_get_class(val) == mono_defaults.runtimetype_class) {\r\n                   ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9852,37): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n        } else if (MONO_TYPE_IS_REFERENCE (t))\r\n                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\metadata.h(19,59): note: expanded from macro 'MONO_TYPE_IS_REFERENCE'\r\n#define MONO_TYPE_IS_REFERENCE(t) mono_type_is_reference (t)\r\n                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(46,58): note: passing argument to parameter 'type' here\r\nDO_MONO_API(int32_t, mono_type_is_reference, (MonoType * type))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9855,48): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                buffer_add_value (buf, t, mono_object_unbox (val), domain);\r\n                                                             ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(135,53): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(void*, mono_object_unbox, (MonoObject * obj))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9949,12): warning: using the result of an assignment as a condition without parentheses [-Wparentheses]\r\n        while (ic = mono_class_get_interfaces(klass, &iter)) {\r\n               ~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9949,12): note: place parentheses around the assignment to silence this warning\r\n        while (ic = mono_class_get_interfaces(klass, &iter)) {\r\n                  ^\r\n               (                                           )\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9949,12): note: use '==' to turn this assignment into an equality comparison\r\n        while (ic = mono_class_get_interfaces(klass, &iter)) {\r\n                  ^\r\n                  ==\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9976,8): warning: incompatible pointer types assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                type = mono_class_get_type(klass);\r\n                     ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9977,35): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                name = mono_type_get_name_full (type, MONO_TYPE_NAME_FORMAT_FULL_NAME);\r\n                                                ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(49,57): note: passing argument to parameter 'type' here\r\nDO_MONO_API(char*, mono_type_get_name_full, (MonoType * type, MonoTypeNameFormat format))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9980,39): warning: incompatible pointer types passing 'MonoAssembly *' (aka 'struct _MonoAssembly *') to parameter of type 'Il2CppAssembly *' (aka 'struct Il2CppAssembly *') [-Wincompatible-pointer-types]\r\n                buffer_add_assemblyid (buf, domain, mono_image_get_assembly(mono_class_get_image(klass)));\r\n                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2675,71): note: passing argument to parameter 'assembly' here\r\nbuffer_add_assemblyid (Buffer *buf, MonoDomain *domain, MonoAssembly *assembly)\r\n                                                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9984,33): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                type_tag = mono_type_get_type(type);\r\n                                              ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(51,50): note: passing argument to parameter 'type' here\r\nDO_MONO_API(int, mono_type_get_type, (MonoType * type));\r\n                                                 ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(9998,27): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                if (!mono_type_is_byref(type) && (((type_tag >= MONO_TYPE_BOOLEAN) && (type_tag <= MONO_TYPE_R8)) || (type_tag == MONO_TYPE_I) || (type_tag == MONO_TYPE_U)))\r\n                                        ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(52,54): note: passing argument to parameter 'type' here\r\nDO_MONO_API(int32_t, mono_type_is_byref, (MonoType * type));\r\n                                                     ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10034,65): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_typeid (buf, domain, mono_class_from_mono_type (VM_GENERIC_INST_TYPE_ARGV(inst, i)));\r\n                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(25,48): note: expanded from macro 'VM_GENERIC_INST_TYPE_ARGV'\r\n#define VM_GENERIC_INST_TYPE_ARGV(inst, index) il2cpp_generic_inst_get_argv(inst, index)\r\n                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10036,27): warning: incompatible pointer types initializing 'Il2CppGenericContainer *' (aka 'struct Il2CppGenericContainer *') with an expression of type 'MonoGenericContainer *' (aka 'struct _MonoGenericContainer *') [-Wincompatible-pointer-types]\r\n                                MonoGenericContainer *container = mono_class_get_generic_container (klass);\r\n                                                      ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10068,13): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                while ((m = mono_class_get_methods (klass, &iter))) {\r\n                          ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10108,38): warning: incompatible pointer types passing 'MonoMethod *' (aka 'struct _MonoMethod *') to parameter of type 'MethodInfo *' (aka 'struct MethodInfo *') [-Wincompatible-pointer-types]\r\n                        buffer_add_methodid (buf, domain, mono_property_get_get_method (p));\r\n                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2662,67): note: passing argument to parameter 'method' here\r\nbuffer_add_methodid (Buffer *buf, MonoDomain *domain, MonoMethod *method)\r\n                                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10109,38): warning: incompatible pointer types passing 'MonoMethod *' (aka 'struct _MonoMethod *') to parameter of type 'MethodInfo *' (aka 'struct MethodInfo *') [-Wincompatible-pointer-types]\r\n                        buffer_add_methodid (buf, domain, mono_property_get_set_method (p));\r\n                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(2662,67): note: passing argument to parameter 'method' here\r\nbuffer_add_methodid (Buffer *buf, MonoDomain *domain, MonoMethod *method)\r\n                                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10110,46): warning: incompatible pointer types passing 'MonoClass *' (aka 'struct _MonoClass *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        buffer_add_int (buf, mono_type_get_attrs (mono_property_get_parent (p)));\r\n                                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(54,56): note: passing argument to parameter 'type' here\r\nDO_MONO_API(uint32_t, mono_type_get_attrs, (MonoType * type));\r\n                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10252,51): warning: pointer type mismatch ('Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') and 'MonoInternalThread *' (aka 'struct _MonoInternalThread *')) [-Wpointer-type-mismatch]\r\n                        mono_field_static_get_value_for_thread (thread ? thread : mono_thread_internal_current (), vtable, f, val, &error);\r\n                                                                       ^ ~~~~~~   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10255,27): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                        buffer_add_value (buf, mono_field_get_type (f), val, domain);\r\n                                               ^~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10294,24): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                        err = decode_value (mono_field_get_type(f), domain, val, p, &p, end);\r\n                                            ^~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7907,25): note: passing argument to parameter 't' here\r\ndecode_value (MonoType *t, MonoDomain *domain, guint8 *addr, guint8 *buf, guint8 **endbuf, guint8 *limit)\r\n                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10421,19): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                        while ((method = mono_class_get_methods (iclass, &iter))) {\r\n                                       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10450,7): warning: incompatible pointer types assigning to 'Il2CppObject *' (aka 'struct Il2CppObject *') from 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                obj = mono_object_new_checked (domain, klass, &error);\r\n                    ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10518,18): warning: using the result of an assignment as a condition without parentheses [-Wparentheses]\r\n        while (seqPoint = il2cpp_get_method_sequence_points(method, &seqPointIter))\r\n               ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10518,18): note: place parentheses around the assignment to silence this warning\r\n        while (seqPoint = il2cpp_get_method_sequence_points(method, &seqPointIter))\r\n                        ^\r\n               (                                                                  )\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10518,18): note: use '==' to turn this assignment into an equality comparison\r\n        while (seqPoint = il2cpp_get_method_sequence_points(method, &seqPointIter))\r\n                        ^\r\n                        ==\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10558,48): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                buffer_add_string (buf, mono_method_get_name(method));\r\n                                                             ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(111,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(const char*, mono_method_get_name, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10562,57): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                buffer_add_typeid (buf, domain, mono_method_get_class(method));\r\n                                                                      ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(112,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoClass*, mono_method_get_class, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10579,124): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                Il2CppSequencePointSourceFile* sourceFile = il2cpp_debug_get_source_file (mono_class_get_image (mono_method_get_class (method)), sequencePoint->sourceFileIndex);\r\n                                                                                                                                                       ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(112,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoClass*, mono_method_get_class, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10588,124): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                Il2CppSequencePointSourceFile* sourceFile = il2cpp_debug_get_source_file (mono_class_get_image (mono_method_get_class (method)), ((Il2CppSequencePoint*)g_ptr_array_index(uniqueFileSequencePoints, 0))->sourceFileIndex);\r\n                                                                                                                                                       ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(112,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoClass*, mono_method_get_class, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10606,80): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                DEBUG_PRINTF(10, \"Line number table for method %s:\\n\", mono_method_full_name(method, TRUE));\r\n                                                                                             ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(107,57): note: passing argument to parameter 'method' here\r\nDO_MONO_API(char*, mono_method_full_name, (MonoMethod * method, int32_t signature))\r\n                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10613,149): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                        DEBUG_PRINTF(10, \"IL%x -> %s:%d %d %d %d\\n\", sequencePoint->ilOffset, il2cpp_debug_get_source_file (mono_class_get_image (mono_method_get_class (method)), sequencePoint->sourceFileIndex)->file,\r\n                                                                                                                                                                         ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(658,89): note: expanded from macro 'DEBUG_PRINTF'\r\n#define DEBUG_PRINTF(level, ...) do { if (G_UNLIKELY ((level) <= log_level)) { g_print (__VA_ARGS__); } } while (0)\r\n                                                                                        ^~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(112,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoClass*, mono_method_get_class, (MonoMethod * method))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10702,53): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                MonoMethodSignature *sig = mono_method_signature (method);\r\n                                                                  ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(98,72): note: passing argument to parameter 'm' here\r\nDO_MONO_API(MonoMethodSignature*, mono_method_signature, (MonoMethod * m))\r\n                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10720,32): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                mono_method_get_param_names (method, (const char **) names);\r\n                                             ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(103,62): note: passing argument to parameter 'method' here\r\nDO_MONO_API(void, mono_method_get_param_names, (MonoMethod * method, const char **names))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10733,44): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                header = mono_method_get_header_checked (method, &error);\r\n                                                         ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(105,78): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoMethodHeader*, mono_method_get_header_checked, (MonoMethod * method, MonoError * error))\r\n                                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10740,38): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                locals = mono_debug_lookup_locals (method);\r\n                                                   ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(100,75): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoDebugLocalsInfo*, mono_debug_lookup_locals, (MonoMethod * method))\r\n                                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10808,46): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                buffer_add_int (buf, mono_method_get_flags(method, &iflags));\r\n                                                           ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(113,60): note: passing argument to parameter 'method' here\r\nDO_MONO_API(uint32_t, mono_method_get_flags, (MonoMethod * method, uint32_t * iflags))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10808,54): warning: passing 'int *' to parameter of type 'uint32_t *' (aka 'unsigned int *') converts between pointers to integer types with different sign [-Wpointer-sign]\r\n                buffer_add_int (buf, mono_method_get_flags(method, &iflags));\r\n                                                                   ^~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(113,79): note: passing argument to parameter 'iflags' here\r\nDO_MONO_API(uint32_t, mono_method_get_flags, (MonoMethod * method, uint32_t * iflags))\r\n                                                                              ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10810,46): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                buffer_add_int (buf, mono_method_get_token(method));\r\n                                                           ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(114,60): note: passing argument to parameter 'method' here\r\nDO_MONO_API(uint32_t, mono_method_get_token, (MonoMethod * method))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10819,31): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                        if (mono_method_signature (method)->generic_param_count)\r\n                                                   ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(98,72): note: passing argument to parameter 'm' here\r\nDO_MONO_API(MonoMethodSignature*, mono_method_signature, (MonoMethod * m))\r\n                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10832,18): warning: incompatible pointer types initializing 'MonoClass *' (aka 'struct _MonoClass *') with an expression of type 'Il2CppClass *' (aka 'struct Il2CppClass *') [-Wincompatible-pointer-types]\r\n                                                MonoClass *klass = ((MonoMethod *) imethod)->klass;\r\n                                                           ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10836,65): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                                        result = mono_class_inflate_generic_method_full_checked (result, klass, mono_class_get_context (klass), &error);\r\n                                                                                                                 ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(75,101): note: passing argument to parameter 'method' here\r\nDO_MONO_API_NOT_EXPORTED(MonoMethod*, mono_class_inflate_generic_method_full_checked, (MonoMethod * method, MonoClass * klass_hint, MonoGenericContext * context, MonoError * error))\r\n                                                                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10836,15): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                                        result = mono_class_inflate_generic_method_full_checked (result, klass, mono_class_get_context (klass), &error);\r\n                                                               ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10847,32): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                if (mono_method_signature (method)->generic_param_count) {\r\n                                                           ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(98,72): note: passing argument to parameter 'm' here\r\nDO_MONO_API(MonoMethodSignature*, mono_method_signature, (MonoMethod * m))\r\n                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10851,56): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                                MonoGenericInst *inst = mono_method_get_context (method)->method_inst;\r\n                                                                                                 ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(104,73): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoGenericContext*, mono_method_get_context, (MonoMethod * method))\r\n                                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10857,68): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                                                buffer_add_typeid (buf, domain, mono_class_from_mono_type (VM_GENERIC_INST_TYPE_ARGV(inst, i)));\r\n                                                                                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(25,48): note: expanded from macro 'VM_GENERIC_INST_TYPE_ARGV'\r\n#define VM_GENERIC_INST_TYPE_ARGV(inst, index) il2cpp_generic_inst_get_argv(inst, index)\r\n                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10862,76): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                                MonoGenericContainer *container = mono_method_get_generic_container (method);\r\n                                                                                                                     ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(108,85): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoGenericContainer*, mono_method_get_generic_container, (MonoMethod * method))\r\n                                                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10862,29): warning: incompatible pointer types initializing 'Il2CppGenericContainer *' (aka 'struct Il2CppGenericContainer *') with an expression of type 'MonoGenericContainer *' (aka 'struct _MonoGenericContainer *') [-Wincompatible-pointer-types]\r\n                                                MonoGenericContainer *container = mono_method_get_generic_container (method);\r\n                                                                      ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10864,38): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                                count = mono_method_signature (method)->generic_param_count;\r\n                                                                               ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(98,72): note: passing argument to parameter 'm' here\r\nDO_MONO_API(MonoMethodSignature*, mono_method_signature, (MonoMethod * m))\r\n                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10937,58): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                        s = mono_ldstr_checked (domain, mono_class_get_image (method->klass), mono_metadata_token_index (token), &error);\r\n                                                                              ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(92,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(MonoImage*, mono_class_get_image, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10954,41): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                val = mono_method_get_wrapper_data (method, token);\r\n                                                                    ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(109,77): note: passing argument to parameter 'method' here\r\nDO_MONO_API_NOT_EXPORTED(void*, mono_method_get_wrapper_data, (MonoMethod * method, uint32_t id))\r\n                                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10955,63): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                handle_class = (MonoClass *)mono_method_get_wrapper_data (method, token + 1);\r\n                                                                                          ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(109,77): note: passing argument to parameter 'method' here\r\nDO_MONO_API_NOT_EXPORTED(void*, mono_method_get_wrapper_data, (MonoMethod * method, uint32_t id))\r\n                                                                            ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10963,55): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                                val = mono_ldtoken_checked (mono_class_get_image (method->klass), token, &handle_class, NULL, &error);\r\n                                                                                  ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(92,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(MonoImage*, mono_class_get_image, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10968,21): warning: comparison of distinct pointer types ('MonoClass *' (aka 'struct _MonoClass *') and 'Il2CppClass *' (aka 'struct Il2CppClass *')) [-Wcompare-distinct-pointer-types]\r\n                        if (handle_class == mono_defaults.typehandle_class) {\r\n                            ~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10973,65): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_typeid (buf, domain, mono_class_from_mono_type ((MonoType*)val));\r\n                                                                                                   ^~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10974,28): warning: comparison of distinct pointer types ('MonoClass *' (aka 'struct _MonoClass *') and 'Il2CppClass *' (aka 'struct Il2CppClass *')) [-Wcompare-distinct-pointer-types]\r\n                        } else if (handle_class == mono_defaults.fieldhandle_class) {\r\n                                   ~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10977,28): warning: comparison of distinct pointer types ('MonoClass *' (aka 'struct _MonoClass *') and 'Il2CppClass *' (aka 'struct Il2CppClass *')) [-Wcompare-distinct-pointer-types]\r\n                        } else if (handle_class == mono_defaults.methodhandle_class) {\r\n                                   ~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(10980,28): warning: comparison of distinct pointer types ('MonoClass *' (aka 'struct _MonoClass *') and 'Il2CppClass *' (aka 'struct Il2CppClass *')) [-Wcompare-distinct-pointer-types]\r\n                        } else if (handle_class == mono_defaults.string_class) {\r\n                                   ~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11044,18): warning: incompatible pointer types assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        type_argv [i] = mono_class_get_type(klass);\r\n                                      ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11046,54): warning: incompatible pointer types passing 'Il2CppType **' (aka 'struct Il2CppType **') to parameter of type 'MonoType **' (aka 'struct _MonoType **') [-Wincompatible-pointer-types]\r\n                ginst = mono_metadata_get_generic_inst (type_argc, type_argv);\r\n                                                                   ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(196,103): note: passing argument to parameter 'type_argv' here\r\nDO_MONO_API_NOT_EXPORTED(MonoGenericInst*, mono_metadata_get_generic_inst, (int type_argc, MonoType** type_argv))\r\n                                                                                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11048,49): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                tmp_context.class_inst = mono_class_is_ginst (method->klass) ? mono_generic_class_get_context (mono_class_get_generic_class (method->klass))->class_inst : NULL;\r\n                                                              ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(85,69): note: passing argument to parameter 'klass' here\r\nDO_MONO_API_NOT_EXPORTED(int32_t, mono_class_is_ginst, (MonoClass * klass))\r\n                                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11048,128): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                tmp_context.class_inst = mono_class_is_ginst (method->klass) ? mono_generic_class_get_context (mono_class_get_generic_class (method->klass))->class_inst : NULL;\r\n                                                                                                                                             ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(82,88): note: passing argument to parameter 'monoClass' here\r\nDO_MONO_API_NOT_EXPORTED(MonoGenericClass*, mono_class_get_generic_class, (MonoClass * monoClass))\r\n                                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11051,57): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                inflated = mono_class_inflate_generic_method_checked (method, &tmp_context, &error);\r\n                                                                      ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(76,96): note: passing argument to parameter 'method' here\r\nDO_MONO_API_NOT_EXPORTED(MonoMethod*, mono_class_inflate_generic_method_checked, (MonoMethod * method, MonoGenericContext * context, MonoError * error))\r\n                                                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11051,12): warning: incompatible pointer types assigning to 'MethodInfo *' (aka 'struct MethodInfo *') from 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                inflated = mono_class_inflate_generic_method_checked (method, &tmp_context, &error);\r\n                         ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11053,61): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                if (!mono_verifier_is_method_valid_generic_instantiation (inflated))\r\n                                                                          ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(216,102): note: passing argument to parameter 'method' here\r\nDO_MONO_API_NOT_EXPORTED(int32_t, mono_verifier_is_method_valid_generic_instantiation, (MonoMethod * method))\r\n                                                                                                     ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11105,40): warning: incompatible pointer types passing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') to parameter of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n                gunichar2 *s = mono_thread_get_name (thread, &name_len);\r\n                                                     ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(152,81): note: passing argument to parameter 'this_obj' here\r\nDO_MONO_API_NOT_EXPORTED(uint16_t*, mono_thread_get_name, (MonoInternalThread * this_obj, uint32_t * name_len))\r\n                                                                                ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11245,10): warning: assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'const Il2CppType *' (aka 'const struct Il2CppType *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                        *type = il2cpp_method_get_param (frame->actual_method, variablePosition);\r\n                              ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11257,137): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                *type = il2cpp_type_inflate ( il2cpp_get_type_from_index (executionContextInfo[variablePosition].typeIndex), mono_method_get_context (frame->actual_method));\r\n                                                                                                                                                      ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(104,73): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoGenericContext*, mono_method_get_context, (MonoMethod * method))\r\n                                                                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11257,33): warning: passing 'const Il2CppType *' (aka 'const struct Il2CppType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                *type = il2cpp_type_inflate ( il2cpp_get_type_from_index (executionContextInfo[variablePosition].typeIndex), mono_method_get_context (frame->actual_method));\r\n                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(82,47): note: passing argument to parameter 'type' here\r\nconst MonoType* il2cpp_type_inflate(MonoType* type, const MonoGenericContext* context);\r\n                                              ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11257,9): warning: assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'const Il2CppType *' (aka 'const struct Il2CppType *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n                *type = il2cpp_type_inflate ( il2cpp_get_type_from_index (executionContextInfo[variablePosition].typeIndex), mono_method_get_context (frame->actual_method));\r\n                      ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11335,31): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n        sig = mono_method_signature (frame->actual_method);\r\n                                     ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(98,72): note: passing argument to parameter 'm' here\r\nDO_MONO_API(MonoMethodSignature*, mono_method_signature, (MonoMethod * m))\r\n                                                                       ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11349,44): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                header = mono_method_get_header_checked (frame->actual_method, &error);\r\n                                                         ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(105,78): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoMethodHeader*, mono_method_get_header_checked, (MonoMethod * method, MonoError * error))\r\n                                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11365,34): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value_full (buf, sig->params [pos], addr, frame->domain, FALSE, NULL);\r\n                                                                    ^~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7259,58): note: passing argument to parameter 't' here\r\nstatic void buffer_add_value_full(Buffer *buf, MonoType *t, void *addr, MonoDomain *domain,\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11369,25): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                        add_var (buf, jit, sig->params [pos], &jit->params [pos], &frame->ctx, frame->domain, FALSE);\r\n                                                           ^~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7955,62): note: passing argument to parameter 't' here\r\nadd_var (Buffer *buf, MonoDebugMethodJitInfo *jit, MonoType *t, MonoDebugVarInfo *var, MonoContext *ctx, MonoDomain *domain, gboolean as_vtype)\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11374,40): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                locals = mono_debug_lookup_locals (frame->method);\r\n                                                                   ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(100,75): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoDebugLocalsInfo*, mono_debug_lookup_locals, (MonoMethod * method))\r\n                                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11388,34): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                        buffer_add_value_full (buf, header->locals [pos], addr, frame->domain, FALSE, NULL);\r\n                                                                    ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7259,58): note: passing argument to parameter 't' here\r\nstatic void buffer_add_value_full(Buffer *buf, MonoType *t, void *addr, MonoDomain *domain,\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11392,25): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                        add_var (buf, jit, header->locals [pos], &jit->locals [pos], &frame->ctx, frame->domain, FALSE);\r\n                                                           ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7955,62): note: passing argument to parameter 't' here\r\nadd_var (Buffer *buf, MonoDebugMethodJitInfo *jit, MonoType *t, MonoDebugVarInfo *var, MonoContext *ctx, MonoDomain *domain, gboolean as_vtype)\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11402,32): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                if (mono_class_is_valuetype (frame->api_method->klass)) {\r\n                                             ^~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(80,60): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(int32_t, mono_class_is_valuetype, (MonoClass * klass))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11405,28): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                buffer_add_value (buf, mono_class_get_type (VM_DEFAULTS_OBJECT_CLASS), &p, frame->domain);\r\n                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11420,49): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                                buffer_add_value (buf, mono_class_get_type (frame->actual_method->klass), &p, frame->domain);\r\n                                                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(89,58): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(MonoType*, mono_class_get_type, (MonoClass * klass))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11420,28): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                buffer_add_value (buf, mono_class_get_type (frame->actual_method->klass), &p, frame->domain);\r\n                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11443,44): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                header = mono_method_get_header_checked (frame->actual_method, &error);\r\n                                                         ^~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(105,78): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoMethodHeader*, mono_method_get_header_checked, (MonoMethod * method, MonoError * error))\r\n                                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11454,7): warning: incompatible pointer types assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                t = sig->params [pos];\r\n                                  ^ ~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11460,40): warning: incompatible pointer types passing 'MethodInfo *' (aka 'struct MethodInfo *') to parameter of type 'MonoMethod *' (aka 'struct _MonoMethod *') [-Wincompatible-pointer-types]\r\n                                locals = mono_debug_lookup_locals (frame->method);\r\n                                                                   ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(100,75): note: passing argument to parameter 'method' here\r\nDO_MONO_API(MonoDebugLocalsInfo*, mono_debug_lookup_locals, (MonoMethod * method))\r\n                                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11468,7): warning: incompatible pointer types assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                t = header->locals [pos];\r\n                                  ^ ~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11472,32): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                        if (MONO_TYPE_IS_REFERENCE (t))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\metadata.h(19,59): note: expanded from macro 'MONO_TYPE_IS_REFERENCE'\r\n#define MONO_TYPE_IS_REFERENCE(t) mono_type_is_reference (t)\r\n                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(46,58): note: passing argument to parameter 'type' here\r\nDO_MONO_API(int32_t, mono_type_is_reference, (MonoType * type))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11475,88): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                                val_buf = (guint8 *)g_alloca (mono_class_instance_size (mono_class_from_mono_type (t)));\r\n                                                                                                                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(148,33): note: expanded from macro 'g_alloca'\r\n#define g_alloca(size)          alloca (size)\r\n                                        ^~~~\r\nC:\\Program Files\\Unity\\Hub\\Editor\\2021.3.22f1\\Editor\\Data\\PlaybackEngines\\AndroidPlayer\\NDK\\toolchains\\llvm\\prebuilt\\windows-x86_64\\sysroot\\usr\\include\\alloca.h(46,41): note: expanded from macro 'alloca'\r\n#define alloca(size)   __builtin_alloca(size)\r\n                                        ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11509,28): warning: incompatible pointer types passing 'Il2CppClass *' (aka 'struct Il2CppClass *') to parameter of type 'MonoClass *' (aka 'struct _MonoClass *') [-Wincompatible-pointer-types]\r\n                t = mono_class_get_type (frame->actual_method->klass);\r\n                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(89,58): note: passing argument to parameter 'klass' here\r\nDO_MONO_API(MonoType*, mono_class_get_type, (MonoClass * klass))\r\n                                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11509,5): warning: incompatible pointer types assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                t = mono_class_get_type (frame->actual_method->klass);\r\n                  ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11511,33): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                g_assert (MONO_TYPE_ISSTRUCT (t));\r\n                                              ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\metadata\\metadata.h(16,52): note: expanded from macro 'MONO_TYPE_ISSTRUCT'\r\n#define MONO_TYPE_ISSTRUCT(t) mono_type_is_struct (t)\r\n                                                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(733,59): note: expanded from macro 'g_assert'\r\n#define  g_assert(x)     G_STMT_START { if (G_UNLIKELY (!(x))) g_assertion_message (\"* Assertion at %s:%d, condition `%s' not met\\n\", __FILE__, __LINE__, #x);  } G_STMT_END\r\n                                                          ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(719,46): note: expanded from macro 'G_UNLIKELY'\r\n#define G_UNLIKELY(expr) (__builtin_expect ((expr) != 0, 0))\r\n                                             ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(45,55): note: passing argument to parameter 'type' here\r\nDO_MONO_API(int32_t, mono_type_is_struct, (MonoType * type))\r\n                                                      ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11513,86): warning: incompatible pointer types passing 'Il2CppType *' (aka 'struct Il2CppType *') to parameter of type 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                val_buf = (guint8 *)g_alloca (mono_class_instance_size (mono_class_from_mono_type (t)));\r\n                                                                                                   ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\eglib\\glib.h(148,33): note: expanded from macro 'g_alloca'\r\n#define g_alloca(size)          alloca (size)\r\n                                        ^~~~\r\nC:\\Program Files\\Unity\\Hub\\Editor\\2021.3.22f1\\Editor\\Data\\PlaybackEngines\\AndroidPlayer\\NDK\\toolchains\\llvm\\prebuilt\\windows-x86_64\\sysroot\\usr\\include\\alloca.h(46,41): note: expanded from macro 'alloca'\r\n#define alloca(size)   __builtin_alloca(size)\r\n                                        ^~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(59,64): note: passing argument to parameter 'type' here\r\nDO_MONO_API(MonoClass*, mono_class_from_mono_type, (MonoType * type))\r\n                                                               ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11553,68): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                buffer_add_int (buf, mono_class_get_rank (mono_object_get_class (&arr->obj)));\r\n                                                                                 ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11558,64): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                        for (i = 0; i < mono_class_get_rank (mono_object_get_class (&arr->obj)); ++i) {\r\n                                                                                    ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11572,59): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                esize = mono_array_element_size (mono_object_get_class (&arr->obj));\r\n                                                                        ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11575,101): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                        buffer_add_value (buf, mono_class_get_type (mono_class_get_element_class (mono_object_get_class (&arr->obj))), elem, VM_OBJECT_GET_DOMAIN(arr));\r\n                                                                                                                         ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11575,27): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                        buffer_add_value (buf, mono_class_get_type (mono_class_get_element_class (mono_object_get_class (&arr->obj))), elem, VM_OBJECT_GET_DOMAIN(arr));\r\n                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11586,59): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                esize = mono_array_element_size (mono_object_get_class (&arr->obj));\r\n                                                                        ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11589,92): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                        decode_value (mono_class_get_type (mono_class_get_element_class (mono_object_get_class (&arr->obj))), VM_OBJECT_GET_DOMAIN(arr), (guint8 *)elem, p, &p, end);\r\n                                                                                                                ^~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11589,18): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                        decode_value (mono_class_get_type (mono_class_get_element_class (mono_object_get_class (&arr->obj))), VM_OBJECT_GET_DOMAIN(arr), (guint8 *)elem, p, &p, end);\r\n                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7907,25): note: passing argument to parameter 't' here\r\ndecode_value (MonoType *t, MonoDomain *domain, guint8 *addr, guint8 *buf, guint8 **endbuf, guint8 *limit)\r\n                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11720,8): warning: incompatible pointer types assigning to 'Il2CppType *' (aka 'struct Il2CppType *') from 'MonoType *' (aka 'struct _MonoType *') [-Wincompatible-pointer-types]\r\n                type =  mono_class_get_type (mono_class_get_element_class(klass));\r\n                     ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11766,36): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n        obj_type = mono_object_get_class (obj);\r\n                                          ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11777,77): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                buffer_add_typeid (buf, VM_OBJECT_GET_DOMAIN(obj), mono_object_get_class (obj));\r\n                                                                                          ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(139,62): note: passing argument to parameter 'obj' here\r\nDO_MONO_API(MonoClass*, mono_object_get_class, (MonoObject * obj))\r\n                                                             ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11817,28): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                buffer_add_value (buf, mono_field_get_type (f), val, VM_OBJECT_GET_DOMAIN(obj));\r\n                                                       ^~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11836,28): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                buffer_add_value (buf, mono_field_get_type (f), field_value, VM_OBJECT_GET_DOMAIN(obj));\r\n                                                       ^~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7657,42): note: passing argument to parameter 't' here\r\nbuffer_add_value (Buffer *buf, MonoType *t, void *addr, MonoDomain *domain)\r\n                                         ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11870,25): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                err = decode_value (mono_field_get_type (f), VM_OBJECT_GET_DOMAIN(obj), val, p, &p, end);\r\n                                                    ^~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7907,25): note: passing argument to parameter 't' here\r\ndecode_value (MonoType *t, MonoDomain *domain, guint8 *addr, guint8 *buf, guint8 **endbuf, guint8 *limit)\r\n                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11878,25): warning: incompatible pointer types passing 'MonoType *' (aka 'struct _MonoType *') to parameter of type 'Il2CppType *' (aka 'struct Il2CppType *') [-Wincompatible-pointer-types]\r\n                                err = decode_value (mono_field_get_type (f), VM_OBJECT_GET_DOMAIN(obj), (guint8*)obj + mono_field_get_offset (f), p, &p, end);\r\n                                                    ^~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(7907,25): note: passing argument to parameter 't' here\r\ndecode_value (MonoType *t, MonoDomain *domain, guint8 *addr, guint8 *buf, guint8 **endbuf, guint8 *limit)\r\n                        ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(11891,101): warning: incompatible pointer types passing 'Il2CppObject *' (aka 'struct Il2CppObject *') to parameter of type 'MonoObject *' (aka 'struct _MonoObject *') [-Wincompatible-pointer-types]\r\n                buffer_add_typeid (buf, VM_OBJECT_GET_DOMAIN(obj), mono_class_from_mono_type(mono_object_get_type(obj)));\r\n                                                                                                                  ^~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(138,60): note: passing argument to parameter 'object' here\r\nDO_MONO_API(MonoType*, mono_object_get_type, (MonoObject * object))\r\n                                                           ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12189,14): warning: incompatible pointer types initializing 'Il2CppThread *' (aka 'struct Il2CppThread *') with an expression of type 'MonoThread *' (aka 'struct _MonoThread *') [-Wincompatible-pointer-types]\r\n        MonoThread *thread = mono_thread_attach (mono_get_root_domain ());\r\n                    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12192,22): warning: incompatible pointer types initializing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') with an expression of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n        MonoInternalThread *internal = mono_thread_internal_current ();\r\n                            ^          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12198,33): warning: incompatible pointer types passing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') to parameter of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n        mono_thread_set_name_internal (internal, str, TRUE, FALSE, &error);\r\n                                       ^~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(153,85): note: passing argument to parameter 'this_obj' here\r\nDO_MONO_API_NOT_EXPORTED(void, mono_thread_set_name_internal, (MonoInternalThread * this_obj, MonoString * name, int32_t permanent, int32_t reset, MonoError * error))\r\n                                                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12216,54): warning: incompatible pointer types passing 'MonoDomain *' (aka 'struct _MonoDomain *') to parameter of type 'MonoAppDomain *' (aka 'struct _MonoAppDomain *') [-Wincompatible-pointer-types]\r\n                                AgentDomainInfo *info = VM_DOMAIN_GET_AGENT_INFO(domain);\r\n                                                                                 ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(12,71): note: expanded from macro 'VM_DOMAIN_GET_AGENT_INFO'\r\n#define VM_DOMAIN_GET_AGENT_INFO(domain) il2cpp_domain_get_agent_info(domain)\r\n                                                                      ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\debugger\\il2cpp-api-debugger.h(92,51): note: passing argument to parameter 'domain' here\r\nvoid* il2cpp_domain_get_agent_info(MonoAppDomain* domain);\r\n                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12219,17): warning: using the result of an assignment as a condition without parentheses [-Wparentheses]\r\n                                while(klass = il2cpp_iterate_loaded_classes(&iter))\r\n                                      ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12219,17): note: place parentheses around the assignment to silence this warning\r\n                                while(klass = il2cpp_iterate_loaded_classes(&iter))\r\n                                            ^\r\n                                      (                                           )\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12219,17): note: use '==' to turn this assignment into an equality comparison\r\n                                while(klass = il2cpp_iterate_loaded_classes(&iter))\r\n                                            ^\r\n                                            ==\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12378,22): warning: incompatible pointer types passing 'Il2CppThread *' (aka 'struct Il2CppThread *') to parameter of type 'MonoThread *' (aka 'struct _MonoThread *') [-Wincompatible-pointer-types]\r\n        mono_thread_detach (thread);\r\n                            ^~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\libil2cpp\\il2cpp-mono-api-functions.h(147,53): note: passing argument to parameter 'thread' here\r\nDO_MONO_API(void, mono_thread_detach, (MonoThread * thread))\r\n                                                    ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12410,14): warning: initializing 'MethodInfo *' (aka 'struct MethodInfo *') with an expression of type 'const MethodInfo *' (aka 'const struct MethodInfo *') discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]\r\n        MonoMethod* method = il2cpp_get_seq_point_method(sequencePoint);\r\n                    ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12509,59): warning: incompatible pointer types passing 'Il2CppSequencePoint *' (aka 'struct Il2CppSequencePoint *') to parameter of type 'MonoJitInfo *' (aka 'struct _MonoJitInfo *') [-Wincompatible-pointer-types]\r\n                ss_events = create_event_list(EVENT_KIND_STEP, ss_reqs, sequencePoint, NULL, &suspend_policy);\r\n                                                                        ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3806,67): note: passing argument to parameter 'ji' here\r\ncreate_event_list (EventKind event, GPtrArray *reqs, MonoJitInfo *ji, DebuggerEventInfo *ei, int *suspend_policy)\r\n                                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12511,65): warning: incompatible pointer types passing 'Il2CppSequencePoint *' (aka 'struct Il2CppSequencePoint *') to parameter of type 'MonoJitInfo *' (aka 'struct _MonoJitInfo *') [-Wincompatible-pointer-types]\r\n                bp_events = create_event_list(EVENT_KIND_BREAKPOINT, bp_reqs, sequencePoint, NULL, &suspend_policy);\r\n                                                                              ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3806,67): note: passing argument to parameter 'ji' here\r\ncreate_event_list (EventKind event, GPtrArray *reqs, MonoJitInfo *ji, DebuggerEventInfo *ei, int *suspend_policy)\r\n                                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12513,54): warning: incompatible pointer types passing 'Il2CppSequencePoint *' (aka 'struct Il2CppSequencePoint *') to parameter of type 'MonoJitInfo *' (aka 'struct _MonoJitInfo *') [-Wincompatible-pointer-types]\r\n                enter_leave_events = create_event_list(kind, NULL, sequencePoint, NULL, &suspend_policy);\r\n                                                                   ^~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(3806,67): note: passing argument to parameter 'ji' here\r\ncreate_event_list (EventKind event, GPtrArray *reqs, MonoJitInfo *ji, DebuggerEventInfo *ei, int *suspend_policy)\r\n                                                                  ^\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12604,22): warning: incompatible pointer types initializing 'Il2CppInternalThread *' (aka 'struct Il2CppInternalThread *') with an expression of type 'MonoInternalThread *' (aka 'struct _MonoInternalThread *') [-Wincompatible-pointer-types]\r\n        MonoInternalThread *thread = mono_thread_internal_current();\r\n                            ^        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nC:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\Il2CppOutputProject\\IL2CPP\\external\\mono\\mono\\mini\\debugger-agent.c(12610,48): warning: incompatible pointer types passing 'Il2CppThreadUnwindState **' (aka 'struct Il2CppThreadUnwindState **') to parameter of type 'Il2CppThreadUnwindState *' (aka 'struct Il2CppThreadUnwindState *'); remove & [-Wincompatible-pointer-types]\r\n        callbacks.il2cpp_debugger_save_thread_context(&tls->il2cpp_context, -1);\r\n                                                      ^~~~~~~~~~~~~~~~~~~~\r\n348 warnings generated."}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/p0eksv2dn14i.o","index":32}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/p0eksv2dn14i.o","index":32}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/e70zyvym60b1.o","index":31}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/e70zyvym60b1.o","index":31}
{"msg":"noderesult","processed_node_count":476,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/tp89icll7dxh.o","index":44,"exitcode":0,"outputfile":"nwd5\\tp89icll7dxh.o"}
{"msg":"noderesult","processed_node_count":477,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/ojffwziafkkr.o","index":42,"exitcode":0,"outputfile":"nwd5\\ojffwziafkkr.o"}
{"msg":"noderesult","processed_node_count":478,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/kn85on42dw1c.o","index":43,"exitcode":0,"outputfile":"nwd5\\kn85on42dw1c.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/eex46bvh8ml1.o","index":30}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/eex46bvh8ml1.o","index":30}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/snrws677moys.o","index":446}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/snrws677moys.o","index":446}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/2tgj8vjrlkji.o","index":445}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/2tgj8vjrlkji.o","index":445}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/lahkhsk72kjt.o","index":37}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/lahkhsk72kjt.o","index":37}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/ddf6puf5e72i.o","index":34}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/ddf6puf5e72i.o","index":34}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/hhgmjh2fyr58.o","index":36}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/hhgmjh2fyr58.o","index":36}
{"msg":"noderesult","processed_node_count":479,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/l97eu1vzgc6d.o","index":39,"exitcode":0,"outputfile":"nwd5\\l97eu1vzgc6d.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/d6asmwadqv8w.o","index":444}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/d6asmwadqv8w.o","index":444}
{"msg":"noderesult","processed_node_count":480,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/hnurtvy1q6gx.o","index":41,"exitcode":0,"outputfile":"nwd5\\hnurtvy1q6gx.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/pxc1ot5s177p.o","index":443}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/pxc1ot5s177p.o","index":443}
{"msg":"noderesult","processed_node_count":481,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/d4oju02d2z63.o","index":45,"exitcode":0,"outputfile":"nwd5\\d4oju02d2z63.o"}
{"msg":"noderesult","processed_node_count":482,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/dl8vvc0p0dd2.o","index":38,"exitcode":0,"outputfile":"nwd5\\dl8vvc0p0dd2.o"}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/drfkmkbqmwzf.o","index":442}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/drfkmkbqmwzf.o","index":442}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/1lfjvpgdyc1q.o","index":441}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/1lfjvpgdyc1q.o","index":441}
{"msg":"noderesult","processed_node_count":483,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/7fv3hbnxfm84.o","index":35,"exitcode":0,"outputfile":"nwd5\\7fv3hbnxfm84.o"}
{"msg":"noderesult","processed_node_count":484,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/p0eksv2dn14i.o","index":32,"exitcode":0,"outputfile":"nwd5\\p0eksv2dn14i.o"}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/dzd211bxb7iw.o","index":18}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/dzd211bxb7iw.o","index":18}
{"msg":"noderesult","processed_node_count":485,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/6m1lo2dqvkr2.o","index":40,"exitcode":0,"outputfile":"nwd5\\6m1lo2dqvkr2.o"}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/f6p8muaxuqqu.o","index":17}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/f6p8muaxuqqu.o","index":17}
{"msg":"noderesult","processed_node_count":486,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/e70zyvym60b1.o","index":31,"exitcode":0,"outputfile":"nwd5\\e70zyvym60b1.o"}
{"msg":"noderesult","processed_node_count":487,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/snrws677moys.o","index":446,"exitcode":0,"outputfile":"q8q9\\snrws677moys.o"}
{"msg":"noderesult","processed_node_count":488,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/2tgj8vjrlkji.o","index":445,"exitcode":0,"outputfile":"q8q9\\2tgj8vjrlkji.o"}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/tatvm3o22o3y.o","index":15}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/tatvm3o22o3y.o","index":15}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/ikp0szum49as.o","index":16}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/ikp0szum49as.o","index":16}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/6gtlpxl33tej.o","index":13}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/6gtlpxl33tej.o","index":13}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/sa3pkhttynty.o","index":14}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/sa3pkhttynty.o","index":14}
{"msg":"noderesult","processed_node_count":489,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/d6asmwadqv8w.o","index":444,"exitcode":0,"outputfile":"q8q9\\d6asmwadqv8w.o"}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/di7b7sb2tc75.o","index":12}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/di7b7sb2tc75.o","index":12}
{"msg":"noderesult","processed_node_count":490,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/lahkhsk72kjt.o","index":37,"exitcode":0,"outputfile":"nwd5\\lahkhsk72kjt.o"}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/ltjjs01vaehc.o","index":11}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/ltjjs01vaehc.o","index":11}
{"msg":"noderesult","processed_node_count":491,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/ddf6puf5e72i.o","index":34,"exitcode":0,"outputfile":"nwd5\\ddf6puf5e72i.o"}
{"msg":"noderesult","processed_node_count":491,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/pxc1ot5s177p.o","index":443,"exitcode":0,"outputfile":"q8q9\\pxc1ot5s177p.o"}
{"msg":"noderesult","processed_node_count":493,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/bx6356gli0fz.o","index":33,"exitcode":0,"outputfile":"nwd5\\bx6356gli0fz.o"}
{"msg":"noderesult","processed_node_count":494,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/drfkmkbqmwzf.o","index":442,"exitcode":0,"outputfile":"q8q9\\drfkmkbqmwzf.o"}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/r59bzxxo6vme.o","index":9}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/r59bzxxo6vme.o","index":9}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/2n2ktbsbhzpp.o","index":8}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/2n2ktbsbhzpp.o","index":8}
{"msg":"noderesult","processed_node_count":495,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/hhgmjh2fyr58.o","index":36,"exitcode":0,"outputfile":"nwd5\\hhgmjh2fyr58.o"}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/a4g6lqymnrn7.o","index":10}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/a4g6lqymnrn7.o","index":10}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/wqy73ylodk0v.o","index":7}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/wqy73ylodk0v.o","index":7}
{"msg":"noderesult","processed_node_count":496,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/1lfjvpgdyc1q.o","index":441,"exitcode":0,"outputfile":"q8q9\\1lfjvpgdyc1q.o"}
{"msg":"newNode","annotation":"C_Android_arm32 o1sj/4qy28hgvf7va.o","index":6}
{"msg":"runNodeAction","annotation":"C_Android_arm32 o1sj/4qy28hgvf7va.o","index":6}
{"msg":"newNode","annotation":"C_Android_arm32 q8q9/8xwcafn9fxx4.o","index":440}
{"msg":"runNodeAction","annotation":"C_Android_arm32 q8q9/8xwcafn9fxx4.o","index":440}
{"msg":"noderesult","processed_node_count":497,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/f6p8muaxuqqu.o","index":17,"exitcode":0,"outputfile":"o1sj\\f6p8muaxuqqu.o"}
{"msg":"newNode","annotation":"C_Android_arm32 aa4b/b4xvgdn6zuwb.o","index":3}
{"msg":"runNodeAction","annotation":"C_Android_arm32 aa4b/b4xvgdn6zuwb.o","index":3}
{"msg":"noderesult","processed_node_count":498,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/dzd211bxb7iw.o","index":18,"exitcode":0,"outputfile":"o1sj\\dzd211bxb7iw.o"}
{"msg":"noderesult","processed_node_count":499,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/tatvm3o22o3y.o","index":15,"exitcode":0,"outputfile":"o1sj\\tatvm3o22o3y.o"}
{"msg":"newNode","annotation":"C_Android_arm32 nwd5/3lcym68ed8l6.o","index":63}
{"msg":"runNodeAction","annotation":"C_Android_arm32 nwd5/3lcym68ed8l6.o","index":63}
{"msg":"noderesult","processed_node_count":500,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 tapa/gi6cmqlv3js9.o","index":185,"exitcode":0,"outputfile":"tapa\\gi6cmqlv3js9.o"}
{"msg":"noderesult","processed_node_count":501,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/6gtlpxl33tej.o","index":13,"exitcode":0,"outputfile":"o1sj\\6gtlpxl33tej.o"}
{"msg":"noderesult","processed_node_count":502,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/ikp0szum49as.o","index":16,"exitcode":0,"outputfile":"o1sj\\ikp0szum49as.o"}
{"msg":"noderesult","processed_node_count":503,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/di7b7sb2tc75.o","index":12,"exitcode":0,"outputfile":"o1sj\\di7b7sb2tc75.o"}
{"msg":"noderesult","processed_node_count":504,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/ltjjs01vaehc.o","index":11,"exitcode":0,"outputfile":"o1sj\\ltjjs01vaehc.o"}
{"msg":"noderesult","processed_node_count":505,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/2n2ktbsbhzpp.o","index":8,"exitcode":0,"outputfile":"o1sj\\2n2ktbsbhzpp.o"}
{"msg":"noderesult","processed_node_count":506,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/sa3pkhttynty.o","index":14,"exitcode":0,"outputfile":"o1sj\\sa3pkhttynty.o"}
{"msg":"noderesult","processed_node_count":507,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/r59bzxxo6vme.o","index":9,"exitcode":0,"outputfile":"o1sj\\r59bzxxo6vme.o"}
{"msg":"noderesult","processed_node_count":508,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 q8q9/8xwcafn9fxx4.o","index":440,"exitcode":0,"outputfile":"q8q9\\8xwcafn9fxx4.o"}
{"msg":"noderesult","processed_node_count":509,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/a4g6lqymnrn7.o","index":10,"exitcode":0,"outputfile":"o1sj\\a4g6lqymnrn7.o"}
{"msg":"noderesult","processed_node_count":510,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/4qy28hgvf7va.o","index":6,"exitcode":0,"outputfile":"o1sj\\4qy28hgvf7va.o"}
{"msg":"noderesult","processed_node_count":511,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 aa4b/b4xvgdn6zuwb.o","index":3,"exitcode":0,"outputfile":"aa4b\\b4xvgdn6zuwb.o"}
{"msg":"noderesult","processed_node_count":511,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/eex46bvh8ml1.o","index":30,"exitcode":0,"outputfile":"nwd5\\eex46bvh8ml1.o"}
{"msg":"noderesult","processed_node_count":513,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 o1sj/wqy73ylodk0v.o","index":7,"exitcode":0,"outputfile":"o1sj\\wqy73ylodk0v.o"}
{"msg":"noderesult","processed_node_count":513,"number_of_nodes_ever_queued":524,"annotation":"C_Android_arm32 nwd5/3lcym68ed8l6.o","index":63,"exitcode":0,"outputfile":"nwd5\\3lcym68ed8l6.o"}
{"msg":"newNode","annotation":"Link_Android_arm32 q8q9/libil2cpp.so","index":516}
{"msg":"runNodeAction","annotation":"Link_Android_arm32 q8q9/libil2cpp.so","index":516}
{"msg":"noderesult","processed_node_count":515,"number_of_nodes_ever_queued":524,"annotation":"Link_Android_arm32 q8q9/libil2cpp.so","index":516,"exitcode":0,"outputfile":"q8q9\\libil2cpp.so"}
{"msg":"newNode","annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.dbg.so","index":517}
{"msg":"runNodeAction","annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.dbg.so","index":517}
{"msg":"noderesult","processed_node_count":516,"number_of_nodes_ever_queued":524,"annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.dbg.so","index":517,"exitcode":0,"outputfile":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\build\\il2cpp_armeabi-v7a_Debug\\il2cpp_cache\\buildstate\\artifacts\\objcopy_drao\\libil2cpp.dbg.so"}
{"msg":"newNode","annotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.sym.so","index":519}
{"msg":"runNodeAction","annotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.sym.so","index":519}
{"msg":"newNode","annotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/stripped/libil2cpp.so","index":518}
{"msg":"runNodeAction","annotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/stripped/libil2cpp.so","index":518}
{"msg":"noderesult","processed_node_count":517,"number_of_nodes_ever_queued":524,"annotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.sym.so","index":519,"exitcode":0,"outputfile":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\build\\il2cpp_armeabi-v7a_Debug\\il2cpp_cache\\buildstate\\artifacts\\objcopy_drao\\libil2cpp.sym.so"}
{"msg":"newNode","annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.sym.so","index":523}
{"msg":"runNodeAction","annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.sym.so","index":523}
{"msg":"noderesult","processed_node_count":518,"number_of_nodes_ever_queued":524,"annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.sym.so","index":523,"exitcode":0,"outputfile":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\jniLibs\\armeabi-v7a\\libil2cpp.sym.so"}
{"msg":"newNode","annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.dbg.so","index":522}
{"msg":"runNodeAction","annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.dbg.so","index":522}
{"msg":"noderesult","processed_node_count":519,"number_of_nodes_ever_queued":524,"annotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/stripped/libil2cpp.so","index":518,"exitcode":0,"outputfile":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\build\\il2cpp_armeabi-v7a_Debug\\il2cpp_cache\\buildstate\\artifacts\\objcopy_drao\\stripped\\libil2cpp.so"}
{"msg":"newNode","annotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.so","index":520}
{"msg":"runNodeAction","annotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.so","index":520}
{"msg":"noderesult","processed_node_count":520,"number_of_nodes_ever_queued":524,"annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.dbg.so","index":522,"exitcode":0,"outputfile":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\jniLibs\\armeabi-v7a\\libil2cpp.dbg.so"}
{"msg":"noderesult","processed_node_count":521,"number_of_nodes_ever_queued":524,"annotation":"NdkObjCopy C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/build/il2cpp_armeabi-v7a_Debug/il2cpp_cache/buildstate/artifacts/objcopy_drao/libil2cpp.so","index":520,"exitcode":0,"outputfile":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\build\\il2cpp_armeabi-v7a_Debug\\il2cpp_cache\\buildstate\\artifacts\\objcopy_drao\\libil2cpp.so"}
{"msg":"newNode","annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.so","index":521}
{"msg":"runNodeAction","annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.so","index":521}
{"msg":"noderesult","processed_node_count":522,"number_of_nodes_ever_queued":524,"annotation":"CopyFiles C:/Users/moksh/OneDrive/Desktop/GitHub/Flutter_MAD-AR_Development/android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.so","index":521,"exitcode":0,"outputfile":"C:\\Users\\moksh\\OneDrive\\Desktop\\GitHub\\Flutter_MAD-AR_Development\\android\\unityLibrary\\src\\main\\jniLibs\\armeabi-v7a\\libil2cpp.so"}
{"msg":"newNode","annotation":"FinalProgram","index":524}
{"msg":"runNodeAction","annotation":"FinalProgram","index":524}
